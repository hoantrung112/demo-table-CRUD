{"ast":null,"code":"import _classCallCheck from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\nvar InputTextarea = /*#__PURE__*/(function () {\n  var InputTextarea = /*#__PURE__*/function () {\n    function InputTextarea(el, ngModel, control, cd) {\n      _classCallCheck(this, InputTextarea);\n\n      this.el = el;\n      this.ngModel = ngModel;\n      this.control = control;\n      this.cd = cd;\n      this.onResize = new EventEmitter();\n    }\n\n    _createClass(InputTextarea, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        if (this.ngModel) {\n          this.ngModelSubscription = this.ngModel.valueChanges.subscribe(function () {\n            _this.updateState();\n          });\n        }\n\n        if (this.control) {\n          this.ngControlSubscription = this.control.valueChanges.subscribe(function () {\n            _this.updateState();\n          });\n        }\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        if (this.autoResize) this.resize();\n        this.updateFilledState();\n        this.cd.detectChanges();\n      }\n    }, {\n      key: \"onInput\",\n      value: function onInput(e) {\n        this.updateState();\n      }\n    }, {\n      key: \"updateFilledState\",\n      value: function updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n      }\n    }, {\n      key: \"onFocus\",\n      value: function onFocus(e) {\n        if (this.autoResize) {\n          this.resize(e);\n        }\n      }\n    }, {\n      key: \"onBlur\",\n      value: function onBlur(e) {\n        if (this.autoResize) {\n          this.resize(e);\n        }\n      }\n    }, {\n      key: \"resize\",\n      value: function resize(event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n          this.el.nativeElement.style.overflowY = \"scroll\";\n          this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        } else {\n          this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event || {});\n      }\n    }, {\n      key: \"updateState\",\n      value: function updateState() {\n        this.updateFilledState();\n\n        if (this.autoResize) {\n          this.resize();\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.ngModelSubscription) {\n          this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n          this.ngControlSubscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return InputTextarea;\n  }();\n\n  InputTextarea.ɵfac = function InputTextarea_Factory(t) {\n    return new (t || InputTextarea)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.NgModel, 8), i0.ɵɵdirectiveInject(i1.NgControl, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  InputTextarea.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: InputTextarea,\n    selectors: [[\"\", \"pInputTextarea\", \"\"]],\n    hostAttrs: [1, \"p-inputtextarea\", \"p-inputtext\", \"p-component\", \"p-element\"],\n    hostVars: 4,\n    hostBindings: function InputTextarea_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function InputTextarea_input_HostBindingHandler($event) {\n          return ctx.onInput($event);\n        })(\"focus\", function InputTextarea_focus_HostBindingHandler($event) {\n          return ctx.onFocus($event);\n        })(\"blur\", function InputTextarea_blur_HostBindingHandler($event) {\n          return ctx.onBlur($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-filled\", ctx.filled)(\"p-inputtextarea-resizable\", ctx.autoResize);\n      }\n    },\n    inputs: {\n      autoResize: \"autoResize\"\n    },\n    outputs: {\n      onResize: \"onResize\"\n    }\n  });\n  return InputTextarea;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar InputTextareaModule = /*#__PURE__*/(function () {\n  var InputTextareaModule = /*#__PURE__*/_createClass(function InputTextareaModule() {\n    _classCallCheck(this, InputTextareaModule);\n  });\n\n  InputTextareaModule.ɵfac = function InputTextareaModule_Factory(t) {\n    return new (t || InputTextareaModule)();\n  };\n\n  InputTextareaModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: InputTextareaModule\n  });\n  InputTextareaModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return InputTextareaModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { InputTextarea, InputTextareaModule }; //# sourceMappingURL=primeng-inputtextarea.mjs.map","map":null,"metadata":{},"sourceType":"module"}