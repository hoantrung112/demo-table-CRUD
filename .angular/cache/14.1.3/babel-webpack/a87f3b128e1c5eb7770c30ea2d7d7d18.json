{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ViewEncapsulation, Inject, Input, Output, ViewChild, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport * as i5 from 'primeng/api';\nimport { ContextMenuService } from 'primeng/api';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { ZIndexUtils } from 'primeng/utils';\nimport * as i4 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nvar _c0 = [\"sublist\"];\nvar _c1 = [\"menuitem\"];\n\nvar _c2 = function _c2(a0) {\n  return {\n    \"p-hidden\": a0\n  };\n};\n\nfunction ContextMenuSub_ng_template_2_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 5, 6);\n  }\n\n  if (rf & 2) {\n    var child_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c2, child_r2.visible === false));\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_a_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n\n  if (rf & 2) {\n    var child_r2 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"ngClass\", child_r2.icon);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_a_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var child_r2 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(child_r2.label);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_a_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n  }\n\n  if (rf & 2) {\n    var child_r2 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"innerHTML\", child_r2.label, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_a_2_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 19);\n  }\n}\n\nvar _c3 = function _c3(a1) {\n  return {\n    \"p-menuitem-link\": true,\n    \"p-disabled\": a1\n  };\n};\n\nfunction ContextMenuSub_ng_template_2_li_1_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function ContextMenuSub_ng_template_2_li_1_a_2_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      i0.ɵɵnextContext();\n\n      var _r8 = i0.ɵɵreference(1);\n\n      var ctx_r21 = i0.ɵɵnextContext();\n      var child_r2 = ctx_r21.$implicit;\n      var index_r3 = ctx_r21.index;\n      var ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.onItemClick($event, child_r2, _r8, ctx_r20.getKey(index_r3)));\n    });\n    i0.ɵɵtemplate(1, ContextMenuSub_ng_template_2_li_1_a_2_span_1_Template, 1, 1, \"span\", 12);\n    i0.ɵɵtemplate(2, ContextMenuSub_ng_template_2_li_1_a_2_span_2_Template, 2, 1, \"span\", 13);\n    i0.ɵɵtemplate(3, ContextMenuSub_ng_template_2_li_1_a_2_ng_template_3_Template, 1, 1, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, ContextMenuSub_ng_template_2_li_1_a_2_span_5_Template, 1, 0, \"span\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r14 = i0.ɵɵreference(4);\n\n    var ctx_r23 = i0.ɵɵnextContext(2);\n    var child_r2 = ctx_r23.$implicit;\n    var index_r3 = ctx_r23.index;\n    var ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c3, child_r2.disabled));\n    i0.ɵɵattribute(\"href\", child_r2.url ? child_r2.url : null, i0.ɵɵsanitizeUrl)(\"target\", child_r2.target)(\"title\", child_r2.title)(\"id\", child_r2.id)(\"tabindex\", child_r2.disabled ? null : \"0\")(\"aria-haspopup\", ctx_r9.item.items != null)(\"aria-expanded\", ctx_r9.isActive(ctx_r9.getKey(index_r3)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r2.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r2.escape !== false)(\"ngIfElse\", _r14);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", child_r2.items);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_a_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n\n  if (rf & 2) {\n    var child_r2 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"ngClass\", child_r2.icon);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_a_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var child_r2 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(child_r2.label);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_a_3_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n  }\n\n  if (rf & 2) {\n    var child_r2 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"innerHTML\", child_r2.label, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_a_3_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 19);\n  }\n}\n\nvar _c4 = function _c4() {\n  return {\n    exact: false\n  };\n};\n\nfunction ContextMenuSub_ng_template_2_li_1_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function ContextMenuSub_ng_template_2_li_1_a_3_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      i0.ɵɵnextContext();\n\n      var _r8 = i0.ɵɵreference(1);\n\n      var ctx_r33 = i0.ɵɵnextContext();\n      var child_r2 = ctx_r33.$implicit;\n      var index_r3 = ctx_r33.index;\n      var ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.onItemClick($event, child_r2, _r8, ctx_r32.getKey(index_r3)));\n    });\n    i0.ɵɵtemplate(1, ContextMenuSub_ng_template_2_li_1_a_3_span_1_Template, 1, 1, \"span\", 12);\n    i0.ɵɵtemplate(2, ContextMenuSub_ng_template_2_li_1_a_3_span_2_Template, 2, 1, \"span\", 13);\n    i0.ɵɵtemplate(3, ContextMenuSub_ng_template_2_li_1_a_3_ng_template_3_Template, 1, 1, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, ContextMenuSub_ng_template_2_li_1_a_3_span_5_Template, 1, 0, \"span\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r26 = i0.ɵɵreference(4);\n\n    var child_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"routerLink\", child_r2.routerLink)(\"queryParams\", child_r2.queryParams)(\"routerLinkActive\", \"p-menuitem-link-active\")(\"routerLinkActiveOptions\", child_r2.routerLinkActiveOptions || i0.ɵɵpureFunction0(19, _c4))(\"ngClass\", i0.ɵɵpureFunction1(20, _c3, child_r2.disabled))(\"fragment\", child_r2.fragment)(\"queryParamsHandling\", child_r2.queryParamsHandling)(\"preserveFragment\", child_r2.preserveFragment)(\"skipLocationChange\", child_r2.skipLocationChange)(\"replaceUrl\", child_r2.replaceUrl)(\"state\", child_r2.state);\n    i0.ɵɵattribute(\"target\", child_r2.target)(\"title\", child_r2.title)(\"id\", child_r2.id)(\"tabindex\", child_r2.disabled ? null : \"0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r2.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r2.escape !== false)(\"ngIfElse\", _r26);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", child_r2.items);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_li_1_p_contextMenuSub_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-contextMenuSub\", 22);\n    i0.ɵɵlistener(\"leafClick\", function ContextMenuSub_ng_template_2_li_1_p_contextMenuSub_4_Template_p_contextMenuSub_leafClick_0_listener() {\n      i0.ɵɵrestoreView(_r37);\n      var ctx_r36 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r36.onLeafClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r38 = i0.ɵɵnextContext(2);\n    var index_r3 = ctx_r38.index;\n    var child_r2 = ctx_r38.$implicit;\n    var ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"parentItemKey\", ctx_r11.getKey(index_r3))(\"item\", child_r2);\n  }\n}\n\nvar _c5 = function _c5(a1, a2) {\n  return {\n    \"p-menuitem\": true,\n    \"p-menuitem-active\": a1,\n    \"p-hidden\": a2\n  };\n};\n\nfunction ContextMenuSub_ng_template_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 7, 6);\n    i0.ɵɵlistener(\"mouseenter\", function ContextMenuSub_ng_template_2_li_1_Template_li_mouseenter_0_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      var ctx_r40 = i0.ɵɵnextContext();\n      var child_r2 = ctx_r40.$implicit;\n      var index_r3 = ctx_r40.index;\n      var ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onItemMouseEnter($event, child_r2, ctx_r39.getKey(index_r3)));\n    })(\"mouseleave\", function ContextMenuSub_ng_template_2_li_1_Template_li_mouseleave_0_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      var child_r2 = i0.ɵɵnextContext().$implicit;\n      var ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onItemMouseLeave($event, child_r2));\n    });\n    i0.ɵɵtemplate(2, ContextMenuSub_ng_template_2_li_1_a_2_Template, 6, 14, \"a\", 8);\n    i0.ɵɵtemplate(3, ContextMenuSub_ng_template_2_li_1_a_3_Template, 6, 22, \"a\", 9);\n    i0.ɵɵtemplate(4, ContextMenuSub_ng_template_2_li_1_p_contextMenuSub_4_Template, 1, 2, \"p-contextMenuSub\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r44 = i0.ɵɵnextContext();\n    var child_r2 = ctx_r44.$implicit;\n    var index_r3 = ctx_r44.index;\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(child_r2.styleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c5, ctx_r5.isActive(ctx_r5.getKey(index_r3)), child_r2.visible === false))(\"ngStyle\", child_r2.style)(\"tooltipOptions\", child_r2.tooltipOptions);\n    i0.ɵɵattribute(\"data-ik\", ctx_r5.getKey(index_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !child_r2.routerLink);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r2.routerLink);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r2.items);\n  }\n}\n\nfunction ContextMenuSub_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContextMenuSub_ng_template_2_li_0_Template, 2, 3, \"li\", 3);\n    i0.ɵɵtemplate(1, ContextMenuSub_ng_template_2_li_1_Template, 5, 12, \"li\", 4);\n  }\n\n  if (rf & 2) {\n    var child_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", child_r2.separator);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !child_r2.separator);\n  }\n}\n\nvar _c6 = function _c6(a0) {\n  return {\n    \"p-submenu-list\": a0\n  };\n};\n\nvar _c7 = [\"container\"];\nvar ContextMenuSub = /*#__PURE__*/(function () {\n  var ContextMenuSub = /*#__PURE__*/function () {\n    function ContextMenuSub(contextMenu) {\n      _classCallCheck(this, ContextMenuSub);\n\n      this.leafClick = new EventEmitter();\n      this.contextMenu = contextMenu;\n    }\n\n    _createClass(ContextMenuSub, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.activeItemKeyChangeSubscription = this.contextMenu.contextMenuService.activeItemKeyChange$.pipe(takeUntil(this.contextMenu.ngDestroy$)).subscribe(function (activeItemKey) {\n          _this.activeItemKey = activeItemKey;\n\n          if (_this.isActive(_this.parentItemKey) && DomHandler.hasClass(_this.sublistViewChild.nativeElement, 'p-submenu-list-active')) {\n            _this.contextMenu.positionSubmenu(_this.sublistViewChild.nativeElement);\n          }\n\n          _this.contextMenu.cd.markForCheck();\n        });\n      }\n    }, {\n      key: \"onItemMouseEnter\",\n      value: function onItemMouseEnter(event, item, key) {\n        if (this.hideTimeout) {\n          clearTimeout(this.hideTimeout);\n          this.hideTimeout = null;\n        }\n\n        if (item.disabled) {\n          return;\n        }\n\n        if (item.items) {\n          var childSublist = DomHandler.findSingle(event.currentTarget, '.p-submenu-list');\n          DomHandler.addClass(childSublist, 'p-submenu-list-active');\n        }\n\n        this.contextMenu.contextMenuService.changeKey(key);\n      }\n    }, {\n      key: \"onItemMouseLeave\",\n      value: function onItemMouseLeave(event, item) {\n        if (item.disabled) {\n          return;\n        }\n\n        if (this.contextMenu.el.nativeElement.contains(event.toElement)) {\n          if (item.items) {\n            this.contextMenu.removeActiveFromSubLists(event.currentTarget);\n          }\n\n          if (!this.root) {\n            this.contextMenu.contextMenuService.changeKey(this.parentItemKey);\n          }\n        }\n      }\n    }, {\n      key: \"onItemClick\",\n      value: function onItemClick(event, item, menuitem, key) {\n        if (item.disabled) {\n          event.preventDefault();\n          return;\n        }\n\n        if (!item.url && !item.routerLink) {\n          event.preventDefault();\n        }\n\n        if (item.command) {\n          item.command({\n            originalEvent: event,\n            item: item\n          });\n        }\n\n        if (item.items) {\n          var childSublist = DomHandler.findSingle(menuitem, '.p-submenu-list');\n\n          if (childSublist) {\n            if (this.isActive(key) && DomHandler.hasClass(childSublist, 'p-submenu-list-active')) {\n              this.contextMenu.removeActiveFromSubLists(menuitem);\n            } else {\n              DomHandler.addClass(childSublist, 'p-submenu-list-active');\n            }\n\n            this.contextMenu.contextMenuService.changeKey(key);\n          }\n        }\n\n        if (!item.items) {\n          this.onLeafClick();\n        }\n      }\n    }, {\n      key: \"onLeafClick\",\n      value: function onLeafClick() {\n        if (this.root) {\n          this.contextMenu.hide();\n        }\n\n        this.leafClick.emit();\n      }\n    }, {\n      key: \"getKey\",\n      value: function getKey(index) {\n        return this.root ? String(index) : this.parentItemKey + '_' + index;\n      }\n    }, {\n      key: \"isActive\",\n      value: function isActive(key) {\n        return this.activeItemKey && (this.activeItemKey.startsWith(key + '_') || this.activeItemKey === key);\n      }\n    }]);\n\n    return ContextMenuSub;\n  }();\n\n  ContextMenuSub.ɵfac = function ContextMenuSub_Factory(t) {\n    return new (t || ContextMenuSub)(i0.ɵɵdirectiveInject(forwardRef(function () {\n      return ContextMenu;\n    })));\n  };\n\n  ContextMenuSub.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ContextMenuSub,\n    selectors: [[\"p-contextMenuSub\"]],\n    viewQuery: function ContextMenuSub_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sublistViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuitemViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      item: \"item\",\n      root: \"root\",\n      parentItemKey: \"parentItemKey\"\n    },\n    outputs: {\n      leafClick: \"leafClick\"\n    },\n    decls: 3,\n    vars: 4,\n    consts: [[3, \"ngClass\"], [\"sublist\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"p-menu-separator\", \"role\", \"separator\", 3, \"ngClass\", 4, \"ngIf\"], [\"pTooltip\", \"\", \"role\", \"none\", 3, \"ngClass\", \"ngStyle\", \"class\", \"tooltipOptions\", \"mouseenter\", \"mouseleave\", 4, \"ngIf\"], [\"role\", \"separator\", 1, \"p-menu-separator\", 3, \"ngClass\"], [\"menuitem\", \"\"], [\"pTooltip\", \"\", \"role\", \"none\", 3, \"ngClass\", \"ngStyle\", \"tooltipOptions\", \"mouseenter\", \"mouseleave\"], [\"pRipple\", \"\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"role\", \"menuitem\", \"pRipple\", \"\", 3, \"routerLink\", \"queryParams\", \"routerLinkActive\", \"routerLinkActiveOptions\", \"ngClass\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"click\", 4, \"ngIf\"], [3, \"parentItemKey\", \"item\", \"leafClick\", 4, \"ngIf\"], [\"pRipple\", \"\", 3, \"ngClass\", \"click\"], [\"class\", \"p-menuitem-icon\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"p-menuitem-text\", 4, \"ngIf\", \"ngIfElse\"], [\"htmlLabel\", \"\"], [\"class\", \"p-submenu-icon pi pi-angle-right\", 4, \"ngIf\"], [1, \"p-menuitem-icon\", 3, \"ngClass\"], [1, \"p-menuitem-text\"], [1, \"p-menuitem-text\", 3, \"innerHTML\"], [1, \"p-submenu-icon\", \"pi\", \"pi-angle-right\"], [\"role\", \"menuitem\", \"pRipple\", \"\", 3, \"routerLink\", \"queryParams\", \"routerLinkActive\", \"routerLinkActiveOptions\", \"ngClass\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"click\"], [\"htmlRouteLabel\", \"\"], [3, \"parentItemKey\", \"item\", \"leafClick\"]],\n    template: function ContextMenuSub_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0, 1);\n        i0.ɵɵtemplate(2, ContextMenuSub_ng_template_2_Template, 2, 2, \"ng-template\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c6, !ctx.root));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.root ? ctx.item : ctx.item.items);\n      }\n    },\n    dependencies: [ContextMenuSub, i1.NgClass, i1.NgForOf, i1.NgIf, i2.Tooltip, i1.NgStyle, i3.Ripple, i4.RouterLinkWithHref, i4.RouterLinkActive],\n    encapsulation: 2\n  });\n  return ContextMenuSub;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ContextMenu = /*#__PURE__*/(function () {\n  var ContextMenu = /*#__PURE__*/function () {\n    function ContextMenu(el, renderer, cd, zone, contextMenuService, config) {\n      _classCallCheck(this, ContextMenu);\n\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.zone = zone;\n      this.contextMenuService = contextMenuService;\n      this.config = config;\n      this.autoZIndex = true;\n      this.baseZIndex = 0;\n      this.triggerEvent = 'contextmenu';\n      this.onShow = new EventEmitter();\n      this.onHide = new EventEmitter();\n      this.ngDestroy$ = new Subject();\n    }\n\n    _createClass(ContextMenu, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this2 = this;\n\n        if (this.global) {\n          var documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n          this.triggerEventListener = this.renderer.listen(documentTarget, this.triggerEvent, function (event) {\n            _this2.show(event);\n\n            event.preventDefault();\n          });\n        } else if (this.target) {\n          this.triggerEventListener = this.renderer.listen(this.target, this.triggerEvent, function (event) {\n            _this2.show(event);\n\n            event.preventDefault();\n            event.stopPropagation();\n          });\n        }\n\n        if (this.appendTo) {\n          if (this.appendTo === 'body') document.body.appendChild(this.containerViewChild.nativeElement);else DomHandler.appendChild(this.containerViewChild.nativeElement, this.appendTo);\n        }\n      }\n    }, {\n      key: \"show\",\n      value: function show(event) {\n        this.clearActiveItem();\n        this.position(event);\n        this.moveOnTop();\n        this.containerViewChild.nativeElement.style.display = 'block';\n        DomHandler.fadeIn(this.containerViewChild.nativeElement, 250);\n        this.bindGlobalListeners();\n\n        if (event) {\n          event.preventDefault();\n        }\n\n        this.onShow.emit();\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        this.containerViewChild.nativeElement.style.display = 'none';\n\n        if (this.autoZIndex) {\n          ZIndexUtils.clear(this.containerViewChild.nativeElement);\n        }\n\n        this.unbindGlobalListeners();\n        this.onHide.emit();\n      }\n    }, {\n      key: \"moveOnTop\",\n      value: function moveOnTop() {\n        if (this.autoZIndex && this.containerViewChild && this.containerViewChild.nativeElement.style.display !== 'block') {\n          ZIndexUtils.set('menu', this.containerViewChild.nativeElement, this.baseZIndex + this.config.zIndex.menu);\n        }\n      }\n    }, {\n      key: \"toggle\",\n      value: function toggle(event) {\n        if (this.containerViewChild.nativeElement.offsetParent) this.hide();else this.show(event);\n      }\n    }, {\n      key: \"position\",\n      value: function position(event) {\n        if (event) {\n          var left = event.pageX + 1;\n          var top = event.pageY + 1;\n          var width = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.containerViewChild.nativeElement);\n          var height = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.containerViewChild.nativeElement);\n          var viewport = DomHandler.getViewport(); //flip\n\n          if (left + width - document.body.scrollLeft > viewport.width) {\n            left -= width;\n          } //flip\n\n\n          if (top + height - document.body.scrollTop > viewport.height) {\n            top -= height;\n          } //fit\n\n\n          if (left < document.body.scrollLeft) {\n            left = document.body.scrollLeft;\n          } //fit\n\n\n          if (top < document.body.scrollTop) {\n            top = document.body.scrollTop;\n          }\n\n          this.containerViewChild.nativeElement.style.left = left + 'px';\n          this.containerViewChild.nativeElement.style.top = top + 'px';\n        }\n      }\n    }, {\n      key: \"positionSubmenu\",\n      value: function positionSubmenu(sublist) {\n        var parentMenuItem = sublist.parentElement.parentElement;\n        var viewport = DomHandler.getViewport();\n        var sublistWidth = sublist.offsetParent ? sublist.offsetWidth : DomHandler.getHiddenElementOuterWidth(sublist);\n        var sublistHeight = sublist.offsetHeight ? sublist.offsetHeight : DomHandler.getHiddenElementOuterHeight(sublist);\n        var itemOuterWidth = DomHandler.getOuterWidth(parentMenuItem.children[0]);\n        var itemOuterHeight = DomHandler.getOuterHeight(parentMenuItem.children[0]);\n        var containerOffset = DomHandler.getOffset(parentMenuItem.parentElement);\n        sublist.style.zIndex = ++DomHandler.zindex;\n\n        if (parseInt(containerOffset.top) + itemOuterHeight + sublistHeight > viewport.height - DomHandler.calculateScrollbarHeight()) {\n          sublist.style.removeProperty('top');\n          sublist.style.bottom = '0px';\n        } else {\n          sublist.style.removeProperty('bottom');\n          sublist.style.top = '0px';\n        }\n\n        if (parseInt(containerOffset.left) + itemOuterWidth + sublistWidth > viewport.width - DomHandler.calculateScrollbarWidth()) {\n          sublist.style.left = -sublistWidth + 'px';\n        } else {\n          sublist.style.left = itemOuterWidth + 'px';\n        }\n      }\n    }, {\n      key: \"isItemMatched\",\n      value: function isItemMatched(menuitem) {\n        return DomHandler.hasClass(menuitem, 'p-menuitem') && !DomHandler.hasClass(menuitem.children[0], 'p-disabled');\n      }\n    }, {\n      key: \"findNextItem\",\n      value: function findNextItem(menuitem, isRepeated) {\n        var nextMenuitem = menuitem.nextElementSibling;\n\n        if (nextMenuitem) {\n          return this.isItemMatched(nextMenuitem) ? nextMenuitem : this.findNextItem(nextMenuitem, isRepeated);\n        } else {\n          var firstItem = menuitem.parentElement.children[0];\n          return this.isItemMatched(firstItem) ? firstItem : !isRepeated ? this.findNextItem(firstItem, true) : null;\n        }\n      }\n    }, {\n      key: \"findPrevItem\",\n      value: function findPrevItem(menuitem, isRepeated) {\n        var prevMenuitem = menuitem.previousElementSibling;\n\n        if (prevMenuitem) {\n          return this.isItemMatched(prevMenuitem) ? prevMenuitem : this.findPrevItem(prevMenuitem, isRepeated);\n        } else {\n          var lastItem = menuitem.parentElement.children[menuitem.parentElement.children.length - 1];\n          return this.isItemMatched(lastItem) ? lastItem : !isRepeated ? this.findPrevItem(lastItem, true) : null;\n        }\n      }\n    }, {\n      key: \"getActiveItem\",\n      value: function getActiveItem() {\n        var activeItemKey = this.contextMenuService.activeItemKey;\n        return activeItemKey == null ? null : DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-menuitem[data-ik=\"' + activeItemKey + '\"]');\n      }\n    }, {\n      key: \"clearActiveItem\",\n      value: function clearActiveItem() {\n        if (this.contextMenuService.activeItemKey) {\n          this.removeActiveFromSubLists(this.containerViewChild.nativeElement);\n          this.contextMenuService.reset();\n        }\n      }\n    }, {\n      key: \"removeActiveFromSubLists\",\n      value: function removeActiveFromSubLists(el) {\n        var sublists = DomHandler.find(el, '.p-submenu-list-active');\n\n        var _iterator = _createForOfIteratorHelper(sublists),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var sublist = _step.value;\n            DomHandler.removeClass(sublist, 'p-submenu-list-active');\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }, {\n      key: \"removeActiveFromSublist\",\n      value: function removeActiveFromSublist(menuitem) {\n        if (menuitem) {\n          var sublist = DomHandler.findSingle(menuitem, '.p-submenu-list');\n\n          if (sublist && DomHandler.hasClass(menuitem, 'p-submenu-list-active')) {\n            DomHandler.removeClass(menuitem, 'p-submenu-list-active');\n          }\n        }\n      }\n    }, {\n      key: \"bindGlobalListeners\",\n      value: function bindGlobalListeners() {\n        var _this3 = this;\n\n        if (!this.documentClickListener) {\n          var documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n          this.documentClickListener = this.renderer.listen(documentTarget, 'click', function (event) {\n            if (_this3.containerViewChild.nativeElement.offsetParent && _this3.isOutsideClicked(event) && !event.ctrlKey && event.button !== 2) {\n              _this3.hide();\n            }\n          });\n        }\n\n        this.zone.runOutsideAngular(function () {\n          if (!_this3.windowResizeListener) {\n            _this3.windowResizeListener = _this3.onWindowResize.bind(_this3);\n            window.addEventListener('resize', _this3.windowResizeListener);\n          }\n        });\n\n        if (!this.documentKeydownListener) {\n          var _documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n          this.documentKeydownListener = this.renderer.listen(_documentTarget, 'keydown', function (event) {\n            var activeItem = _this3.getActiveItem();\n\n            switch (event.key) {\n              case 'ArrowDown':\n                if (activeItem) {\n                  _this3.removeActiveFromSublist(activeItem);\n\n                  activeItem = _this3.findNextItem(activeItem);\n                } else {\n                  var firstItem = DomHandler.findSingle(_this3.containerViewChild.nativeElement, '.p-menuitem-link').parentElement;\n                  activeItem = _this3.isItemMatched(firstItem) ? firstItem : _this3.findNextItem(firstItem);\n                }\n\n                if (activeItem) {\n                  _this3.contextMenuService.changeKey(activeItem.getAttribute('data-ik'));\n                }\n\n                event.preventDefault();\n                break;\n\n              case 'ArrowUp':\n                if (activeItem) {\n                  _this3.removeActiveFromSublist(activeItem);\n\n                  activeItem = _this3.findPrevItem(activeItem);\n                } else {\n                  var sublist = DomHandler.findSingle(_this3.containerViewChild.nativeElement, 'ul');\n                  var lastItem = sublist.children[sublist.children.length - 1];\n                  activeItem = _this3.isItemMatched(lastItem) ? lastItem : _this3.findPrevItem(lastItem);\n                }\n\n                if (activeItem) {\n                  _this3.contextMenuService.changeKey(activeItem.getAttribute('data-ik'));\n                }\n\n                event.preventDefault();\n                break;\n\n              case 'ArrowRight':\n                if (activeItem) {\n                  var _sublist = DomHandler.findSingle(activeItem, '.p-submenu-list');\n\n                  if (_sublist) {\n                    DomHandler.addClass(_sublist, 'p-submenu-list-active');\n                    activeItem = DomHandler.findSingle(_sublist, '.p-menuitem-link:not(.p-disabled)').parentElement;\n\n                    if (activeItem) {\n                      _this3.contextMenuService.changeKey(activeItem.getAttribute('data-ik'));\n                    }\n                  }\n                }\n\n                event.preventDefault();\n                break;\n\n              case 'ArrowLeft':\n                if (activeItem) {\n                  var _sublist2 = activeItem.parentElement;\n\n                  if (_sublist2 && DomHandler.hasClass(_sublist2, 'p-submenu-list-active')) {\n                    DomHandler.removeClass(_sublist2, 'p-submenu-list-active');\n                    activeItem = _sublist2.parentElement.parentElement;\n\n                    if (activeItem) {\n                      _this3.contextMenuService.changeKey(activeItem.getAttribute('data-ik'));\n                    }\n                  }\n                }\n\n                event.preventDefault();\n                break;\n\n              case 'Escape':\n                _this3.hide();\n\n                event.preventDefault();\n                break;\n\n              case 'Enter':\n                if (activeItem) {\n                  _this3.handleItemClick(event, _this3.findModelItemFromKey(_this3.contextMenuService.activeItemKey), activeItem);\n                }\n\n                event.preventDefault();\n                break;\n\n              default:\n                break;\n            }\n          });\n        }\n      }\n    }, {\n      key: \"findModelItemFromKey\",\n      value: function findModelItemFromKey(key) {\n        var _this4 = this;\n\n        if (key == null || !this.model) {\n          return null;\n        }\n\n        var indexes = key.split('_');\n        return indexes.reduce(function (item, currentIndex) {\n          return item ? item.items[currentIndex] : _this4.model[currentIndex];\n        }, null);\n      }\n    }, {\n      key: \"handleItemClick\",\n      value: function handleItemClick(event, item, menuitem) {\n        if (!item || item.disabled) {\n          return;\n        }\n\n        if (item.command) {\n          item.command({\n            originalEvent: event,\n            item: item\n          });\n        }\n\n        if (item.items) {\n          var childSublist = DomHandler.findSingle(menuitem, '.p-submenu-list');\n\n          if (childSublist) {\n            if (DomHandler.hasClass(childSublist, 'p-submenu-list-active')) {\n              this.removeActiveFromSubLists(menuitem);\n            } else {\n              DomHandler.addClass(childSublist, 'p-submenu-list-active');\n              this.positionSubmenu(childSublist);\n            }\n          }\n        }\n\n        if (!item.items) {\n          this.hide();\n        }\n      }\n    }, {\n      key: \"unbindGlobalListeners\",\n      value: function unbindGlobalListeners() {\n        if (this.documentClickListener) {\n          this.documentClickListener();\n          this.documentClickListener = null;\n        }\n\n        if (this.windowResizeListener) {\n          window.removeEventListener('resize', this.windowResizeListener);\n          this.windowResizeListener = null;\n        }\n\n        if (this.documentKeydownListener) {\n          this.documentKeydownListener();\n          this.documentKeydownListener = null;\n        }\n      }\n    }, {\n      key: \"onWindowResize\",\n      value: function onWindowResize(event) {\n        if (this.containerViewChild.nativeElement.offsetParent) {\n          this.hide();\n        }\n      }\n    }, {\n      key: \"isOutsideClicked\",\n      value: function isOutsideClicked(event) {\n        return !(this.containerViewChild.nativeElement.isSameNode(event.target) || this.containerViewChild.nativeElement.contains(event.target));\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.unbindGlobalListeners();\n\n        if (this.triggerEventListener) {\n          this.triggerEventListener();\n        }\n\n        if (this.containerViewChild && this.autoZIndex) {\n          ZIndexUtils.clear(this.containerViewChild.nativeElement);\n        }\n\n        if (this.appendTo) {\n          this.el.nativeElement.appendChild(this.containerViewChild.nativeElement);\n        }\n\n        this.ngDestroy$.next(true);\n        this.ngDestroy$.complete();\n      }\n    }]);\n\n    return ContextMenu;\n  }();\n\n  ContextMenu.ɵfac = function ContextMenu_Factory(t) {\n    return new (t || ContextMenu)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i5.ContextMenuService), i0.ɵɵdirectiveInject(i5.PrimeNGConfig));\n  };\n\n  ContextMenu.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ContextMenu,\n    selectors: [[\"p-contextMenu\"]],\n    viewQuery: function ContextMenu_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      model: \"model\",\n      global: \"global\",\n      target: \"target\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      appendTo: \"appendTo\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      triggerEvent: \"triggerEvent\"\n    },\n    outputs: {\n      onShow: \"onShow\",\n      onHide: \"onHide\"\n    },\n    decls: 3,\n    vars: 6,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [3, \"item\", \"root\"]],\n    template: function ContextMenu_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelement(2, \"p-contextMenuSub\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", \"p-contextmenu p-component\")(\"ngStyle\", ctx.style);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"item\", ctx.model)(\"root\", true);\n      }\n    },\n    dependencies: [ContextMenuSub, i1.NgClass, i1.NgStyle],\n    styles: [\".p-contextmenu{position:absolute;display:none}.p-contextmenu ul{margin:0;padding:0;list-style:none}.p-contextmenu .p-submenu-list{position:absolute;min-width:100%;z-index:1;display:none}.p-contextmenu .p-menuitem-link{cursor:pointer;display:flex;align-items:center;text-decoration:none;overflow:hidden;position:relative}.p-contextmenu .p-menuitem-text{line-height:1}.p-contextmenu .p-menuitem{position:relative}.p-contextmenu .p-menuitem-link .p-submenu-icon{margin-left:auto}.p-contextmenu .p-menuitem-active>p-contextmenusub>.p-submenu-list.p-submenu-list-active{display:block!important}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return ContextMenu;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ContextMenuModule = /*#__PURE__*/(function () {\n  var ContextMenuModule = /*#__PURE__*/_createClass(function ContextMenuModule() {\n    _classCallCheck(this, ContextMenuModule);\n  });\n\n  ContextMenuModule.ɵfac = function ContextMenuModule_Factory(t) {\n    return new (t || ContextMenuModule)();\n  };\n\n  ContextMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ContextMenuModule\n  });\n  ContextMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ContextMenuService],\n    imports: [[CommonModule, RouterModule, RippleModule, TooltipModule], RouterModule, TooltipModule]\n  });\n  return ContextMenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ContextMenu, ContextMenuModule, ContextMenuSub }; //# sourceMappingURL=primeng-contextmenu.mjs.map","map":null,"metadata":{},"sourceType":"module"}