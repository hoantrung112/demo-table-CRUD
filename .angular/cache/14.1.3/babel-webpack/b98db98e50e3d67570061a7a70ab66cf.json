{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Mr_Trung/OneDrive/Desktop/primeng-tablecrud-demo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, Directive, HostListener, Optional, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i9 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { FilterOperator, FilterMatchMode, PrimeTemplate, TranslationKeys, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i8 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i11 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport * as i6 from 'primeng/tristatecheckbox';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport * as i7 from 'primeng/calendar';\nimport { CalendarModule } from 'primeng/calendar';\nimport * as i5 from 'primeng/inputnumber';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport * as i10 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { trigger, transition, style, animate } from '@angular/animations';\nvar _c0 = [\"container\"];\nvar _c1 = [\"resizeHelper\"];\nvar _c2 = [\"reorderIndicatorUp\"];\nvar _c3 = [\"reorderIndicatorDown\"];\nvar _c4 = [\"wrapper\"];\nvar _c5 = [\"table\"];\nvar _c6 = [\"tableHeader\"];\n\nfunction Table_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"i\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"p-datatable-loading-icon pi-spin \" + ctx_r1.loadingIcon);\n  }\n}\n\nfunction Table_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, Table_div_3_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.captionTemplate);\n  }\n}\n\nfunction Table_p_paginator_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-paginator\", 17);\n    i0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_4_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      var ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onPageChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r3.rows)(\"first\", ctx_r3.first)(\"totalRecords\", ctx_r3.totalRecords)(\"pageLinkSize\", ctx_r3.pageLinks)(\"alwaysShow\", ctx_r3.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r3.rowsPerPageOptions)(\"templateLeft\", ctx_r3.paginatorLeftTemplate)(\"templateRight\", ctx_r3.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r3.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r3.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r3.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r3.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r3.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r3.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r3.showJumpToPageDropdown)(\"showJumpToPageInput\", ctx_r3.showJumpToPageInput)(\"showPageLinks\", ctx_r3.showPageLinks);\n  }\n}\n\nfunction Table_table_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_table_7_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_table_7_tbody_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tbody\", 25);\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r18.frozenValue)(\"frozenRows\", true)(\"pTableBody\", ctx_r18.columns)(\"pTableBodyTemplate\", ctx_r18.frozenBodyTemplate)(\"frozen\", true);\n  }\n}\n\nfunction Table_table_7_tfoot_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c7 = function _c7(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Table_table_7_tfoot_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 26);\n    i0.ɵɵtemplate(1, Table_table_7_tfoot_7_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r19.footerGroupedTemplate || ctx_r19.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r19.columns));\n  }\n}\n\nfunction Table_table_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 18, 19);\n    i0.ɵɵtemplate(2, Table_table_7_ng_container_2_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementStart(3, \"thead\", 21);\n    i0.ɵɵtemplate(4, Table_table_7_ng_container_4_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, Table_table_7_tbody_5_Template, 1, 5, \"tbody\", 22);\n    i0.ɵɵelement(6, \"tbody\", 23);\n    i0.ɵɵtemplate(7, Table_table_7_tfoot_7_Template, 2, 4, \"tfoot\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.tableStyleClass)(\"ngStyle\", ctx_r5.tableStyle);\n    i0.ɵɵattribute(\"id\", ctx_r5.id + \"-table\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(12, _c7, ctx_r5.columns));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.headerGroupedTemplate || ctx_r5.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(14, _c7, ctx_r5.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.frozenValue || ctx_r5.frozenBodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.dataToRender)(\"pTableBody\", ctx_r5.columns)(\"pTableBodyTemplate\", ctx_r5.bodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.footerGroupedTemplate || ctx_r5.footerTemplate);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tbody_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tbody\", 25);\n  }\n\n  if (rf & 2) {\n    var ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r25.frozenValue)(\"frozenRows\", true)(\"pTableBody\", ctx_r25.columns)(\"pTableBodyTemplate\", ctx_r25.bodyTemplate)(\"frozen\", true);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tfoot_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tfoot_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 26);\n    i0.ɵɵtemplate(1, Table_cdk_virtual_scroll_viewport_8_tfoot_9_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r26.footerGroupedTemplate || ctx_r26.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r26.columns));\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 27);\n    i0.ɵɵlistener(\"scrolledIndexChange\", function Table_cdk_virtual_scroll_viewport_8_Template_cdk_virtual_scroll_viewport_scrolledIndexChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      var ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.onScrollIndexChange($event));\n    });\n    i0.ɵɵelementStart(1, \"table\", 18, 19);\n    i0.ɵɵtemplate(3, Table_cdk_virtual_scroll_viewport_8_ng_container_3_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementStart(4, \"thead\", 21, 28);\n    i0.ɵɵtemplate(6, Table_cdk_virtual_scroll_viewport_8_ng_container_6_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, Table_cdk_virtual_scroll_viewport_8_tbody_7_Template, 1, 5, \"tbody\", 22);\n    i0.ɵɵelement(8, \"tbody\", 23);\n    i0.ɵɵtemplate(9, Table_cdk_virtual_scroll_viewport_8_tfoot_9_Template, 2, 4, \"tfoot\", 24);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r6.scrollHeight !== \"flex\" ? ctx_r6.scrollHeight : undefined);\n    i0.ɵɵproperty(\"itemSize\", ctx_r6.virtualRowHeight)(\"minBufferPx\", ctx_r6.minBufferPx)(\"maxBufferPx\", ctx_r6.maxBufferPx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r6.tableStyleClass)(\"ngStyle\", ctx_r6.tableStyle);\n    i0.ɵɵattribute(\"id\", ctx_r6.id + \"-table\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(17, _c7, ctx_r6.columns));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.headerGroupedTemplate || ctx_r6.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(19, _c7, ctx_r6.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.frozenValue || ctx_r6.frozenBodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r6.dataToRender)(\"pTableBody\", ctx_r6.columns)(\"pTableBodyTemplate\", ctx_r6.bodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.footerGroupedTemplate || ctx_r6.footerTemplate);\n  }\n}\n\nfunction Table_p_paginator_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-paginator\", 29);\n    i0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_9_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      var ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onPageChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r7.rows)(\"first\", ctx_r7.first)(\"totalRecords\", ctx_r7.totalRecords)(\"pageLinkSize\", ctx_r7.pageLinks)(\"alwaysShow\", ctx_r7.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r7.rowsPerPageOptions)(\"templateLeft\", ctx_r7.paginatorLeftTemplate)(\"templateRight\", ctx_r7.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r7.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r7.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r7.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r7.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r7.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r7.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r7.showJumpToPageDropdown)(\"showJumpToPageInput\", ctx_r7.showJumpToPageInput)(\"showPageLinks\", ctx_r7.showPageLinks);\n  }\n}\n\nfunction Table_div_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, Table_div_10_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.summaryTemplate);\n  }\n}\n\nfunction Table_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 31, 32);\n  }\n}\n\nfunction Table_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 33, 34);\n  }\n}\n\nfunction Table_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 35, 36);\n  }\n}\n\nvar _c8 = function _c8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n  return {\n    \"p-datatable p-component\": true,\n    \"p-datatable-hoverable-rows\": a1,\n    \"p-datatable-auto-layout\": a2,\n    \"p-datatable-resizable\": a3,\n    \"p-datatable-resizable-fit\": a4,\n    \"p-datatable-scrollable\": a5,\n    \"p-datatable-scrollable-vertical\": a6,\n    \"p-datatable-scrollable-horizontal\": a7,\n    \"p-datatable-scrollable-both\": a8,\n    \"p-datatable-flex-scrollable\": a9,\n    \"p-datatable-responsive-stack\": a10,\n    \"p-datatable-responsive-scroll\": a11,\n    \"p-datatable-responsive\": a12,\n    \"p-datatable-grouped-header\": a13,\n    \"p-datatable-grouped-footer\": a14\n  };\n};\n\nvar _c9 = function _c9(a0) {\n  return {\n    height: a0\n  };\n};\n\nvar _c10 = [\"pTableBody\", \"\"];\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c11 = function _c11(a0, a1, a2, a3, a4) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    editing: a3,\n    frozen: a4\n  };\n};\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = i0.ɵɵnextContext();\n    var rowData_r7 = ctx_r14.$implicit;\n    var rowIndex_r8 = ctx_r14.index;\n    var ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.dt.groupHeaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r9.dt.paginator ? ctx_r9.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r9.columns, ctx_r9.dt.editMode === \"row\" && ctx_r9.dt.isRowEditing(rowData_r7), ctx_r9.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = i0.ɵɵnextContext();\n    var rowData_r7 = ctx_r16.$implicit;\n    var rowIndex_r8 = ctx_r16.index;\n    var ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r10.dt.paginator ? ctx_r10.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r10.columns, ctx_r10.dt.editMode === \"row\" && ctx_r10.dt.isRowEditing(rowData_r7), ctx_r10.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c12 = function _c12(a0, a1, a2, a3, a4, a5, a6) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    editing: a3,\n    frozen: a4,\n    rowgroup: a5,\n    rowspan: a6\n  };\n};\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = i0.ɵɵnextContext();\n    var rowData_r7 = ctx_r18.$implicit;\n    var rowIndex_r8 = ctx_r18.index;\n    var ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction7(2, _c12, rowData_r7, ctx_r11.dt.paginator ? ctx_r11.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r11.columns, ctx_r11.dt.editMode === \"row\" && ctx_r11.dt.isRowEditing(rowData_r7), ctx_r11.frozen, ctx_r11.shouldRenderRowspan(ctx_r11.value, rowData_r7, rowIndex_r8), ctx_r11.calculateRowGroupSize(ctx_r11.value, rowData_r7, rowIndex_r8)));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r20 = i0.ɵɵnextContext();\n    var rowData_r7 = ctx_r20.$implicit;\n    var rowIndex_r8 = ctx_r20.index;\n    var ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.dt.groupFooterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r12.dt.paginator ? ctx_r12.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r12.columns, ctx_r12.dt.editMode === \"row\" && ctx_r12.dt.isRowEditing(rowData_r7), ctx_r12.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_0_ng_template_1_ng_container_0_Template, 2, 8, \"ng-container\", 2);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_1_Template, 2, 8, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, TableBody_ng_container_0_ng_template_1_ng_container_2_Template, 2, 10, \"ng-container\", 0);\n    i0.ɵɵtemplate(3, TableBody_ng_container_0_ng_template_1_ng_container_3_Template, 2, 8, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    var rowData_r7 = ctx.$implicit;\n    var rowIndex_r8 = ctx.index;\n    var ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.groupHeaderTemplate && ctx_r6.dt.rowGroupMode === \"subheader\" && ctx_r6.shouldRenderRowGroupHeader(ctx_r6.value, rowData_r7, rowIndex_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.rowGroupMode !== \"rowspan\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.rowGroupMode === \"rowspan\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.groupFooterTemplate && ctx_r6.dt.rowGroupMode === \"subheader\" && ctx_r6.shouldRenderRowGroupFooter(ctx_r6.value, rowData_r7, rowIndex_r8));\n  }\n}\n\nfunction TableBody_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_Template, 4, 4, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.value)(\"ngForTrackBy\", ctx_r0.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 4);\n  }\n\n  if (rf & 2) {\n    var rowData_r22 = ctx.$implicit;\n    var rowIndex_r23 = ctx.index;\n    var ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", rowData_r22 ? ctx_r21.template : ctx_r21.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r22, ctx_r21.dt.paginator ? ctx_r21.dt.first + rowIndex_r23 : rowIndex_r23, ctx_r21.columns, ctx_r21.dt.editMode === \"row\" && ctx_r21.dt.isRowEditing(rowData_r22), ctx_r21.frozen));\n  }\n}\n\nfunction TableBody_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_1_ng_template_1_Template, 1, 8, \"ng-template\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r1.dt.filteredValue || ctx_r1.dt.value)(\"cdkVirtualForTrackBy\", ctx_r1.dt.rowTrackBy)(\"cdkVirtualForTemplateCacheSize\", 0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c13 = function _c13(a0, a1, a2, a3, a4, a5) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    expanded: a3,\n    editing: a4,\n    frozen: a5\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r32 = i0.ɵɵnextContext();\n    var rowData_r26 = ctx_r32.$implicit;\n    var rowIndex_r27 = ctx_r32.index;\n    var ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r28.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r28.dt.paginator ? ctx_r28.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r28.columns, ctx_r28.dt.isRowExpanded(rowData_r26), ctx_r28.dt.editMode === \"row\" && ctx_r28.dt.isRowEditing(rowData_r26), ctx_r28.frozen));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r34 = i0.ɵɵnextContext();\n    var rowData_r26 = ctx_r34.$implicit;\n    var rowIndex_r27 = ctx_r34.index;\n    var ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r29.dt.groupHeaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r29.dt.paginator ? ctx_r29.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r29.columns, ctx_r29.dt.isRowExpanded(rowData_r26), ctx_r29.dt.editMode === \"row\" && ctx_r29.dt.isRowEditing(rowData_r26), ctx_r29.frozen));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r38 = i0.ɵɵnextContext(2);\n    var rowData_r26 = ctx_r38.$implicit;\n    var rowIndex_r27 = ctx_r38.index;\n    var ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r36.dt.groupFooterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r36.dt.paginator ? ctx_r36.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r36.columns, ctx_r36.dt.isRowExpanded(rowData_r26), ctx_r36.dt.editMode === \"row\" && ctx_r36.dt.isRowEditing(rowData_r26), ctx_r36.frozen));\n  }\n}\n\nvar _c14 = function _c14(a0, a1, a2, a3) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    frozen: a3\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(2, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_Template, 2, 9, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r39 = i0.ɵɵnextContext();\n    var rowData_r26 = ctx_r39.$implicit;\n    var rowIndex_r27 = ctx_r39.index;\n    var ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r30.dt.expandedRowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(3, _c14, rowData_r26, ctx_r30.dt.paginator ? ctx_r30.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r30.columns, ctx_r30.frozen));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r30.dt.groupFooterTemplate && ctx_r30.dt.rowGroupMode === \"subheader\" && ctx_r30.shouldRenderRowGroupFooter(ctx_r30.value, rowData_r26, rowIndex_r27));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_2_ng_template_1_ng_container_0_Template, 2, 9, \"ng-container\", 0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_Template, 2, 9, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, TableBody_ng_container_2_ng_template_1_ng_container_2_Template, 3, 8, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    var rowData_r26 = ctx.$implicit;\n    var rowIndex_r27 = ctx.index;\n    var ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r25.dt.groupHeaderTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.dt.groupHeaderTemplate && ctx_r25.dt.rowGroupMode === \"subheader\" && ctx_r25.shouldRenderRowGroupHeader(ctx_r25.value, rowData_r26, rowIndex_r27));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.dt.isRowExpanded(rowData_r26));\n  }\n}\n\nfunction TableBody_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_Template, 3, 3, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.value)(\"ngForTrackBy\", ctx_r2.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r46 = i0.ɵɵnextContext();\n    var rowData_r41 = ctx_r46.$implicit;\n    var rowIndex_r42 = ctx_r46.index;\n    var ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r44.dt.frozenExpandedRowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c14, rowData_r41, ctx_r44.dt.paginator ? ctx_r44.dt.first + rowIndex_r42 : rowIndex_r42, ctx_r44.columns, ctx_r44.frozen));\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_ng_container_1_Template, 2, 7, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    var rowData_r41 = ctx.$implicit;\n    var rowIndex_r42 = ctx.index;\n    var ctx_r40 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r40.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(3, _c13, rowData_r41, ctx_r40.dt.paginator ? ctx_r40.dt.first + rowIndex_r42 : rowIndex_r42, ctx_r40.columns, ctx_r40.dt.isRowExpanded(rowData_r41), ctx_r40.dt.editMode === \"row\" && ctx_r40.dt.isRowEditing(rowData_r41), ctx_r40.frozen));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r40.dt.isRowExpanded(rowData_r41));\n  }\n}\n\nfunction TableBody_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_Template, 2, 10, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.value)(\"ngForTrackBy\", ctx_r3.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c15 = function _c15(a0, a1) {\n  return {\n    $implicit: a0,\n    frozen: a1\n  };\n};\n\nfunction TableBody_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, ctx_r4.columns, ctx_r4.frozen));\n  }\n}\n\nfunction TableBody_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.dt.emptyMessageTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, ctx_r5.columns, ctx_r5.frozen));\n  }\n}\n\nfunction SortIcon_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getBadgeValue());\n  }\n}\n\nvar _c16 = function _c16(a0, a1, a2) {\n  return {\n    \"pi-sort-amount-up-alt\": a0,\n    \"pi-sort-amount-down\": a1,\n    \"pi-sort-alt\": a2\n  };\n};\n\nfunction CellEditor_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellEditor_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.inputTemplate);\n  }\n}\n\nfunction CellEditor_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellEditor_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.outputTemplate);\n  }\n}\n\nvar _c17 = function _c17(a0, a1) {\n  return {\n    \"p-radiobutton-focused\": a0,\n    \"p-radiobutton-disabled\": a1\n  };\n};\n\nvar _c18 = function _c18(a1, a2, a3) {\n  return {\n    \"p-radiobutton-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-focus\": a2,\n    \"p-disabled\": a3\n  };\n};\n\nvar _c19 = function _c19(a0, a1) {\n  return {\n    \"p-checkbox-focused\": a0,\n    \"p-checkbox-disabled\": a1\n  };\n};\n\nvar _c20 = function _c20(a1, a2, a3) {\n  return {\n    \"p-checkbox-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-focus\": a2,\n    \"p-disabled\": a3\n  };\n};\n\nvar _c21 = function _c21(a0) {\n  return {\n    \"pi pi-check\": a0\n  };\n};\n\nvar _c22 = [\"box\"];\n\nvar _c23 = function _c23(a1, a2, a3) {\n  return {\n    \"p-checkbox-box\": true,\n    \"p-highlight\": a1,\n    \"p-focus\": a2,\n    \"p-disabled\": a3\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c24 = function _c24(a0, a1) {\n  return {\n    $implicit: a0,\n    filterCallback: a1\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c24, ctx_r0.filterConstraint.value, ctx_r0.filterCallback));\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 8);\n    i0.ɵɵlistener(\"input\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onModelChange($event.target.value));\n    })(\"keydown.enter\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onTextInputEnterKeyDown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r4.filterConstraint == null ? null : ctx_r4.filterConstraint.value);\n    i0.ɵɵattribute(\"placeholder\", ctx_r4.placeholder);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onModelChange($event));\n    })(\"onKeyDown\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_onKeyDown_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onNumericInputKeyDown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.filterConstraint == null ? null : ctx_r5.filterConstraint.value)(\"showButtons\", true)(\"minFractionDigits\", ctx_r5.minFractionDigits)(\"maxFractionDigits\", ctx_r5.maxFractionDigits)(\"prefix\", ctx_r5.prefix)(\"suffix\", ctx_r5.suffix)(\"placeholder\", ctx_r5.placeholder)(\"mode\", ctx_r5.currency ? \"currency\" : \"decimal\")(\"locale\", ctx_r5.locale)(\"localeMatcher\", ctx_r5.localeMatcher)(\"currency\", ctx_r5.currency)(\"currencyDisplay\", ctx_r5.currencyDisplay)(\"useGrouping\", ctx_r5.useGrouping);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-triStateCheckbox\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template_p_triStateCheckbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onModelChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.filterConstraint == null ? null : ctx_r6.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_calendar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-calendar\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_calendar_4_Template_p_calendar_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onModelChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"placeholder\", ctx_r7.placeholder)(\"ngModel\", ctx_r7.filterConstraint == null ? null : ctx_r7.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_input_1_Template, 1, 2, \"input\", 4);\n    i0.ɵɵtemplate(2, ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template, 1, 13, \"p-inputNumber\", 5);\n    i0.ɵɵtemplate(3, ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template, 1, 1, \"p-triStateCheckbox\", 6);\n    i0.ɵɵtemplate(4, ColumnFilterFormElement_ng_template_1_p_calendar_4_Template, 1, 2, \"p-calendar\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r2.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n  }\n}\n\nvar _c25 = [\"icon\"];\n\nfunction ColumnFilter_p_columnFilterFormElement_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-columnFilterFormElement\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"type\", ctx_r0.type)(\"field\", ctx_r0.field)(\"filterConstraint\", ctx_r0.dt.filters[ctx_r0.field])(\"filterTemplate\", ctx_r0.filterTemplate)(\"placeholder\", ctx_r0.placeholder)(\"minFractionDigits\", ctx_r0.minFractionDigits)(\"maxFractionDigits\", ctx_r0.maxFractionDigits)(\"prefix\", ctx_r0.prefix)(\"suffix\", ctx_r0.suffix)(\"locale\", ctx_r0.locale)(\"localeMatcher\", ctx_r0.localeMatcher)(\"currency\", ctx_r0.currency)(\"currencyDisplay\", ctx_r0.currencyDisplay)(\"useGrouping\", ctx_r0.useGrouping);\n  }\n}\n\nvar _c26 = function _c26(a0, a1) {\n  return {\n    \"p-column-filter-menu-button-open\": a0,\n    \"p-column-filter-menu-button-active\": a1\n  };\n};\n\nfunction ColumnFilter_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6, 7);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.toggleMenu());\n    })(\"keydown\", function ColumnFilter_button_2_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onToggleButtonKeyDown($event));\n    });\n    i0.ɵɵelement(2, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c26, ctx_r1.overlayVisible, ctx_r1.hasFilter()));\n    i0.ɵɵattribute(\"aria-expanded\", ctx_r1.overlayVisible);\n  }\n}\n\nvar _c27 = function _c27(a0) {\n  return {\n    \"p-hidden-space\": a0\n  };\n};\n\nfunction ColumnFilter_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9, 7);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.clearFilter());\n    });\n    i0.ɵɵelement(2, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c27, !ctx_r2.hasRowFilter()));\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c28 = function _c28(a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nfunction ColumnFilter_div_4_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_li_1_Template_li_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var matchMode_r17 = restoredCtx.$implicit;\n      var ctx_r19 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r19.onRowMatchModeChange(matchMode_r17.value));\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      var ctx_r21 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r21.onRowMatchModeKeyDown($event));\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_enter_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var matchMode_r17 = restoredCtx.$implicit;\n      var ctx_r22 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r22.onRowMatchModeChange(matchMode_r17.value));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var matchMode_r17 = ctx.$implicit;\n    var i_r18 = ctx.index;\n    var ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c28, ctx_r16.isRowMatchModeSelected(matchMode_r17.value)));\n    i0.ɵɵattribute(\"tabindex\", i_r18 === 0 ? \"0\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(matchMode_r17.label);\n  }\n}\n\nfunction ColumnFilter_div_4_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 15);\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ul_2_li_1_Template, 2, 5, \"li\", 16);\n    i0.ɵɵelement(2, \"li\", 17);\n    i0.ɵɵelementStart(3, \"li\", 18);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_Template_li_click_3_listener() {\n      i0.ɵɵrestoreView(_r24);\n      var ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onRowClearItemClick());\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_Template_li_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      var ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.onRowMatchModeKeyDown($event));\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_Template_li_keydown_enter_3_listener() {\n      i0.ɵɵrestoreView(_r24);\n      var ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.onRowClearItemClick());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.matchModes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r12.noFilterLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"p-dropdown\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_0_Template_p_dropdown_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      var ctx_r32 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r32.onOperatorChange($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r27 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r27.operatorOptions)(\"ngModel\", ctx_r27.operator);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-dropdown\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template_p_dropdown_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      var fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n      var ctx_r38 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r38.onMenuMatchModeChange($event, fieldConstraint_r34));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n    var ctx_r36 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"options\", ctx_r36.matchModes)(\"ngModel\", fieldConstraint_r34.matchMode);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_2_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      var fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n      var ctx_r42 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r42.removeConstraint(fieldConstraint_r34));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r37 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"label\", ctx_r37.removeRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template, 1, 2, \"p-dropdown\", 30);\n    i0.ɵɵelement(2, \"p-columnFilterFormElement\", 31);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtemplate(4, ColumnFilter_div_4_ng_template_3_div_2_button_4_Template, 1, 1, \"button\", 32);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var fieldConstraint_r34 = ctx.$implicit;\n    var ctx_r28 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.showMatchModes && ctx_r28.matchModes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r28.type)(\"field\", ctx_r28.field)(\"filterConstraint\", fieldConstraint_r34)(\"filterTemplate\", ctx_r28.filterTemplate)(\"placeholder\", ctx_r28.placeholder)(\"minFractionDigits\", ctx_r28.minFractionDigits)(\"maxFractionDigits\", ctx_r28.maxFractionDigits)(\"prefix\", ctx_r28.prefix)(\"suffix\", ctx_r28.suffix)(\"locale\", ctx_r28.locale)(\"localeMatcher\", ctx_r28.localeMatcher)(\"currency\", ctx_r28.currency)(\"currencyDisplay\", ctx_r28.currencyDisplay)(\"useGrouping\", ctx_r28.useGrouping);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.showRemoveIcon);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r46);\n      var ctx_r45 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r45.addConstraint());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r29 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", ctx_r29.addRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r48);\n      var ctx_r47 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r47.clearFilter());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r30 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r30.clearButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r50 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r50);\n      var ctx_r49 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r49.applyFilter());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r31.applyButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ColumnFilter_div_4_ng_template_3_div_0_Template, 2, 2, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵtemplate(2, ColumnFilter_div_4_ng_template_3_div_2_Template, 5, 16, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_div_3_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵtemplate(5, ColumnFilter_div_4_ng_template_3_button_5_Template, 1, 1, \"button\", 25);\n    i0.ɵɵtemplate(6, ColumnFilter_div_4_ng_template_3_button_6_Template, 1, 1, \"button\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.isShowOperator);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.fieldConstraints);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.isShowAddConstraint);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showClearButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showApplyButton);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c29 = function _c29(a1) {\n  return {\n    \"p-column-filter-overlay p-component p-fluid\": true,\n    \"p-column-filter-overlay-menu\": a1\n  };\n};\n\nfunction ColumnFilter_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      var ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.onContentClick());\n    })(\"@overlayAnimation.start\", function ColumnFilter_div_4_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      var ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.onOverlayAnimationStart($event));\n    })(\"@overlayAnimation.done\", function ColumnFilter_div_4_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      var ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.onOverlayAnimationEnd($event));\n    })(\"keydown.escape\", function ColumnFilter_div_4_Template_div_keydown_escape_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      var ctx_r55 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r55.onEscape());\n    });\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ng_container_1_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, ColumnFilter_div_4_ul_2_Template, 5, 2, \"ul\", 13);\n    i0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_Template, 7, 5, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, ColumnFilter_div_4_ng_container_5_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r13 = i0.ɵɵreference(4);\n\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c29, ctx_r3.display === \"menu\"))(\"@overlayAnimation\", \"visible\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c7, ctx_r3.field));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.display === \"row\")(\"ngIfElse\", _r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(12, _c7, ctx_r3.field));\n  }\n}\n\nvar _c30 = function _c30(a0, a1) {\n  return {\n    \"p-column-filter-row\": a0,\n    \"p-column-filter-menu\": a1\n  };\n};\n\nvar TableService = /*#__PURE__*/(function () {\n  var TableService = /*#__PURE__*/function () {\n    function TableService() {\n      _classCallCheck(this, TableService);\n\n      this.sortSource = new Subject();\n      this.selectionSource = new Subject();\n      this.contextMenuSource = new Subject();\n      this.valueSource = new Subject();\n      this.totalRecordsSource = new Subject();\n      this.columnsSource = new Subject();\n      this.resetSource = new Subject();\n      this.sortSource$ = this.sortSource.asObservable();\n      this.selectionSource$ = this.selectionSource.asObservable();\n      this.contextMenuSource$ = this.contextMenuSource.asObservable();\n      this.valueSource$ = this.valueSource.asObservable();\n      this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n      this.columnsSource$ = this.columnsSource.asObservable();\n      this.resetSource$ = this.resetSource.asObservable();\n    }\n\n    _createClass(TableService, [{\n      key: \"onSort\",\n      value: function onSort(sortMeta) {\n        this.sortSource.next(sortMeta);\n      }\n    }, {\n      key: \"onSelectionChange\",\n      value: function onSelectionChange() {\n        this.selectionSource.next(null);\n      }\n    }, {\n      key: \"onResetChange\",\n      value: function onResetChange() {\n        this.resetSource.next(null);\n      }\n    }, {\n      key: \"onContextMenu\",\n      value: function onContextMenu(data) {\n        this.contextMenuSource.next(data);\n      }\n    }, {\n      key: \"onValueChange\",\n      value: function onValueChange(value) {\n        this.valueSource.next(value);\n      }\n    }, {\n      key: \"onTotalRecordsChange\",\n      value: function onTotalRecordsChange(value) {\n        this.totalRecordsSource.next(value);\n      }\n    }, {\n      key: \"onColumnsChange\",\n      value: function onColumnsChange(columns) {\n        this.columnsSource.next(columns);\n      }\n    }]);\n\n    return TableService;\n  }();\n\n  TableService.ɵfac = function TableService_Factory(t) {\n    return new (t || TableService)();\n  };\n\n  TableService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TableService,\n    factory: TableService.ɵfac\n  });\n  return TableService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar Table = /*#__PURE__*/(function () {\n  var Table = /*#__PURE__*/function () {\n    function Table(el, zone, tableService, cd, filterService, overlayService) {\n      _classCallCheck(this, Table);\n\n      this.el = el;\n      this.zone = zone;\n      this.tableService = tableService;\n      this.cd = cd;\n      this.filterService = filterService;\n      this.overlayService = overlayService;\n      this.pageLinks = 5;\n      this.alwaysShowPaginator = true;\n      this.paginatorPosition = 'bottom';\n      this.paginatorDropdownScrollHeight = '200px';\n      this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n      this.showFirstLastIcon = true;\n      this.showPageLinks = true;\n      this.defaultSortOrder = 1;\n      this.sortMode = 'single';\n      this.resetPageOnSort = true;\n      this.selectAllChange = new EventEmitter();\n      this.selectionChange = new EventEmitter();\n      this.contextMenuSelectionChange = new EventEmitter();\n      this.contextMenuSelectionMode = \"separate\";\n\n      this.rowTrackBy = function (index, item) {\n        return item;\n      };\n\n      this.lazy = false;\n      this.lazyLoadOnInit = true;\n      this.compareSelectionBy = 'deepEquals';\n      this.csvSeparator = ',';\n      this.exportFilename = 'download';\n      this.filters = {};\n      this.filterDelay = 300;\n      this.expandedRowKeys = {};\n      this.editingRowKeys = {};\n      this.rowExpandMode = 'multiple';\n      this.scrollDirection = \"vertical\";\n      this.virtualScrollDelay = 250;\n      this.virtualRowHeight = 28;\n      this.columnResizeMode = 'fit';\n      this.loadingIcon = 'pi pi-spinner';\n      this.showLoader = true;\n      this.showInitialSortBadge = true;\n      this.stateStorage = 'session';\n      this.editMode = 'cell';\n      this.groupRowsByOrder = 1;\n      this.responsiveLayout = 'stack';\n      this.breakpoint = '960px';\n      this.onRowSelect = new EventEmitter();\n      this.onRowUnselect = new EventEmitter();\n      this.onPage = new EventEmitter();\n      this.onSort = new EventEmitter();\n      this.onFilter = new EventEmitter();\n      this.onLazyLoad = new EventEmitter();\n      this.onRowExpand = new EventEmitter();\n      this.onRowCollapse = new EventEmitter();\n      this.onContextMenuSelect = new EventEmitter();\n      this.onColResize = new EventEmitter();\n      this.onColReorder = new EventEmitter();\n      this.onRowReorder = new EventEmitter();\n      this.onEditInit = new EventEmitter();\n      this.onEditComplete = new EventEmitter();\n      this.onEditCancel = new EventEmitter();\n      this.onHeaderCheckboxToggle = new EventEmitter();\n      this.sortFunction = new EventEmitter();\n      this.firstChange = new EventEmitter();\n      this.rowsChange = new EventEmitter();\n      this.onStateSave = new EventEmitter();\n      this.onStateRestore = new EventEmitter();\n      this._value = [];\n      this._totalRecords = 0;\n      this._first = 0;\n      this.selectionKeys = {};\n      this._sortOrder = 1;\n      this._selectAll = null;\n      this.columnResizing = false;\n      this.rowGroupHeaderStyleObject = {};\n      this.id = UniqueComponentId();\n    }\n\n    _createClass(Table, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.lazy && this.lazyLoadOnInit) {\n          if (!this.virtualScroll) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n          }\n\n          if (this.restoringFilter) {\n            this.restoringFilter = false;\n          }\n        }\n\n        if (this.responsiveLayout === 'stack' && !this.scrollable) {\n          this.createResponsiveStyle();\n        }\n\n        this.initialized = true;\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this = this;\n\n        this.templates.forEach(function (item) {\n          switch (item.getType()) {\n            case 'caption':\n              _this.captionTemplate = item.template;\n              break;\n\n            case 'header':\n              _this.headerTemplate = item.template;\n              break;\n\n            case 'headergrouped':\n              _this.headerGroupedTemplate = item.template;\n              break;\n\n            case 'body':\n              _this.bodyTemplate = item.template;\n              break;\n\n            case 'loadingbody':\n              _this.loadingBodyTemplate = item.template;\n              break;\n\n            case 'footer':\n              _this.footerTemplate = item.template;\n              break;\n\n            case 'footergrouped':\n              _this.footerGroupedTemplate = item.template;\n              break;\n\n            case 'summary':\n              _this.summaryTemplate = item.template;\n              break;\n\n            case 'colgroup':\n              _this.colGroupTemplate = item.template;\n              break;\n\n            case 'rowexpansion':\n              _this.expandedRowTemplate = item.template;\n              break;\n\n            case 'groupheader':\n              _this.groupHeaderTemplate = item.template;\n              break;\n\n            case 'rowspan':\n              _this.rowspanTemplate = item.template;\n              break;\n\n            case 'groupfooter':\n              _this.groupFooterTemplate = item.template;\n              break;\n\n            case 'frozenrows':\n              _this.frozenRowsTemplate = item.template;\n              break;\n\n            case 'frozenheader':\n              _this.frozenHeaderTemplate = item.template;\n              break;\n\n            case 'frozenbody':\n              _this.frozenBodyTemplate = item.template;\n              break;\n\n            case 'frozenfooter':\n              _this.frozenFooterTemplate = item.template;\n              break;\n\n            case 'frozencolgroup':\n              _this.frozenColGroupTemplate = item.template;\n              break;\n\n            case 'frozenrowexpansion':\n              _this.frozenExpandedRowTemplate = item.template;\n              break;\n\n            case 'emptymessage':\n              _this.emptyMessageTemplate = item.template;\n              break;\n\n            case 'paginatorleft':\n              _this.paginatorLeftTemplate = item.template;\n              break;\n\n            case 'paginatorright':\n              _this.paginatorRightTemplate = item.template;\n              break;\n\n            case 'paginatordropdownitem':\n              _this.paginatorDropdownItemTemplate = item.template;\n              break;\n          }\n        });\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this2 = this;\n\n        if (this.isStateful() && this.resizableColumns) {\n          this.restoreColumnWidths();\n        }\n\n        if (this.scrollable && this.virtualScroll) {\n          this.virtualScrollSubscription = this.virtualScrollBody.renderedRangeStream.subscribe(function (range) {\n            var top = range.start * _this2.virtualRowHeight * -1;\n            _this2.tableHeaderViewChild.nativeElement.style.top = top + 'px';\n          });\n        }\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(simpleChange) {\n        if (simpleChange.value) {\n          if (this.isStateful() && !this.stateRestored) {\n            this.restoreState();\n          }\n\n          this._value = simpleChange.value.currentValue;\n\n          if (!this.lazy) {\n            this.totalRecords = this._value ? this._value.length : 0;\n            if (this.sortMode == 'single' && (this.sortField || this.groupRowsBy)) this.sortSingle();else if (this.sortMode == 'multiple' && (this.multiSortMeta || this.groupRowsBy)) this.sortMultiple();else if (this.hasFilter()) //sort already filters\n              this._filter();\n          }\n\n          this.tableService.onValueChange(simpleChange.value.currentValue);\n        }\n\n        if (simpleChange.columns) {\n          this._columns = simpleChange.columns.currentValue;\n          this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n\n          if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n            this.restoreColumnOrder();\n          }\n        }\n\n        if (simpleChange.sortField) {\n          this._sortField = simpleChange.sortField.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n          if (!this.lazy || this.initialized) {\n            if (this.sortMode === 'single') {\n              this.sortSingle();\n            }\n          }\n        }\n\n        if (simpleChange.groupRowsBy) {\n          //avoid triggering lazy load prior to lazy initialization at onInit\n          if (!this.lazy || this.initialized) {\n            if (this.sortMode === 'single') {\n              this.sortSingle();\n            }\n          }\n        }\n\n        if (simpleChange.sortOrder) {\n          this._sortOrder = simpleChange.sortOrder.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n          if (!this.lazy || this.initialized) {\n            if (this.sortMode === 'single') {\n              this.sortSingle();\n            }\n          }\n        }\n\n        if (simpleChange.groupRowsByOrder) {\n          //avoid triggering lazy load prior to lazy initialization at onInit\n          if (!this.lazy || this.initialized) {\n            if (this.sortMode === 'single') {\n              this.sortSingle();\n            }\n          }\n        }\n\n        if (simpleChange.multiSortMeta) {\n          this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n\n          if (this.sortMode === 'multiple' && (this.initialized || !this.lazy && !this.virtualScroll)) {\n            this.sortMultiple();\n          }\n        }\n\n        if (simpleChange.selection) {\n          this._selection = simpleChange.selection.currentValue;\n\n          if (!this.preventSelectionSetterPropagation) {\n            this.updateSelectionKeys();\n            this.tableService.onSelectionChange();\n          }\n\n          this.preventSelectionSetterPropagation = false;\n        }\n\n        if (simpleChange.selectAll) {\n          this._selectAll = simpleChange.selectAll.currentValue;\n\n          if (!this.preventSelectionSetterPropagation) {\n            this.updateSelectionKeys();\n            this.tableService.onSelectionChange();\n\n            if (this.isStateful()) {\n              this.saveState();\n            }\n          }\n\n          this.preventSelectionSetterPropagation = false;\n        }\n      }\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this._value;\n      },\n      set: function set(val) {\n        this._value = val;\n      }\n    }, {\n      key: \"columns\",\n      get: function get() {\n        return this._columns;\n      },\n      set: function set(cols) {\n        this._columns = cols;\n      }\n    }, {\n      key: \"first\",\n      get: function get() {\n        return this._first;\n      },\n      set: function set(val) {\n        this._first = val;\n      }\n    }, {\n      key: \"rows\",\n      get: function get() {\n        return this._rows;\n      },\n      set: function set(val) {\n        this._rows = val;\n      }\n    }, {\n      key: \"totalRecords\",\n      get: function get() {\n        return this._totalRecords;\n      },\n      set: function set(val) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n      }\n    }, {\n      key: \"sortField\",\n      get: function get() {\n        return this._sortField;\n      },\n      set: function set(val) {\n        this._sortField = val;\n      }\n    }, {\n      key: \"sortOrder\",\n      get: function get() {\n        return this._sortOrder;\n      },\n      set: function set(val) {\n        this._sortOrder = val;\n      }\n    }, {\n      key: \"multiSortMeta\",\n      get: function get() {\n        return this._multiSortMeta;\n      },\n      set: function set(val) {\n        this._multiSortMeta = val;\n      }\n    }, {\n      key: \"selection\",\n      get: function get() {\n        return this._selection;\n      },\n      set: function set(val) {\n        this._selection = val;\n      }\n    }, {\n      key: \"selectAll\",\n      get: function get() {\n        return this._selection;\n      },\n      set: function set(val) {\n        this._selection = val;\n      }\n    }, {\n      key: \"dataToRender\",\n      get: function get() {\n        var data = this.filteredValue || this.value;\n        return data ? this.paginator && !this.lazy ? data.slice(this.first, this.first + this.rows) : data : [];\n      }\n    }, {\n      key: \"updateSelectionKeys\",\n      value: function updateSelectionKeys() {\n        if (this.dataKey && this._selection) {\n          this.selectionKeys = {};\n\n          if (Array.isArray(this._selection)) {\n            var _iterator = _createForOfIteratorHelper(this._selection),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var data = _step.value;\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          } else {\n            this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n          }\n        }\n      }\n    }, {\n      key: \"onPageChange\",\n      value: function onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n\n        if (this.lazy) {\n          this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n\n        this.onPage.emit({\n          first: this.first,\n          rows: this.rows\n        });\n        this.firstChange.emit(this.first);\n        this.rowsChange.emit(this.rows);\n        this.tableService.onValueChange(this.value);\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n\n        this.anchorRowIndex = null;\n\n        if (this.scrollable) {\n          this.resetScrollTop();\n        }\n      }\n    }, {\n      key: \"sort\",\n      value: function sort(event) {\n        var originalEvent = event.originalEvent;\n\n        if (this.sortMode === 'single') {\n          this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n          this._sortField = event.field;\n\n          if (this.resetPageOnSort) {\n            this._first = 0;\n            this.firstChange.emit(this._first);\n\n            if (this.scrollable) {\n              this.resetScrollTop();\n            }\n          }\n\n          this.sortSingle();\n        }\n\n        if (this.sortMode === 'multiple') {\n          var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n          var sortMeta = this.getSortMeta(event.field);\n\n          if (sortMeta) {\n            if (!metaKey) {\n              this._multiSortMeta = [{\n                field: event.field,\n                order: sortMeta.order * -1\n              }];\n\n              if (this.resetPageOnSort) {\n                this._first = 0;\n                this.firstChange.emit(this._first);\n\n                if (this.scrollable) {\n                  this.resetScrollTop();\n                }\n              }\n            } else {\n              sortMeta.order = sortMeta.order * -1;\n            }\n          } else {\n            if (!metaKey || !this.multiSortMeta) {\n              this._multiSortMeta = [];\n\n              if (this.resetPageOnSort) {\n                this._first = 0;\n                this.firstChange.emit(this._first);\n              }\n            }\n\n            this._multiSortMeta.push({\n              field: event.field,\n              order: this.defaultSortOrder\n            });\n          }\n\n          this.sortMultiple();\n        }\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n\n        this.anchorRowIndex = null;\n      }\n    }, {\n      key: \"sortSingle\",\n      value: function sortSingle() {\n        var field = this.sortField || this.groupRowsBy;\n        var order = this.sortField ? this.sortOrder : this.groupRowsByOrder;\n\n        if (this.groupRowsBy && this.sortField && this.groupRowsBy !== this.sortField) {\n          this._multiSortMeta = [this.getGroupRowsMeta(), {\n            field: this.sortField,\n            order: this.sortOrder\n          }];\n          this.sortMultiple();\n          return;\n        }\n\n        if (field && order) {\n          if (this.restoringSort) {\n            this.restoringSort = false;\n          }\n\n          if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n          } else if (this.value) {\n            if (this.customSort) {\n              this.sortFunction.emit({\n                data: this.value,\n                mode: this.sortMode,\n                field: field,\n                order: order\n              });\n            } else {\n              this.value.sort(function (data1, data2) {\n                var value1 = ObjectUtils.resolveFieldData(data1, field);\n                var value2 = ObjectUtils.resolveFieldData(data2, field);\n                var result = null;\n                if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n                return order * result;\n              });\n              this._value = _toConsumableArray(this.value);\n            }\n\n            if (this.hasFilter()) {\n              this._filter();\n            }\n          }\n\n          var sortMeta = {\n            field: field,\n            order: order\n          };\n          this.onSort.emit(sortMeta);\n          this.tableService.onSort(sortMeta);\n        }\n      }\n    }, {\n      key: \"sortMultiple\",\n      value: function sortMultiple() {\n        var _this3 = this;\n\n        if (this.groupRowsBy) {\n          if (!this._multiSortMeta) this._multiSortMeta = [this.getGroupRowsMeta()];else if (this.multiSortMeta[0].field !== this.groupRowsBy) this._multiSortMeta = [this.getGroupRowsMeta()].concat(_toConsumableArray(this._multiSortMeta));\n        }\n\n        if (this.multiSortMeta) {\n          if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n          } else if (this.value) {\n            if (this.customSort) {\n              this.sortFunction.emit({\n                data: this.value,\n                mode: this.sortMode,\n                multiSortMeta: this.multiSortMeta\n              });\n            } else {\n              this.value.sort(function (data1, data2) {\n                return _this3.multisortField(data1, data2, _this3.multiSortMeta, 0);\n              });\n              this._value = _toConsumableArray(this.value);\n            }\n\n            if (this.hasFilter()) {\n              this._filter();\n            }\n          }\n\n          this.onSort.emit({\n            multisortmeta: this.multiSortMeta\n          });\n          this.tableService.onSort(this.multiSortMeta);\n        }\n      }\n    }, {\n      key: \"multisortField\",\n      value: function multisortField(data1, data2, multiSortMeta, index) {\n        var value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n        var value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n        var result = null;\n        if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 == 'string' || value1 instanceof String) {\n          if (value1.localeCompare && value1 != value2) {\n            return multiSortMeta[index].order * value1.localeCompare(value2);\n          }\n        } else {\n          result = value1 < value2 ? -1 : 1;\n        }\n\n        if (value1 == value2) {\n          return multiSortMeta.length - 1 > index ? this.multisortField(data1, data2, multiSortMeta, index + 1) : 0;\n        }\n\n        return multiSortMeta[index].order * result;\n      }\n    }, {\n      key: \"getSortMeta\",\n      value: function getSortMeta(field) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n          for (var i = 0; i < this.multiSortMeta.length; i++) {\n            if (this.multiSortMeta[i].field === field) {\n              return this.multiSortMeta[i];\n            }\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"isSorted\",\n      value: function isSorted(field) {\n        if (this.sortMode === 'single') {\n          return this.sortField && this.sortField === field;\n        } else if (this.sortMode === 'multiple') {\n          var sorted = false;\n\n          if (this.multiSortMeta) {\n            for (var i = 0; i < this.multiSortMeta.length; i++) {\n              if (this.multiSortMeta[i].field == field) {\n                sorted = true;\n                break;\n              }\n            }\n          }\n\n          return sorted;\n        }\n      }\n    }, {\n      key: \"handleRowClick\",\n      value: function handleRowClick(event) {\n        var target = event.originalEvent.target;\n        var targetNode = target.nodeName;\n        var parentNode = target.parentElement && target.parentElement.nodeName;\n\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' || DomHandler.hasClass(event.originalEvent.target, 'p-clickable')) {\n          return;\n        }\n\n        if (this.selectionMode) {\n          var rowData = event.rowData;\n          var rowIndex = event.rowIndex;\n          this.preventSelectionSetterPropagation = true;\n\n          if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n            DomHandler.clearSelection();\n\n            if (this.rangeRowIndex != null) {\n              this.clearSelectionRange(event.originalEvent);\n            }\n\n            this.rangeRowIndex = rowIndex;\n            this.selectRange(event.originalEvent, rowIndex);\n          } else {\n            var selected = this.isSelected(rowData);\n\n            if (!selected && !this.isRowSelectable(rowData, rowIndex)) {\n              return;\n            }\n\n            var metaSelection = this.rowTouched ? false : this.metaKeySelection;\n            var dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n            this.anchorRowIndex = rowIndex;\n            this.rangeRowIndex = rowIndex;\n\n            if (metaSelection) {\n              var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n\n              if (selected && metaKey) {\n                if (this.isSingleSelectionMode()) {\n                  this._selection = null;\n                  this.selectionKeys = {};\n                  this.selectionChange.emit(null);\n                } else {\n                  var selectionIndex = this.findIndexInSelection(rowData);\n                  this._selection = this.selection.filter(function (val, i) {\n                    return i != selectionIndex;\n                  });\n                  this.selectionChange.emit(this.selection);\n\n                  if (dataKeyValue) {\n                    delete this.selectionKeys[dataKeyValue];\n                  }\n                }\n\n                this.onRowUnselect.emit({\n                  originalEvent: event.originalEvent,\n                  data: rowData,\n                  type: 'row'\n                });\n              } else {\n                if (this.isSingleSelectionMode()) {\n                  this._selection = rowData;\n                  this.selectionChange.emit(rowData);\n\n                  if (dataKeyValue) {\n                    this.selectionKeys = {};\n                    this.selectionKeys[dataKeyValue] = 1;\n                  }\n                } else if (this.isMultipleSelectionMode()) {\n                  if (metaKey) {\n                    this._selection = this.selection || [];\n                  } else {\n                    this._selection = [];\n                    this.selectionKeys = {};\n                  }\n\n                  this._selection = [].concat(_toConsumableArray(this.selection), [rowData]);\n                  this.selectionChange.emit(this.selection);\n\n                  if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                  }\n                }\n\n                this.onRowSelect.emit({\n                  originalEvent: event.originalEvent,\n                  data: rowData,\n                  type: 'row',\n                  index: rowIndex\n                });\n              }\n            } else {\n              if (this.selectionMode === 'single') {\n                if (selected) {\n                  this._selection = null;\n                  this.selectionKeys = {};\n                  this.selectionChange.emit(this.selection);\n                  this.onRowUnselect.emit({\n                    originalEvent: event.originalEvent,\n                    data: rowData,\n                    type: 'row',\n                    index: rowIndex\n                  });\n                } else {\n                  this._selection = rowData;\n                  this.selectionChange.emit(this.selection);\n                  this.onRowSelect.emit({\n                    originalEvent: event.originalEvent,\n                    data: rowData,\n                    type: 'row',\n                    index: rowIndex\n                  });\n\n                  if (dataKeyValue) {\n                    this.selectionKeys = {};\n                    this.selectionKeys[dataKeyValue] = 1;\n                  }\n                }\n              } else if (this.selectionMode === 'multiple') {\n                if (selected) {\n                  var _selectionIndex = this.findIndexInSelection(rowData);\n\n                  this._selection = this.selection.filter(function (val, i) {\n                    return i != _selectionIndex;\n                  });\n                  this.selectionChange.emit(this.selection);\n                  this.onRowUnselect.emit({\n                    originalEvent: event.originalEvent,\n                    data: rowData,\n                    type: 'row',\n                    index: rowIndex\n                  });\n\n                  if (dataKeyValue) {\n                    delete this.selectionKeys[dataKeyValue];\n                  }\n                } else {\n                  this._selection = this.selection ? [].concat(_toConsumableArray(this.selection), [rowData]) : [rowData];\n                  this.selectionChange.emit(this.selection);\n                  this.onRowSelect.emit({\n                    originalEvent: event.originalEvent,\n                    data: rowData,\n                    type: 'row',\n                    index: rowIndex\n                  });\n\n                  if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                  }\n                }\n              }\n            }\n          }\n\n          this.tableService.onSelectionChange();\n\n          if (this.isStateful()) {\n            this.saveState();\n          }\n        }\n\n        this.rowTouched = false;\n      }\n    }, {\n      key: \"handleRowTouchEnd\",\n      value: function handleRowTouchEnd(event) {\n        this.rowTouched = true;\n      }\n    }, {\n      key: \"handleRowRightClick\",\n      value: function handleRowRightClick(event) {\n        if (this.contextMenu) {\n          var rowData = event.rowData;\n          var rowIndex = event.rowIndex;\n\n          if (this.contextMenuSelectionMode === 'separate') {\n            this.contextMenuSelection = rowData;\n            this.contextMenuSelectionChange.emit(rowData);\n            this.onContextMenuSelect.emit({\n              originalEvent: event.originalEvent,\n              data: rowData,\n              index: event.rowIndex\n            });\n            this.contextMenu.show(event.originalEvent);\n            this.tableService.onContextMenu(rowData);\n          } else if (this.contextMenuSelectionMode === 'joint') {\n            this.preventSelectionSetterPropagation = true;\n            var selected = this.isSelected(rowData);\n            var dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n\n            if (!selected) {\n              if (!this.isRowSelectable(rowData, rowIndex)) {\n                return;\n              }\n\n              if (this.isSingleSelectionMode()) {\n                this.selection = rowData;\n                this.selectionChange.emit(rowData);\n\n                if (dataKeyValue) {\n                  this.selectionKeys = {};\n                  this.selectionKeys[dataKeyValue] = 1;\n                }\n              } else if (this.isMultipleSelectionMode()) {\n                this._selection = this.selection ? [].concat(_toConsumableArray(this.selection), [rowData]) : [rowData];\n                this.selectionChange.emit(this.selection);\n\n                if (dataKeyValue) {\n                  this.selectionKeys[dataKeyValue] = 1;\n                }\n              }\n            }\n\n            this.tableService.onSelectionChange();\n            this.contextMenu.show(event.originalEvent);\n            this.onContextMenuSelect.emit({\n              originalEvent: event,\n              data: rowData,\n              index: event.rowIndex\n            });\n          }\n        }\n      }\n    }, {\n      key: \"selectRange\",\n      value: function selectRange(event, rowIndex) {\n        var rangeStart, rangeEnd;\n\n        if (this.anchorRowIndex > rowIndex) {\n          rangeStart = rowIndex;\n          rangeEnd = this.anchorRowIndex;\n        } else if (this.anchorRowIndex < rowIndex) {\n          rangeStart = this.anchorRowIndex;\n          rangeEnd = rowIndex;\n        } else {\n          rangeStart = rowIndex;\n          rangeEnd = rowIndex;\n        }\n\n        if (this.lazy && this.paginator) {\n          rangeStart -= this.first;\n          rangeEnd -= this.first;\n        }\n\n        var rangeRowsData = [];\n\n        for (var i = rangeStart; i <= rangeEnd; i++) {\n          var rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n\n          if (!this.isSelected(rangeRowData)) {\n            if (!this.isRowSelectable(rangeRowData, rowIndex)) {\n              continue;\n            }\n\n            rangeRowsData.push(rangeRowData);\n            this._selection = [].concat(_toConsumableArray(this.selection), [rangeRowData]);\n            var dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n\n            if (dataKeyValue) {\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          }\n        }\n\n        this.selectionChange.emit(this.selection);\n        this.onRowSelect.emit({\n          originalEvent: event,\n          data: rangeRowsData,\n          type: 'row'\n        });\n      }\n    }, {\n      key: \"clearSelectionRange\",\n      value: function clearSelectionRange(event) {\n        var _this4 = this;\n\n        var rangeStart, rangeEnd;\n\n        if (this.rangeRowIndex > this.anchorRowIndex) {\n          rangeStart = this.anchorRowIndex;\n          rangeEnd = this.rangeRowIndex;\n        } else if (this.rangeRowIndex < this.anchorRowIndex) {\n          rangeStart = this.rangeRowIndex;\n          rangeEnd = this.anchorRowIndex;\n        } else {\n          rangeStart = this.rangeRowIndex;\n          rangeEnd = this.rangeRowIndex;\n        }\n\n        var _loop = function _loop(i) {\n          var rangeRowData = _this4.value[i];\n\n          var selectionIndex = _this4.findIndexInSelection(rangeRowData);\n\n          _this4._selection = _this4.selection.filter(function (val, i) {\n            return i != selectionIndex;\n          });\n          var dataKeyValue = _this4.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, _this4.dataKey)) : null;\n\n          if (dataKeyValue) {\n            delete _this4.selectionKeys[dataKeyValue];\n          }\n\n          _this4.onRowUnselect.emit({\n            originalEvent: event,\n            data: rangeRowData,\n            type: 'row'\n          });\n        };\n\n        for (var i = rangeStart; i <= rangeEnd; i++) {\n          _loop(i);\n        }\n      }\n    }, {\n      key: \"isSelected\",\n      value: function isSelected(rowData) {\n        if (rowData && this.selection) {\n          if (this.dataKey) {\n            return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n          } else {\n            if (this.selection instanceof Array) return this.findIndexInSelection(rowData) > -1;else return this.equals(rowData, this.selection);\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: \"findIndexInSelection\",\n      value: function findIndexInSelection(rowData) {\n        var index = -1;\n\n        if (this.selection && this.selection.length) {\n          for (var i = 0; i < this.selection.length; i++) {\n            if (this.equals(rowData, this.selection[i])) {\n              index = i;\n              break;\n            }\n          }\n        }\n\n        return index;\n      }\n    }, {\n      key: \"isRowSelectable\",\n      value: function isRowSelectable(data, index) {\n        if (this.rowSelectable && !this.rowSelectable({\n          data: data,\n          index: index\n        })) {\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"toggleRowWithRadio\",\n      value: function toggleRowWithRadio(event, rowData) {\n        this.preventSelectionSetterPropagation = true;\n\n        if (this.selection != rowData) {\n          if (!this.isRowSelectable(rowData, event.rowIndex)) {\n            return;\n          }\n\n          this._selection = rowData;\n          this.selectionChange.emit(this.selection);\n          this.onRowSelect.emit({\n            originalEvent: event.originalEvent,\n            index: event.rowIndex,\n            data: rowData,\n            type: 'radiobutton'\n          });\n\n          if (this.dataKey) {\n            this.selectionKeys = {};\n            this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n          }\n        } else {\n          this._selection = null;\n          this.selectionChange.emit(this.selection);\n          this.onRowUnselect.emit({\n            originalEvent: event.originalEvent,\n            index: event.rowIndex,\n            data: rowData,\n            type: 'radiobutton'\n          });\n        }\n\n        this.tableService.onSelectionChange();\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n      }\n    }, {\n      key: \"toggleRowWithCheckbox\",\n      value: function toggleRowWithCheckbox(event, rowData) {\n        this.selection = this.selection || [];\n        var selected = this.isSelected(rowData);\n        var dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.preventSelectionSetterPropagation = true;\n\n        if (selected) {\n          var selectionIndex = this.findIndexInSelection(rowData);\n          this._selection = this.selection.filter(function (val, i) {\n            return i != selectionIndex;\n          });\n          this.selectionChange.emit(this.selection);\n          this.onRowUnselect.emit({\n            originalEvent: event.originalEvent,\n            index: event.rowIndex,\n            data: rowData,\n            type: 'checkbox'\n          });\n\n          if (dataKeyValue) {\n            delete this.selectionKeys[dataKeyValue];\n          }\n        } else {\n          if (!this.isRowSelectable(rowData, event.rowIndex)) {\n            return;\n          }\n\n          this._selection = this.selection ? [].concat(_toConsumableArray(this.selection), [rowData]) : [rowData];\n          this.selectionChange.emit(this.selection);\n          this.onRowSelect.emit({\n            originalEvent: event.originalEvent,\n            index: event.rowIndex,\n            data: rowData,\n            type: 'checkbox'\n          });\n\n          if (dataKeyValue) {\n            this.selectionKeys[dataKeyValue] = 1;\n          }\n        }\n\n        this.tableService.onSelectionChange();\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n      }\n    }, {\n      key: \"toggleRowsWithCheckbox\",\n      value: function toggleRowsWithCheckbox(event, check) {\n        var _this5 = this;\n\n        if (this._selectAll !== null) {\n          this.selectAllChange.emit({\n            originalEvent: event,\n            checked: check\n          });\n        } else {\n          var data = this.selectionPageOnly ? this.dataToRender : this.filteredValue || this.value || [];\n          var selection = this.selectionPageOnly && this._selection ? this._selection.filter(function (s) {\n            return !data.some(function (d) {\n              return _this5.equals(s, d);\n            });\n          }) : [];\n\n          if (check) {\n            selection = this.frozenValue ? [].concat(_toConsumableArray(selection), _toConsumableArray(this.frozenValue), _toConsumableArray(data)) : [].concat(_toConsumableArray(selection), _toConsumableArray(data));\n            selection = this.rowSelectable ? selection.filter(function (data, index) {\n              return _this5.rowSelectable({\n                data: data,\n                index: index\n              });\n            }) : selection;\n          }\n\n          this._selection = selection;\n          this.preventSelectionSetterPropagation = true;\n          this.updateSelectionKeys();\n          this.selectionChange.emit(this._selection);\n          this.tableService.onSelectionChange();\n          this.onHeaderCheckboxToggle.emit({\n            originalEvent: event,\n            checked: check\n          });\n\n          if (this.isStateful()) {\n            this.saveState();\n          }\n        }\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(data1, data2) {\n        return this.compareSelectionBy === 'equals' ? data1 === data2 : ObjectUtils.equals(data1, data2, this.dataKey);\n      }\n      /* Legacy Filtering for custom elements */\n\n    }, {\n      key: \"filter\",\n      value: function filter(value, field, matchMode) {\n        var _this6 = this;\n\n        if (this.filterTimeout) {\n          clearTimeout(this.filterTimeout);\n        }\n\n        if (!this.isFilterBlank(value)) {\n          this.filters[field] = {\n            value: value,\n            matchMode: matchMode\n          };\n        } else if (this.filters[field]) {\n          delete this.filters[field];\n        }\n\n        this.filterTimeout = setTimeout(function () {\n          _this6._filter();\n\n          _this6.filterTimeout = null;\n        }, this.filterDelay);\n        this.anchorRowIndex = null;\n      }\n    }, {\n      key: \"filterGlobal\",\n      value: function filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n      }\n    }, {\n      key: \"isFilterBlank\",\n      value: function isFilterBlank(filter) {\n        if (filter !== null && filter !== undefined) {\n          if (typeof filter === 'string' && filter.trim().length == 0 || filter instanceof Array && filter.length == 0) return true;else return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"_filter\",\n      value: function _filter() {\n        if (!this.restoringFilter) {\n          this.first = 0;\n          this.firstChange.emit(this.first);\n        }\n\n        if (this.lazy) {\n          this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        } else {\n          if (!this.value) {\n            return;\n          }\n\n          if (!this.hasFilter()) {\n            this.filteredValue = null;\n\n            if (this.paginator) {\n              this.totalRecords = this.value ? this.value.length : 0;\n            }\n          } else {\n            var globalFilterFieldsArray;\n\n            if (this.filters['global']) {\n              if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;\n            }\n\n            this.filteredValue = [];\n\n            for (var i = 0; i < this.value.length; i++) {\n              var localMatch = true;\n              var globalMatch = false;\n              var localFiltered = false;\n\n              for (var prop in this.filters) {\n                if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                  localFiltered = true;\n                  var filterField = prop;\n                  var filterMeta = this.filters[filterField];\n\n                  if (Array.isArray(filterMeta)) {\n                    var _iterator2 = _createForOfIteratorHelper(filterMeta),\n                        _step2;\n\n                    try {\n                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                        var meta = _step2.value;\n                        localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n\n                        if (meta.operator === FilterOperator.OR && localMatch || meta.operator === FilterOperator.AND && !localMatch) {\n                          break;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator2.e(err);\n                    } finally {\n                      _iterator2.f();\n                    }\n                  } else {\n                    localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n                  }\n\n                  if (!localMatch) {\n                    break;\n                  }\n                }\n              }\n\n              if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                for (var j = 0; j < globalFilterFieldsArray.length; j++) {\n                  var globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n                  globalMatch = this.filterService.filters[this.filters['global'].matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value, this.filterLocale);\n\n                  if (globalMatch) {\n                    break;\n                  }\n                }\n              }\n\n              var matches = void 0;\n\n              if (this.filters['global']) {\n                matches = localFiltered ? localFiltered && localMatch && globalMatch : globalMatch;\n              } else {\n                matches = localFiltered && localMatch;\n              }\n\n              if (matches) {\n                this.filteredValue.push(this.value[i]);\n              }\n            }\n\n            if (this.filteredValue.length === this.value.length) {\n              this.filteredValue = null;\n            }\n\n            if (this.paginator) {\n              this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n            }\n          }\n        }\n\n        this.onFilter.emit({\n          filters: this.filters,\n          filteredValue: this.filteredValue || this.value\n        });\n        this.tableService.onValueChange(this.value);\n\n        if (this.isStateful() && !this.restoringFilter) {\n          this.saveState();\n        }\n\n        if (this.restoringFilter) {\n          this.restoringFilter = false;\n        }\n\n        this.cd.markForCheck();\n\n        if (this.scrollable) {\n          this.resetScrollTop();\n        }\n      }\n    }, {\n      key: \"executeLocalFilter\",\n      value: function executeLocalFilter(field, rowData, filterMeta) {\n        var filterValue = filterMeta.value;\n        var filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n        var dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n        var filterConstraint = this.filterService.filters[filterMatchMode];\n        return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n      }\n    }, {\n      key: \"hasFilter\",\n      value: function hasFilter() {\n        var empty = true;\n\n        for (var prop in this.filters) {\n          if (this.filters.hasOwnProperty(prop)) {\n            empty = false;\n            break;\n          }\n        }\n\n        return !empty;\n      }\n    }, {\n      key: \"createLazyLoadMetadata\",\n      value: function createLazyLoadMetadata() {\n        return {\n          first: this.first,\n          rows: this.rows,\n          sortField: this.sortField,\n          sortOrder: this.sortOrder,\n          filters: this.filters,\n          globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n          multiSortMeta: this.multiSortMeta\n        };\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this._sortField = null;\n        this._sortOrder = this.defaultSortOrder;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n\n        if (this.filters['global']) {\n          this.filters['global'].value = null;\n        }\n\n        this.filteredValue = null;\n        this.tableService.onResetChange();\n        this.first = 0;\n        this.firstChange.emit(this.first);\n\n        if (this.lazy) {\n          this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        } else {\n          this.totalRecords = this._value ? this._value.length : 0;\n        }\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.clear();\n      }\n    }, {\n      key: \"exportCSV\",\n      value: function exportCSV(options) {\n        var _this7 = this;\n\n        var data;\n        var csv = '';\n        var columns = this.columns;\n\n        if (options && options.selectionOnly) {\n          data = this.selection || [];\n        } else {\n          data = this.filteredValue || this.value;\n\n          if (this.frozenValue) {\n            data = data ? [].concat(_toConsumableArray(this.frozenValue), _toConsumableArray(data)) : this.frozenValue;\n          }\n        } //headers\n\n\n        for (var i = 0; i < columns.length; i++) {\n          var column = columns[i];\n\n          if (column.exportable !== false && column.field) {\n            csv += '\"' + (column.header || column.field) + '\"';\n\n            if (i < columns.length - 1) {\n              csv += this.csvSeparator;\n            }\n          }\n        } //body\n\n\n        data.forEach(function (record, i) {\n          csv += '\\n';\n\n          for (var _i = 0; _i < columns.length; _i++) {\n            var _column = columns[_i];\n\n            if (_column.exportable !== false && _column.field) {\n              var cellData = ObjectUtils.resolveFieldData(record, _column.field);\n\n              if (cellData != null) {\n                if (_this7.exportFunction) {\n                  cellData = _this7.exportFunction({\n                    data: cellData,\n                    field: _column.field\n                  });\n                } else cellData = String(cellData).replace(/\"/g, '\"\"');\n              } else cellData = '';\n\n              csv += '\"' + cellData + '\"';\n\n              if (_i < columns.length - 1) {\n                csv += _this7.csvSeparator;\n              }\n            }\n          }\n        });\n        var blob = new Blob([csv], {\n          type: 'text/csv;charset=utf-8;'\n        });\n        var link = document.createElement(\"a\");\n        link.style.display = 'none';\n        document.body.appendChild(link);\n\n        if (link.download !== undefined) {\n          link.setAttribute('href', URL.createObjectURL(blob));\n          link.setAttribute('download', this.exportFilename + '.csv');\n          link.click();\n        } else {\n          csv = 'data:text/csv;charset=utf-8,' + csv;\n          window.open(encodeURI(csv));\n        }\n\n        document.body.removeChild(link);\n      }\n    }, {\n      key: \"resetScrollTop\",\n      value: function resetScrollTop() {\n        if (this.virtualScroll) this.scrollToVirtualIndex(0);else this.scrollTo({\n          top: 0\n        });\n      }\n    }, {\n      key: \"scrollToVirtualIndex\",\n      value: function scrollToVirtualIndex(index) {\n        if (this.virtualScrollBody) {\n          this.virtualScrollBody.scrollToIndex(index);\n        }\n      }\n    }, {\n      key: \"onScrollIndexChange\",\n      value: function onScrollIndexChange(index) {\n        var _this8 = this;\n\n        if (this.lazy) {\n          if (this.virtualScrollTimeout) {\n            clearTimeout(this.virtualScrollTimeout);\n          }\n\n          this.virtualScrollTimeout = setTimeout(function () {\n            var page = Math.floor(index / _this8.rows);\n            var virtualScrollOffset = page === 0 ? 0 : (page - 1) * _this8.rows;\n            var virtualScrollChunkSize = page === 0 ? _this8.rows * 2 : _this8.rows * 3;\n\n            if (page !== _this8.virtualPage) {\n              _this8.virtualPage = page;\n\n              _this8.onLazyLoad.emit({\n                first: virtualScrollOffset,\n                rows: virtualScrollChunkSize,\n                sortField: _this8.sortField,\n                sortOrder: _this8.sortOrder,\n                filters: _this8.filters,\n                globalFilter: _this8.filters && _this8.filters['global'] ? _this8.filters['global'].value : null,\n                multiSortMeta: _this8.multiSortMeta\n              });\n            }\n          }, this.virtualScrollDelay);\n        }\n      }\n    }, {\n      key: \"scrollTo\",\n      value: function scrollTo(options) {\n        if (this.virtualScrollBody) {\n          this.virtualScrollBody.scrollTo(options);\n        } else {\n          if (this.wrapperViewChild.nativeElement.scrollTo) {\n            this.wrapperViewChild.nativeElement.scrollTo(options);\n          } else {\n            this.wrapperViewChild.nativeElement.scrollLeft = options.left;\n            this.wrapperViewChild.nativeElement.scrollTop = options.top;\n          }\n        }\n      }\n    }, {\n      key: \"updateEditingCell\",\n      value: function updateEditingCell(cell, data, field, index) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.editingCellRowIndex = index;\n        this.bindDocumentEditListener();\n      }\n    }, {\n      key: \"isEditingCellValid\",\n      value: function isEditingCellValid() {\n        return this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n      }\n    }, {\n      key: \"bindDocumentEditListener\",\n      value: function bindDocumentEditListener() {\n        var _this9 = this;\n\n        if (!this.documentEditListener) {\n          this.documentEditListener = function (event) {\n            if (_this9.editingCell && !_this9.selfClick && _this9.isEditingCellValid()) {\n              DomHandler.removeClass(_this9.editingCell, 'p-cell-editing');\n              _this9.editingCell = null;\n\n              _this9.onEditComplete.emit({\n                field: _this9.editingCellField,\n                data: _this9.editingCellData,\n                originalEvent: event,\n                index: _this9.editingCellRowIndex\n              });\n\n              _this9.editingCellField = null;\n              _this9.editingCellData = null;\n              _this9.editingCellRowIndex = null;\n\n              _this9.unbindDocumentEditListener();\n\n              _this9.cd.markForCheck();\n\n              if (_this9.overlaySubscription) {\n                _this9.overlaySubscription.unsubscribe();\n              }\n            }\n\n            _this9.selfClick = false;\n          };\n\n          document.addEventListener('click', this.documentEditListener);\n        }\n      }\n    }, {\n      key: \"unbindDocumentEditListener\",\n      value: function unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n          document.removeEventListener('click', this.documentEditListener);\n          this.documentEditListener = null;\n        }\n      }\n    }, {\n      key: \"initRowEdit\",\n      value: function initRowEdit(rowData) {\n        var dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        this.editingRowKeys[dataKeyValue] = true;\n      }\n    }, {\n      key: \"saveRowEdit\",\n      value: function saveRowEdit(rowData, rowElement) {\n        if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n          var dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n          delete this.editingRowKeys[dataKeyValue];\n        }\n      }\n    }, {\n      key: \"cancelRowEdit\",\n      value: function cancelRowEdit(rowData) {\n        var dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        delete this.editingRowKeys[dataKeyValue];\n      }\n    }, {\n      key: \"toggleRow\",\n      value: function toggleRow(rowData, event) {\n        if (!this.dataKey) {\n          throw new Error('dataKey must be defined to use row expansion');\n        }\n\n        var dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n\n        if (this.expandedRowKeys[dataKeyValue] != null) {\n          delete this.expandedRowKeys[dataKeyValue];\n          this.onRowCollapse.emit({\n            originalEvent: event,\n            data: rowData\n          });\n        } else {\n          if (this.rowExpandMode === 'single') {\n            this.expandedRowKeys = {};\n          }\n\n          this.expandedRowKeys[dataKeyValue] = true;\n          this.onRowExpand.emit({\n            originalEvent: event,\n            data: rowData\n          });\n        }\n\n        if (event) {\n          event.preventDefault();\n        }\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n      }\n    }, {\n      key: \"isRowExpanded\",\n      value: function isRowExpanded(rowData) {\n        return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n      }\n    }, {\n      key: \"isRowEditing\",\n      value: function isRowEditing(rowData) {\n        return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n      }\n    }, {\n      key: \"isSingleSelectionMode\",\n      value: function isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n      }\n    }, {\n      key: \"isMultipleSelectionMode\",\n      value: function isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n      }\n    }, {\n      key: \"onColumnResizeBegin\",\n      value: function onColumnResizeBegin(event) {\n        var containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        this.resizeColumnElement = event.target.parentElement;\n        this.columnResizing = true;\n        this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft;\n        this.onColumnResize(event);\n        event.preventDefault();\n      }\n    }, {\n      key: \"onColumnResize\",\n      value: function onColumnResize(event) {\n        var containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft + 'px';\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n      }\n    }, {\n      key: \"onColumnResizeEnd\",\n      value: function onColumnResizeEnd() {\n        var delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        var columnWidth = this.resizeColumnElement.offsetWidth;\n        var newColumnWidth = columnWidth + delta;\n        var minWidth = this.resizeColumnElement.style.minWidth || 15;\n\n        if (newColumnWidth >= minWidth) {\n          if (this.columnResizeMode === 'fit') {\n            var nextColumn = this.resizeColumnElement.nextElementSibling;\n            var nextColumnWidth = nextColumn.offsetWidth - delta;\n\n            if (newColumnWidth > 15 && nextColumnWidth > 15) {\n              if (!this.scrollable) {\n                this.resizeColumnElement.style.width = newColumnWidth + 'px';\n\n                if (nextColumn) {\n                  nextColumn.style.width = nextColumnWidth + 'px';\n                }\n              } else {\n                this.resizeTableCells(newColumnWidth, nextColumnWidth);\n              }\n            }\n          } else if (this.columnResizeMode === 'expand') {\n            var tableWidth = this.tableViewChild.nativeElement.offsetWidth + delta;\n            this.tableViewChild.nativeElement.style.minWidth = tableWidth + 'px';\n            this.resizeColumnElement.style.width = newColumnWidth + 'px';\n            if (!this.scrollable) this.tableViewChild.nativeElement.style.width = tableWidth + 'px';else this.resizeTableCells(newColumnWidth, null);\n          }\n\n          this.onColResize.emit({\n            element: this.resizeColumnElement,\n            delta: delta\n          });\n\n          if (this.isStateful()) {\n            this.saveState();\n          }\n        }\n\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n      }\n    }, {\n      key: \"resizeTableCells\",\n      value: function resizeTableCells(newColumnWidth, nextColumnWidth) {\n        var _this10 = this;\n\n        var colIndex = DomHandler.index(this.resizeColumnElement);\n        var widths = [];\n        var tableHead = DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-datatable-thead');\n        var headers = DomHandler.find(tableHead, 'tr > th');\n        headers.forEach(function (header) {\n          return widths.push(DomHandler.getOuterWidth(header));\n        });\n        this.destroyStyleElement();\n        this.createStyleElement();\n        var innerHTML = '';\n        widths.forEach(function (width, index) {\n          var colWidth = index === colIndex ? newColumnWidth : nextColumnWidth && index === colIndex + 1 ? nextColumnWidth : width;\n          innerHTML += \"\\n                #\".concat(_this10.id, \"-table > .p-datatable-thead > tr > th:nth-child(\").concat(index + 1, \") {\\n                    flex: 0 0 \").concat(colWidth, \"px !important;\\n                }\\n\\n                #\").concat(_this10.id, \"-table > .p-datatable-tbody > tr > td:nth-child(\").concat(index + 1, \") {\\n                    flex: 0 0 \").concat(colWidth, \"px !important;\\n                }\\n            \");\n        });\n        this.styleElement.innerHTML = innerHTML;\n      }\n    }, {\n      key: \"onColumnDragStart\",\n      value: function onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n      }\n    }, {\n      key: \"onColumnDragEnter\",\n      value: function onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n          event.preventDefault();\n          var containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n          var dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n          if (this.draggedColumn != dropHeader) {\n            var dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n            var dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n            var targetLeft = dropHeaderOffset.left - containerOffset.left;\n            var targetTop = containerOffset.top - dropHeaderOffset.top;\n            var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n            this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n            this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n            if (event.pageX > columnCenter) {\n              this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n              this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n              this.dropPosition = 1;\n            } else {\n              this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n              this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n              this.dropPosition = -1;\n            }\n\n            if (dropIndex - dragIndex === 1 && this.dropPosition === -1 || dropIndex - dragIndex === -1 && this.dropPosition === 1) {\n              this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n              this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            } else {\n              this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n              this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n            }\n          } else {\n            event.dataTransfer.dropEffect = 'none';\n          }\n        }\n      }\n    }, {\n      key: \"onColumnDragLeave\",\n      value: function onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n          event.preventDefault();\n          this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n          this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n      }\n    }, {\n      key: \"onColumnDrop\",\n      value: function onColumnDrop(event, dropColumn) {\n        var _this11 = this;\n\n        event.preventDefault();\n\n        if (this.draggedColumn) {\n          var dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n          var dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n          var allowDrop = dragIndex != dropIndex;\n\n          if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {\n            allowDrop = false;\n          }\n\n          if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n            dropIndex = dropIndex + 1;\n          }\n\n          if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n            dropIndex = dropIndex - 1;\n          }\n\n          if (allowDrop) {\n            ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n            this.onColReorder.emit({\n              dragIndex: dragIndex,\n              dropIndex: dropIndex,\n              columns: this.columns\n            });\n\n            if (this.isStateful()) {\n              this.zone.runOutsideAngular(function () {\n                setTimeout(function () {\n                  _this11.saveState();\n                });\n              });\n            }\n          }\n\n          this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n          this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n          this.draggedColumn.draggable = false;\n          this.draggedColumn = null;\n          this.dropPosition = null;\n        }\n      }\n    }, {\n      key: \"onRowDragStart\",\n      value: function onRowDragStart(event, index) {\n        this.rowDragging = true;\n        this.draggedRowIndex = index;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n      }\n    }, {\n      key: \"onRowDragOver\",\n      value: function onRowDragOver(event, index, rowElement) {\n        if (this.rowDragging && this.draggedRowIndex !== index) {\n          var rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n          var pageY = event.pageY;\n          var rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n          var prevRowElement = rowElement.previousElementSibling;\n\n          if (pageY < rowMidY) {\n            DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n            this.droppedRowIndex = index;\n            if (prevRowElement) DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n          } else {\n            if (prevRowElement) DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n            this.droppedRowIndex = index + 1;\n            DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n          }\n        }\n      }\n    }, {\n      key: \"onRowDragLeave\",\n      value: function onRowDragLeave(event, rowElement) {\n        var prevRowElement = rowElement.previousElementSibling;\n\n        if (prevRowElement) {\n          DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n        }\n\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n      }\n    }, {\n      key: \"onRowDragEnd\",\n      value: function onRowDragEnd(event) {\n        this.rowDragging = false;\n        this.draggedRowIndex = null;\n        this.droppedRowIndex = null;\n      }\n    }, {\n      key: \"onRowDrop\",\n      value: function onRowDrop(event, rowElement) {\n        if (this.droppedRowIndex != null) {\n          var dropIndex = this.draggedRowIndex > this.droppedRowIndex ? this.droppedRowIndex : this.droppedRowIndex === 0 ? 0 : this.droppedRowIndex - 1;\n          ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n          this.onRowReorder.emit({\n            dragIndex: this.draggedRowIndex,\n            dropIndex: dropIndex\n          });\n        } //cleanup\n\n\n        this.onRowDragLeave(event, rowElement);\n        this.onRowDragEnd(event);\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        var data = this.filteredValue || this.value;\n        return data == null || data.length == 0;\n      }\n    }, {\n      key: \"getBlockableElement\",\n      value: function getBlockableElement() {\n        return this.el.nativeElement.children[0];\n      }\n    }, {\n      key: \"getStorage\",\n      value: function getStorage() {\n        switch (this.stateStorage) {\n          case 'local':\n            return window.localStorage;\n\n          case 'session':\n            return window.sessionStorage;\n\n          default:\n            throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n      }\n    }, {\n      key: \"isStateful\",\n      value: function isStateful() {\n        return this.stateKey != null;\n      }\n    }, {\n      key: \"saveState\",\n      value: function saveState() {\n        var storage = this.getStorage();\n        var state = {};\n\n        if (this.paginator) {\n          state.first = this.first;\n          state.rows = this.rows;\n        }\n\n        if (this.sortField) {\n          state.sortField = this.sortField;\n          state.sortOrder = this.sortOrder;\n        }\n\n        if (this.multiSortMeta) {\n          state.multiSortMeta = this.multiSortMeta;\n        }\n\n        if (this.hasFilter()) {\n          state.filters = this.filters;\n        }\n\n        if (this.resizableColumns) {\n          this.saveColumnWidths(state);\n        }\n\n        if (this.reorderableColumns) {\n          this.saveColumnOrder(state);\n        }\n\n        if (this.selection) {\n          state.selection = this.selection;\n        }\n\n        if (Object.keys(this.expandedRowKeys).length) {\n          state.expandedRowKeys = this.expandedRowKeys;\n        }\n\n        storage.setItem(this.stateKey, JSON.stringify(state));\n        this.onStateSave.emit(state);\n      }\n    }, {\n      key: \"clearState\",\n      value: function clearState() {\n        var storage = this.getStorage();\n\n        if (this.stateKey) {\n          storage.removeItem(this.stateKey);\n        }\n      }\n    }, {\n      key: \"restoreState\",\n      value: function restoreState() {\n        var _this12 = this;\n\n        var storage = this.getStorage();\n        var stateString = storage.getItem(this.stateKey);\n        var dateFormat = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n\n        var reviver = function reviver(key, value) {\n          if (typeof value === \"string\" && dateFormat.test(value)) {\n            return new Date(value);\n          }\n\n          return value;\n        };\n\n        if (stateString) {\n          var state = JSON.parse(stateString, reviver);\n\n          if (this.paginator) {\n            if (this.first !== undefined) {\n              this.first = state.first;\n              this.firstChange.emit(this.first);\n            }\n\n            if (this.rows !== undefined) {\n              this.rows = state.rows;\n              this.rowsChange.emit(this.rows);\n            }\n          }\n\n          if (state.sortField) {\n            this.restoringSort = true;\n            this._sortField = state.sortField;\n            this._sortOrder = state.sortOrder;\n          }\n\n          if (state.multiSortMeta) {\n            this.restoringSort = true;\n            this._multiSortMeta = state.multiSortMeta;\n          }\n\n          if (state.filters) {\n            this.restoringFilter = true;\n            this.filters = state.filters;\n          }\n\n          if (this.resizableColumns) {\n            this.columnWidthsState = state.columnWidths;\n            this.tableWidthState = state.tableWidth;\n          }\n\n          if (state.expandedRowKeys) {\n            this.expandedRowKeys = state.expandedRowKeys;\n          }\n\n          if (state.selection) {\n            Promise.resolve(null).then(function () {\n              return _this12.selectionChange.emit(state.selection);\n            });\n          }\n\n          this.stateRestored = true;\n          this.onStateRestore.emit(state);\n        }\n      }\n    }, {\n      key: \"saveColumnWidths\",\n      value: function saveColumnWidths(state) {\n        var widths = [];\n        var headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr > th');\n        headers.forEach(function (header) {\n          return widths.push(DomHandler.getOuterWidth(header));\n        });\n        state.columnWidths = widths.join(',');\n\n        if (this.columnResizeMode === 'expand') {\n          state.tableWidth = DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n        }\n      }\n    }, {\n      key: \"restoreColumnWidths\",\n      value: function restoreColumnWidths() {\n        var _this13 = this;\n\n        if (this.columnWidthsState) {\n          var widths = this.columnWidthsState.split(',');\n\n          if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n            this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n            this.tableViewChild.nativeElement.style.minWidth = this.tableWidthState;\n            this.containerViewChild.nativeElement.style.width = this.tableWidthState;\n          }\n\n          this.createStyleElement();\n\n          if (this.scrollable && widths && widths.length > 0) {\n            var innerHTML = '';\n            widths.forEach(function (width, index) {\n              innerHTML += \"\\n                            #\".concat(_this13.id, \"-table > .p-datatable-thead > tr > th:nth-child(\").concat(index + 1, \") {\\n                                flex: 0 0 \").concat(width, \"px;\\n                            }\\n\\n                            #\").concat(_this13.id, \"-table > .p-datatable-tbody > tr > td:nth-child(\").concat(index + 1, \") {\\n                                flex: 0 0 \").concat(width, \"px;\\n                            }\\n                        \");\n            });\n            this.styleElement.innerHTML = innerHTML;\n          } else {\n            DomHandler.find(this.tableViewChild.nativeElement, '.p-datatable-thead > tr > th').forEach(function (header, index) {\n              header.style.width = widths[index] + 'px';\n            });\n          }\n        }\n      }\n    }, {\n      key: \"saveColumnOrder\",\n      value: function saveColumnOrder(state) {\n        if (this.columns) {\n          var columnOrder = [];\n          this.columns.map(function (column) {\n            columnOrder.push(column.field || column.key);\n          });\n          state.columnOrder = columnOrder;\n        }\n      }\n    }, {\n      key: \"restoreColumnOrder\",\n      value: function restoreColumnOrder() {\n        var _this14 = this;\n\n        var storage = this.getStorage();\n        var stateString = storage.getItem(this.stateKey);\n\n        if (stateString) {\n          var state = JSON.parse(stateString);\n          var columnOrder = state.columnOrder;\n\n          if (columnOrder) {\n            var reorderedColumns = [];\n            columnOrder.map(function (key) {\n              var col = _this14.findColumnByKey(key);\n\n              if (col) {\n                reorderedColumns.push(col);\n              }\n            });\n            this.columnOrderStateRestored = true;\n            this.columns = reorderedColumns;\n          }\n        }\n      }\n    }, {\n      key: \"findColumnByKey\",\n      value: function findColumnByKey(key) {\n        if (this.columns) {\n          var _iterator3 = _createForOfIteratorHelper(this.columns),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var col = _step3.value;\n              if (col.key === key || col.field === key) return col;else continue;\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"createStyleElement\",\n      value: function createStyleElement() {\n        this.styleElement = document.createElement('style');\n        this.styleElement.type = 'text/css';\n        document.head.appendChild(this.styleElement);\n      }\n    }, {\n      key: \"getGroupRowsMeta\",\n      value: function getGroupRowsMeta() {\n        return {\n          field: this.groupRowsBy,\n          order: this.groupRowsByOrder\n        };\n      }\n    }, {\n      key: \"createResponsiveStyle\",\n      value: function createResponsiveStyle() {\n        if (!this.responsiveStyleElement) {\n          this.responsiveStyleElement = document.createElement('style');\n          this.responsiveStyleElement.type = 'text/css';\n          document.head.appendChild(this.responsiveStyleElement);\n          var innerHTML = \"\\n@media screen and (max-width: \".concat(this.breakpoint, \") {\\n    #\").concat(this.id, \" .p-datatable-thead > tr > th,\\n    #\").concat(this.id, \" .p-datatable-tfoot > tr > td {\\n        display: none !important;\\n    }\\n\\n    #\").concat(this.id, \" .p-datatable-tbody > tr > td {\\n        display: flex;\\n        width: 100% !important;\\n        align-items: center;\\n        justify-content: space-between;\\n    }\\n\\n    #\").concat(this.id, \" .p-datatable-tbody > tr > td:not(:last-child) {\\n        border: 0 none;\\n    }\\n\\n    #\").concat(this.id, \".p-datatable-gridlines .p-datatable-tbody > tr > td:last-child {\\n        border-top: 0;\\n        border-right: 0;\\n        border-left: 0;\\n    }\\n\\n    #\").concat(this.id, \" .p-datatable-tbody > tr > td > .p-column-title {\\n        display: block;\\n    }\\n}\\n\");\n          this.responsiveStyleElement.innerHTML = innerHTML;\n        }\n      }\n    }, {\n      key: \"destroyResponsiveStyle\",\n      value: function destroyResponsiveStyle() {\n        if (this.responsiveStyleElement) {\n          document.head.removeChild(this.responsiveStyleElement);\n          this.responsiveStyleElement = null;\n        }\n      }\n    }, {\n      key: \"destroyStyleElement\",\n      value: function destroyStyleElement() {\n        if (this.styleElement) {\n          document.head.removeChild(this.styleElement);\n          this.styleElement = null;\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.initialized = null;\n\n        if (this.virtualScrollSubscription) {\n          this.virtualScrollSubscription.unsubscribe();\n        }\n\n        this.destroyStyleElement();\n        this.destroyResponsiveStyle();\n      }\n    }]);\n\n    return Table;\n  }();\n\n  Table.ɵfac = function Table_Factory(t) {\n    return new (t || Table)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FilterService), i0.ɵɵdirectiveInject(i1.OverlayService));\n  };\n\n  Table.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Table,\n    selectors: [[\"p-table\"]],\n    contentQueries: function Table_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Table_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resizeHelperViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorUpViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorDownViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapperViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableHeaderViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualScrollBody = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      frozenColumns: \"frozenColumns\",\n      frozenValue: \"frozenValue\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      tableStyle: \"tableStyle\",\n      tableStyleClass: \"tableStyleClass\",\n      paginator: \"paginator\",\n      pageLinks: \"pageLinks\",\n      rowsPerPageOptions: \"rowsPerPageOptions\",\n      alwaysShowPaginator: \"alwaysShowPaginator\",\n      paginatorPosition: \"paginatorPosition\",\n      paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\",\n      paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\",\n      currentPageReportTemplate: \"currentPageReportTemplate\",\n      showCurrentPageReport: \"showCurrentPageReport\",\n      showJumpToPageDropdown: \"showJumpToPageDropdown\",\n      showJumpToPageInput: \"showJumpToPageInput\",\n      showFirstLastIcon: \"showFirstLastIcon\",\n      showPageLinks: \"showPageLinks\",\n      defaultSortOrder: \"defaultSortOrder\",\n      sortMode: \"sortMode\",\n      resetPageOnSort: \"resetPageOnSort\",\n      selectionMode: \"selectionMode\",\n      selectionPageOnly: \"selectionPageOnly\",\n      contextMenuSelection: \"contextMenuSelection\",\n      contextMenuSelectionMode: \"contextMenuSelectionMode\",\n      dataKey: \"dataKey\",\n      metaKeySelection: \"metaKeySelection\",\n      rowSelectable: \"rowSelectable\",\n      rowTrackBy: \"rowTrackBy\",\n      lazy: \"lazy\",\n      lazyLoadOnInit: \"lazyLoadOnInit\",\n      compareSelectionBy: \"compareSelectionBy\",\n      csvSeparator: \"csvSeparator\",\n      exportFilename: \"exportFilename\",\n      filters: \"filters\",\n      globalFilterFields: \"globalFilterFields\",\n      filterDelay: \"filterDelay\",\n      filterLocale: \"filterLocale\",\n      expandedRowKeys: \"expandedRowKeys\",\n      editingRowKeys: \"editingRowKeys\",\n      rowExpandMode: \"rowExpandMode\",\n      scrollable: \"scrollable\",\n      scrollDirection: \"scrollDirection\",\n      rowGroupMode: \"rowGroupMode\",\n      scrollHeight: \"scrollHeight\",\n      virtualScroll: \"virtualScroll\",\n      virtualScrollDelay: \"virtualScrollDelay\",\n      virtualRowHeight: \"virtualRowHeight\",\n      frozenWidth: \"frozenWidth\",\n      responsive: \"responsive\",\n      contextMenu: \"contextMenu\",\n      resizableColumns: \"resizableColumns\",\n      columnResizeMode: \"columnResizeMode\",\n      reorderableColumns: \"reorderableColumns\",\n      loading: \"loading\",\n      loadingIcon: \"loadingIcon\",\n      showLoader: \"showLoader\",\n      rowHover: \"rowHover\",\n      customSort: \"customSort\",\n      showInitialSortBadge: \"showInitialSortBadge\",\n      autoLayout: \"autoLayout\",\n      exportFunction: \"exportFunction\",\n      stateKey: \"stateKey\",\n      stateStorage: \"stateStorage\",\n      editMode: \"editMode\",\n      groupRowsBy: \"groupRowsBy\",\n      groupRowsByOrder: \"groupRowsByOrder\",\n      minBufferPx: \"minBufferPx\",\n      maxBufferPx: \"maxBufferPx\",\n      responsiveLayout: \"responsiveLayout\",\n      breakpoint: \"breakpoint\",\n      value: \"value\",\n      columns: \"columns\",\n      first: \"first\",\n      rows: \"rows\",\n      totalRecords: \"totalRecords\",\n      sortField: \"sortField\",\n      sortOrder: \"sortOrder\",\n      multiSortMeta: \"multiSortMeta\",\n      selection: \"selection\",\n      selectAll: \"selectAll\"\n    },\n    outputs: {\n      selectAllChange: \"selectAllChange\",\n      selectionChange: \"selectionChange\",\n      contextMenuSelectionChange: \"contextMenuSelectionChange\",\n      onRowSelect: \"onRowSelect\",\n      onRowUnselect: \"onRowUnselect\",\n      onPage: \"onPage\",\n      onSort: \"onSort\",\n      onFilter: \"onFilter\",\n      onLazyLoad: \"onLazyLoad\",\n      onRowExpand: \"onRowExpand\",\n      onRowCollapse: \"onRowCollapse\",\n      onContextMenuSelect: \"onContextMenuSelect\",\n      onColResize: \"onColResize\",\n      onColReorder: \"onColReorder\",\n      onRowReorder: \"onRowReorder\",\n      onEditInit: \"onEditInit\",\n      onEditComplete: \"onEditComplete\",\n      onEditCancel: \"onEditCancel\",\n      onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\",\n      sortFunction: \"sortFunction\",\n      firstChange: \"firstChange\",\n      rowsChange: \"rowsChange\",\n      onStateSave: \"onStateSave\",\n      onStateRestore: \"onStateRestore\"\n    },\n    features: [i0.ɵɵProvidersFeature([TableService]), i0.ɵɵNgOnChangesFeature],\n    decls: 14,\n    vars: 33,\n    consts: [[3, \"ngStyle\", \"ngClass\"], [\"container\", \"\"], [\"class\", \"p-datatable-loading-overlay p-component-overlay\", 4, \"ngIf\"], [\"class\", \"p-datatable-header\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [1, \"p-datatable-wrapper\", 3, \"ngStyle\"], [\"wrapper\", \"\"], [\"role\", \"table\", \"class\", \"p-datatable-table\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"class\", \"p-datatable-virtual-scrollable-body\", 3, \"itemSize\", \"height\", \"minBufferPx\", \"maxBufferPx\", \"scrolledIndexChange\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-datatable-footer\", 4, \"ngIf\"], [\"class\", \"p-column-resizer-helper\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-down p-datatable-reorder-indicator-up\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-up p-datatable-reorder-indicator-down\", \"style\", \"display:none\", 4, \"ngIf\"], [1, \"p-datatable-loading-overlay\", \"p-component-overlay\"], [1, \"p-datatable-header\"], [4, \"ngTemplateOutlet\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"onPageChange\"], [\"role\", \"table\", 1, \"p-datatable-table\", 3, \"ngClass\", \"ngStyle\"], [\"table\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-datatable-thead\"], [\"class\", \"p-datatable-tbody p-datatable-frozen-tbody\", 3, \"value\", \"frozenRows\", \"pTableBody\", \"pTableBodyTemplate\", \"frozen\", 4, \"ngIf\"], [1, \"p-datatable-tbody\", 3, \"value\", \"pTableBody\", \"pTableBodyTemplate\"], [\"class\", \"p-datatable-tfoot\", 4, \"ngIf\"], [1, \"p-datatable-tbody\", \"p-datatable-frozen-tbody\", 3, \"value\", \"frozenRows\", \"pTableBody\", \"pTableBodyTemplate\", \"frozen\"], [1, \"p-datatable-tfoot\"], [\"tabindex\", \"0\", 1, \"p-datatable-virtual-scrollable-body\", 3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"scrolledIndexChange\"], [\"tableHeader\", \"\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"onPageChange\"], [1, \"p-datatable-footer\"], [1, \"p-column-resizer-helper\", 2, \"display\", \"none\"], [\"resizeHelper\", \"\"], [1, \"pi\", \"pi-arrow-down\", \"p-datatable-reorder-indicator-up\", 2, \"display\", \"none\"], [\"reorderIndicatorUp\", \"\"], [1, \"pi\", \"pi-arrow-up\", \"p-datatable-reorder-indicator-down\", 2, \"display\", \"none\"], [\"reorderIndicatorDown\", \"\"]],\n    template: function Table_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, Table_div_2_Template, 2, 2, \"div\", 2);\n        i0.ɵɵtemplate(3, Table_div_3_Template, 2, 1, \"div\", 3);\n        i0.ɵɵtemplate(4, Table_p_paginator_4_Template, 1, 17, \"p-paginator\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5, 6);\n        i0.ɵɵtemplate(7, Table_table_7_Template, 8, 16, \"table\", 7);\n        i0.ɵɵtemplate(8, Table_cdk_virtual_scroll_viewport_8_Template, 10, 21, \"cdk-virtual-scroll-viewport\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, Table_p_paginator_9_Template, 1, 17, \"p-paginator\", 9);\n        i0.ɵɵtemplate(10, Table_div_10_Template, 2, 1, \"div\", 10);\n        i0.ɵɵtemplate(11, Table_div_11_Template, 2, 0, \"div\", 11);\n        i0.ɵɵtemplate(12, Table_span_12_Template, 2, 0, \"span\", 12);\n        i0.ɵɵtemplate(13, Table_span_13_Template, 2, 0, \"span\", 13);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunctionV(16, _c8, [ctx.rowHover || ctx.selectionMode, ctx.autoLayout, ctx.resizableColumns, ctx.resizableColumns && ctx.columnResizeMode === \"fit\", ctx.scrollable, ctx.scrollable && ctx.scrollDirection === \"vertical\", ctx.scrollable && ctx.scrollDirection === \"horizontal\", ctx.scrollable && ctx.scrollDirection === \"both\", ctx.scrollable && ctx.scrollHeight === \"flex\", ctx.responsiveLayout === \"stack\", ctx.responsiveLayout === \"scroll\", ctx.responsive, ctx.headerGroupedTemplate != null, ctx.footerGroupedTemplate != null]));\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading && ctx.showLoader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.captionTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"top\" || ctx.paginatorPosition == \"both\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(31, _c9, ctx.scrollHeight));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.virtualScroll);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.virtualScroll);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"bottom\" || ctx.paginatorPosition == \"both\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.summaryTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.resizableColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n      }\n    },\n    dependencies: function dependencies() {\n      return [i2.Paginator, TableBody, i3.CdkVirtualScrollViewport, i4.NgStyle, i4.NgClass, i4.NgIf, i4.NgTemplateOutlet, i3.CdkFixedSizeVirtualScroll];\n    },\n    styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;min-width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-icon,.p-datatable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper{overflow-x:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper>table,.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable .p-datatable-wrapper{position:relative;overflow:auto}.p-datatable-scrollable .p-datatable-thead,.p-datatable-scrollable .p-datatable-tbody,.p-datatable-scrollable .p-datatable-tfoot{display:block}.p-datatable-scrollable .p-datatable-thead>tr,.p-datatable-scrollable .p-datatable-tbody>tr,.p-datatable-scrollable .p-datatable-tfoot>tr{display:flex;flex-wrap:nowrap;width:100%}.p-datatable-scrollable .p-datatable-thead>tr>th,.p-datatable-scrollable .p-datatable-tbody>tr>td,.p-datatable-scrollable .p-datatable-tfoot>tr>td{display:flex;flex:1 1 0;align-items:center}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-thead,.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-virtual-scrollable-body>.cdk-virtual-scroll-content-wrapper>.p-datatable-table>.p-datatable-thead{position:sticky;top:0;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-frozen-tbody{position:sticky;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-tfoot{position:sticky;bottom:0;z-index:1}.p-datatable-scrollable .p-frozen-column{position:sticky;background:inherit}.p-datatable-scrollable th.p-frozen-column{z-index:1}.p-datatable-scrollable-both .p-datatable-thead>tr>th,.p-datatable-scrollable-both .p-datatable-tbody>tr>td,.p-datatable-scrollable-both .p-datatable-tfoot>tr>td,.p-datatable-scrollable-horizontal .p-datatable-thead>tr>th .p-datatable-scrollable-horizontal .p-datatable-tbody>tr>td,.p-datatable-scrollable-horizontal .p-datatable-tfoot>tr>td{flex:0 0 auto}.p-datatable-flex-scrollable{display:flex;flex-direction:column;height:100%}.p-datatable-flex-scrollable .p-datatable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-scrollable .p-rowgroup-header{position:sticky;z-index:1}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot{display:table;border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr{display:table-row}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr>th,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr>td{display:table-cell}.p-datatable-flex-scrollable{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-thead>tr>th,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-tbody>tr>td{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-editor-cancel,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-up,.p-datatable-reorder-indicator-down{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-menu-button,.p-column-filter-clear-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute;top:0;left:0}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable .p-datatable-tbody>tr>td>.p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}\\n\"],\n    encapsulation: 2\n  });\n  return Table;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar TableBody = /*#__PURE__*/(function () {\n  var TableBody = /*#__PURE__*/function () {\n    function TableBody(dt, tableService, cd, el) {\n      var _this15 = this;\n\n      _classCallCheck(this, TableBody);\n\n      this.dt = dt;\n      this.tableService = tableService;\n      this.cd = cd;\n      this.el = el;\n      this.subscription = this.dt.tableService.valueSource$.subscribe(function () {\n        if (_this15.dt.virtualScroll) {\n          _this15.cd.detectChanges();\n        }\n      });\n    }\n\n    _createClass(TableBody, [{\n      key: \"value\",\n      get: function get() {\n        return this._value;\n      },\n      set: function set(val) {\n        this._value = val;\n\n        if (this.frozenRows) {\n          this.updateFrozenRowStickyPosition();\n        }\n\n        if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n          this.updateFrozenRowGroupHeaderStickyPosition();\n        }\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        if (this.frozenRows) {\n          this.updateFrozenRowStickyPosition();\n        }\n\n        if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n          this.updateFrozenRowGroupHeaderStickyPosition();\n        }\n      }\n    }, {\n      key: \"shouldRenderRowGroupHeader\",\n      value: function shouldRenderRowGroupHeader(value, rowData, i) {\n        var currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        var prevRowData = value[i - 1];\n\n        if (prevRowData) {\n          var previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n          return currentRowFieldData !== previousRowFieldData;\n        } else {\n          return true;\n        }\n      }\n    }, {\n      key: \"shouldRenderRowGroupFooter\",\n      value: function shouldRenderRowGroupFooter(value, rowData, i) {\n        var currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        var nextRowData = value[i + 1];\n\n        if (nextRowData) {\n          var nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n          return currentRowFieldData !== nextRowFieldData;\n        } else {\n          return true;\n        }\n      }\n    }, {\n      key: \"shouldRenderRowspan\",\n      value: function shouldRenderRowspan(value, rowData, i) {\n        var currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        var prevRowData = value[i - 1];\n\n        if (prevRowData) {\n          var previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n          return currentRowFieldData !== previousRowFieldData;\n        } else {\n          return true;\n        }\n      }\n    }, {\n      key: \"calculateRowGroupSize\",\n      value: function calculateRowGroupSize(value, rowData, index) {\n        var currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        var nextRowFieldData = currentRowFieldData;\n        var groupRowSpan = 0;\n\n        while (currentRowFieldData === nextRowFieldData) {\n          groupRowSpan++;\n          var nextRowData = value[++index];\n\n          if (nextRowData) {\n            nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n          } else {\n            break;\n          }\n        }\n\n        return groupRowSpan === 1 ? null : groupRowSpan;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }, {\n      key: \"updateFrozenRowStickyPosition\",\n      value: function updateFrozenRowStickyPosition() {\n        this.el.nativeElement.style.top = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling) + 'px';\n      }\n    }, {\n      key: \"updateFrozenRowGroupHeaderStickyPosition\",\n      value: function updateFrozenRowGroupHeaderStickyPosition() {\n        if (this.el.nativeElement.previousElementSibling) {\n          var tableHeaderHeight = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling);\n          this.dt.rowGroupHeaderStyleObject.top = tableHeaderHeight + 'px';\n        }\n      }\n    }]);\n\n    return TableBody;\n  }();\n\n  TableBody.ɵfac = function TableBody_Factory(t) {\n    return new (t || TableBody)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  TableBody.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TableBody,\n    selectors: [[\"\", \"pTableBody\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      columns: [\"pTableBody\", \"columns\"],\n      template: [\"pTableBodyTemplate\", \"template\"],\n      value: \"value\",\n      frozen: \"frozen\",\n      frozenRows: \"frozenRows\"\n    },\n    attrs: _c10,\n    decls: 6,\n    vars: 6,\n    consts: [[4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"cdkVirtualFor\", \"\", 3, \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplateCacheSize\"]],\n    template: function TableBody_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TableBody_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, TableBody_ng_container_1_Template, 2, 3, \"ng-container\", 0);\n        i0.ɵɵtemplate(2, TableBody_ng_container_2_Template, 2, 2, \"ng-container\", 0);\n        i0.ɵɵtemplate(3, TableBody_ng_container_3_Template, 2, 2, \"ng-container\", 0);\n        i0.ɵɵtemplate(4, TableBody_ng_container_4_Template, 2, 5, \"ng-container\", 0);\n        i0.ɵɵtemplate(5, TableBody_ng_container_5_Template, 2, 5, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && !ctx.dt.virtualScroll);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && ctx.dt.virtualScroll);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dt.expandedRowTemplate && !(ctx.frozen && ctx.dt.frozenExpandedRowTemplate));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dt.frozenExpandedRowTemplate && ctx.frozen);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dt.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dt.isEmpty() && !ctx.dt.loading);\n      }\n    },\n    dependencies: [i4.NgIf, i4.NgForOf, i4.NgTemplateOutlet, i3.CdkVirtualForOf],\n    encapsulation: 2\n  });\n  return TableBody;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar RowGroupHeader = /*#__PURE__*/(function () {\n  var RowGroupHeader = /*#__PURE__*/function () {\n    function RowGroupHeader(dt) {\n      _classCallCheck(this, RowGroupHeader);\n\n      this.dt = dt;\n    }\n\n    _createClass(RowGroupHeader, [{\n      key: \"getFrozenRowGroupHeaderStickyPosition\",\n      get: function get() {\n        return this.dt.rowGroupHeaderStyleObject ? this.dt.rowGroupHeaderStyleObject.top : '';\n      }\n    }]);\n\n    return RowGroupHeader;\n  }();\n\n  RowGroupHeader.ɵfac = function RowGroupHeader_Factory(t) {\n    return new (t || RowGroupHeader)(i0.ɵɵdirectiveInject(Table));\n  };\n\n  RowGroupHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: RowGroupHeader,\n    selectors: [[\"\", \"pRowGroupHeader\", \"\"]],\n    hostAttrs: [1, \"p-rowgroup-header\", \"p-element\"],\n    hostVars: 2,\n    hostBindings: function RowGroupHeader_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"top\", ctx.getFrozenRowGroupHeaderStickyPosition);\n      }\n    }\n  });\n  return RowGroupHeader;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar FrozenColumn = /*#__PURE__*/(function () {\n  var FrozenColumn = /*#__PURE__*/function () {\n    function FrozenColumn(el) {\n      _classCallCheck(this, FrozenColumn);\n\n      this.el = el;\n      this.alignFrozen = \"left\";\n      this._frozen = true;\n    }\n\n    _createClass(FrozenColumn, [{\n      key: \"frozen\",\n      get: function get() {\n        return this._frozen;\n      },\n      set: function set(val) {\n        this._frozen = val;\n        this.updateStickyPosition();\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.updateStickyPosition();\n      }\n    }, {\n      key: \"updateStickyPosition\",\n      value: function updateStickyPosition() {\n        if (this._frozen) {\n          if (this.alignFrozen === 'right') {\n            var right = 0;\n            var next = this.el.nativeElement.nextElementSibling;\n\n            if (next) {\n              right = DomHandler.getOuterWidth(next) + parseFloat(next.style.right);\n            }\n\n            this.el.nativeElement.style.right = right + 'px';\n          } else {\n            var left = 0;\n            var prev = this.el.nativeElement.previousElementSibling;\n\n            if (prev) {\n              left = DomHandler.getOuterWidth(prev) + (parseFloat(prev.style.left) || 0);\n            }\n\n            this.el.nativeElement.style.left = left + 'px';\n          }\n\n          var filterRow = this.el.nativeElement.parentElement.nextElementSibling;\n\n          if (filterRow) {\n            var index = DomHandler.index(this.el.nativeElement);\n\n            if (filterRow.children && filterRow.children[index]) {\n              filterRow.children[index].style.left = this.el.nativeElement.style.left;\n              filterRow.children[index].style.right = this.el.nativeElement.style.right;\n            }\n          }\n        }\n      }\n    }]);\n\n    return FrozenColumn;\n  }();\n\n  FrozenColumn.ɵfac = function FrozenColumn_Factory(t) {\n    return new (t || FrozenColumn)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  FrozenColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FrozenColumn,\n    selectors: [[\"\", \"pFrozenColumn\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostVars: 2,\n    hostBindings: function FrozenColumn_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-frozen-column\", ctx.frozen);\n      }\n    },\n    inputs: {\n      frozen: \"frozen\",\n      alignFrozen: \"alignFrozen\"\n    }\n  });\n  return FrozenColumn;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar SortableColumn = /*#__PURE__*/(function () {\n  var SortableColumn = /*#__PURE__*/function () {\n    function SortableColumn(dt) {\n      var _this16 = this;\n\n      _classCallCheck(this, SortableColumn);\n\n      this.dt = dt;\n\n      if (this.isEnabled()) {\n        this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {\n          _this16.updateSortState();\n        });\n      }\n    }\n\n    _createClass(SortableColumn, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.isEnabled()) {\n          this.updateSortState();\n        }\n      }\n    }, {\n      key: \"updateSortState\",\n      value: function updateSortState() {\n        this.sorted = this.dt.isSorted(this.field);\n        this.sortOrder = this.sorted ? this.dt.sortOrder === 1 ? 'ascending' : 'descending' : 'none';\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (this.isEnabled() && !this.isFilterElement(event.target)) {\n          this.updateSortState();\n          this.dt.sort({\n            originalEvent: event,\n            field: this.field\n          });\n          DomHandler.clearSelection();\n        }\n      }\n    }, {\n      key: \"onEnterKey\",\n      value: function onEnterKey(event) {\n        this.onClick(event);\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pSortableColumnDisabled !== true;\n      }\n    }, {\n      key: \"isFilterElement\",\n      value: function isFilterElement(element) {\n        return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return SortableColumn;\n  }();\n\n  SortableColumn.ɵfac = function SortableColumn_Factory(t) {\n    return new (t || SortableColumn)(i0.ɵɵdirectiveInject(Table));\n  };\n\n  SortableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: SortableColumn,\n    selectors: [[\"\", \"pSortableColumn\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostVars: 7,\n    hostBindings: function SortableColumn_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function SortableColumn_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown.enter\", function SortableColumn_keydown_enter_HostBindingHandler($event) {\n          return ctx.onEnterKey($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? \"0\" : null)(\"role\", \"columnheader\")(\"aria-sort\", ctx.sortOrder);\n        i0.ɵɵclassProp(\"p-sortable-column\", ctx.isEnabled())(\"p-highlight\", ctx.sorted);\n      }\n    },\n    inputs: {\n      field: [\"pSortableColumn\", \"field\"],\n      pSortableColumnDisabled: \"pSortableColumnDisabled\"\n    }\n  });\n  return SortableColumn;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar SortIcon = /*#__PURE__*/(function () {\n  var SortIcon = /*#__PURE__*/function () {\n    function SortIcon(dt, cd) {\n      var _this17 = this;\n\n      _classCallCheck(this, SortIcon);\n\n      this.dt = dt;\n      this.cd = cd;\n      this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {\n        _this17.updateSortState();\n      });\n    }\n\n    _createClass(SortIcon, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.updateSortState();\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        event.preventDefault();\n      }\n    }, {\n      key: \"updateSortState\",\n      value: function updateSortState() {\n        if (this.dt.sortMode === 'single') {\n          this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n        } else if (this.dt.sortMode === 'multiple') {\n          var sortMeta = this.dt.getSortMeta(this.field);\n          this.sortOrder = sortMeta ? sortMeta.order : 0;\n        }\n\n        this.cd.markForCheck();\n      }\n    }, {\n      key: \"getMultiSortMetaIndex\",\n      value: function getMultiSortMetaIndex() {\n        var multiSortMeta = this.dt._multiSortMeta;\n        var index = -1;\n\n        if (multiSortMeta && this.dt.sortMode === 'multiple' && (this.dt.showInitialSortBadge || multiSortMeta.length > 1)) {\n          for (var i = 0; i < multiSortMeta.length; i++) {\n            var meta = multiSortMeta[i];\n\n            if (meta.field === this.field || meta.field === this.field) {\n              index = i;\n              break;\n            }\n          }\n        }\n\n        return index;\n      }\n    }, {\n      key: \"getBadgeValue\",\n      value: function getBadgeValue() {\n        var index = this.getMultiSortMetaIndex();\n        return this.dt.groupRowsBy && index > -1 ? index : index + 1;\n      }\n    }, {\n      key: \"isMultiSorted\",\n      value: function isMultiSorted() {\n        return this.dt.sortMode === 'multiple' && this.getMultiSortMetaIndex() > -1;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return SortIcon;\n  }();\n\n  SortIcon.ɵfac = function SortIcon_Factory(t) {\n    return new (t || SortIcon)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  SortIcon.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SortIcon,\n    selectors: [[\"p-sortIcon\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      field: \"field\"\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[1, \"p-sortable-column-icon\", \"pi\", \"pi-fw\", 3, \"ngClass\"], [\"class\", \"p-sortable-column-badge\", 4, \"ngIf\"], [1, \"p-sortable-column-badge\"]],\n    template: function SortIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"i\", 0);\n        i0.ɵɵtemplate(1, SortIcon_span_1_Template, 2, 1, \"span\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(2, _c16, ctx.sortOrder === 1, ctx.sortOrder === -1, ctx.sortOrder === 0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSorted());\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return SortIcon;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar SelectableRow = /*#__PURE__*/(function () {\n  var SelectableRow = /*#__PURE__*/function () {\n    function SelectableRow(dt, tableService) {\n      var _this18 = this;\n\n      _classCallCheck(this, SelectableRow);\n\n      this.dt = dt;\n      this.tableService = tableService;\n\n      if (this.isEnabled()) {\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n          _this18.selected = _this18.dt.isSelected(_this18.data);\n        });\n      }\n    }\n\n    _createClass(SelectableRow, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.isEnabled()) {\n          this.selected = this.dt.isSelected(this.data);\n        }\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (this.isEnabled()) {\n          this.dt.handleRowClick({\n            originalEvent: event,\n            rowData: this.data,\n            rowIndex: this.index\n          });\n        }\n      }\n    }, {\n      key: \"onTouchEnd\",\n      value: function onTouchEnd(event) {\n        if (this.isEnabled()) {\n          this.dt.handleRowTouchEnd(event);\n        }\n      }\n    }, {\n      key: \"onArrowDownKeyDown\",\n      value: function onArrowDownKeyDown(event) {\n        if (!this.isEnabled()) {\n          return;\n        }\n\n        var row = event.currentTarget;\n        var nextRow = this.findNextSelectableRow(row);\n\n        if (nextRow) {\n          nextRow.focus();\n        }\n\n        event.preventDefault();\n      }\n    }, {\n      key: \"onArrowUpKeyDown\",\n      value: function onArrowUpKeyDown(event) {\n        if (!this.isEnabled()) {\n          return;\n        }\n\n        var row = event.currentTarget;\n        var prevRow = this.findPrevSelectableRow(row);\n\n        if (prevRow) {\n          prevRow.focus();\n        }\n\n        event.preventDefault();\n      }\n    }, {\n      key: \"onEnterKeyDown\",\n      value: function onEnterKeyDown(event) {\n        if (!this.isEnabled()) {\n          return;\n        }\n\n        this.dt.handleRowClick({\n          originalEvent: event,\n          rowData: this.data,\n          rowIndex: this.index\n        });\n      }\n    }, {\n      key: \"onPageDownKeyDown\",\n      value: function onPageDownKeyDown() {\n        if (this.dt.virtualScroll) {\n          this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n        }\n      }\n    }, {\n      key: \"onSpaceKeydown\",\n      value: function onSpaceKeydown() {\n        if (this.dt.virtualScroll && !this.dt.editingCell) {\n          this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n        }\n      }\n    }, {\n      key: \"findNextSelectableRow\",\n      value: function findNextSelectableRow(row) {\n        var nextRow = row.nextElementSibling;\n\n        if (nextRow) {\n          if (DomHandler.hasClass(nextRow, 'p-selectable-row')) return nextRow;else return this.findNextSelectableRow(nextRow);\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"findPrevSelectableRow\",\n      value: function findPrevSelectableRow(row) {\n        var prevRow = row.previousElementSibling;\n\n        if (prevRow) {\n          if (DomHandler.hasClass(prevRow, 'p-selectable-row')) return prevRow;else return this.findPrevSelectableRow(prevRow);\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return SelectableRow;\n  }();\n\n  SelectableRow.ɵfac = function SelectableRow_Factory(t) {\n    return new (t || SelectableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService));\n  };\n\n  SelectableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: SelectableRow,\n    selectors: [[\"\", \"pSelectableRow\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostVars: 5,\n    hostBindings: function SelectableRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function SelectableRow_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"touchend\", function SelectableRow_touchend_HostBindingHandler($event) {\n          return ctx.onTouchEnd($event);\n        })(\"keydown.arrowdown\", function SelectableRow_keydown_arrowdown_HostBindingHandler($event) {\n          return ctx.onArrowDownKeyDown($event);\n        })(\"keydown.arrowup\", function SelectableRow_keydown_arrowup_HostBindingHandler($event) {\n          return ctx.onArrowUpKeyDown($event);\n        })(\"keydown.enter\", function SelectableRow_keydown_enter_HostBindingHandler($event) {\n          return ctx.onEnterKeyDown($event);\n        })(\"keydown.shift.enter\", function SelectableRow_keydown_shift_enter_HostBindingHandler($event) {\n          return ctx.onEnterKeyDown($event);\n        })(\"keydown.meta.enter\", function SelectableRow_keydown_meta_enter_HostBindingHandler($event) {\n          return ctx.onEnterKeyDown($event);\n        })(\"keydown.pagedown\", function SelectableRow_keydown_pagedown_HostBindingHandler() {\n          return ctx.onPageDownKeyDown();\n        })(\"keydown.pageup\", function SelectableRow_keydown_pageup_HostBindingHandler() {\n          return ctx.onPageDownKeyDown();\n        })(\"keydown.home\", function SelectableRow_keydown_home_HostBindingHandler() {\n          return ctx.onPageDownKeyDown();\n        })(\"keydown.end\", function SelectableRow_keydown_end_HostBindingHandler() {\n          return ctx.onPageDownKeyDown();\n        })(\"keydown.space\", function SelectableRow_keydown_space_HostBindingHandler() {\n          return ctx.onSpaceKeydown();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n        i0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n      }\n    },\n    inputs: {\n      data: [\"pSelectableRow\", \"data\"],\n      index: [\"pSelectableRowIndex\", \"index\"],\n      pSelectableRowDisabled: \"pSelectableRowDisabled\"\n    }\n  });\n  return SelectableRow;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar SelectableRowDblClick = /*#__PURE__*/(function () {\n  var SelectableRowDblClick = /*#__PURE__*/function () {\n    function SelectableRowDblClick(dt, tableService) {\n      var _this19 = this;\n\n      _classCallCheck(this, SelectableRowDblClick);\n\n      this.dt = dt;\n      this.tableService = tableService;\n\n      if (this.isEnabled()) {\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n          _this19.selected = _this19.dt.isSelected(_this19.data);\n        });\n      }\n    }\n\n    _createClass(SelectableRowDblClick, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.isEnabled()) {\n          this.selected = this.dt.isSelected(this.data);\n        }\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (this.isEnabled()) {\n          this.dt.handleRowClick({\n            originalEvent: event,\n            rowData: this.data,\n            rowIndex: this.index\n          });\n        }\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return SelectableRowDblClick;\n  }();\n\n  SelectableRowDblClick.ɵfac = function SelectableRowDblClick_Factory(t) {\n    return new (t || SelectableRowDblClick)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService));\n  };\n\n  SelectableRowDblClick.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: SelectableRowDblClick,\n    selectors: [[\"\", \"pSelectableRowDblClick\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostVars: 4,\n    hostBindings: function SelectableRowDblClick_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"dblclick\", function SelectableRowDblClick_dblclick_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n      }\n    },\n    inputs: {\n      data: [\"pSelectableRowDblClick\", \"data\"],\n      index: [\"pSelectableRowIndex\", \"index\"],\n      pSelectableRowDisabled: \"pSelectableRowDisabled\"\n    }\n  });\n  return SelectableRowDblClick;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ContextMenuRow = /*#__PURE__*/(function () {\n  var ContextMenuRow = /*#__PURE__*/function () {\n    function ContextMenuRow(dt, tableService, el) {\n      var _this20 = this;\n\n      _classCallCheck(this, ContextMenuRow);\n\n      this.dt = dt;\n      this.tableService = tableService;\n      this.el = el;\n\n      if (this.isEnabled()) {\n        this.subscription = this.dt.tableService.contextMenuSource$.subscribe(function (data) {\n          _this20.selected = _this20.dt.equals(_this20.data, data);\n        });\n      }\n    }\n\n    _createClass(ContextMenuRow, [{\n      key: \"onContextMenu\",\n      value: function onContextMenu(event) {\n        if (this.isEnabled()) {\n          this.dt.handleRowRightClick({\n            originalEvent: event,\n            rowData: this.data,\n            rowIndex: this.index\n          });\n          this.el.nativeElement.focus();\n          event.preventDefault();\n        }\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pContextMenuRowDisabled !== true;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return ContextMenuRow;\n  }();\n\n  ContextMenuRow.ɵfac = function ContextMenuRow_Factory(t) {\n    return new (t || ContextMenuRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  ContextMenuRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ContextMenuRow,\n    selectors: [[\"\", \"pContextMenuRow\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostVars: 3,\n    hostBindings: function ContextMenuRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"contextmenu\", function ContextMenuRow_contextmenu_HostBindingHandler($event) {\n          return ctx.onContextMenu($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n        i0.ɵɵclassProp(\"p-highlight-contextmenu\", ctx.selected);\n      }\n    },\n    inputs: {\n      data: [\"pContextMenuRow\", \"data\"],\n      index: [\"pContextMenuRowIndex\", \"index\"],\n      pContextMenuRowDisabled: \"pContextMenuRowDisabled\"\n    }\n  });\n  return ContextMenuRow;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar RowToggler = /*#__PURE__*/(function () {\n  var RowToggler = /*#__PURE__*/function () {\n    function RowToggler(dt) {\n      _classCallCheck(this, RowToggler);\n\n      this.dt = dt;\n    }\n\n    _createClass(RowToggler, [{\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (this.isEnabled()) {\n          this.dt.toggleRow(this.data, event);\n          event.preventDefault();\n        }\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pRowTogglerDisabled !== true;\n      }\n    }]);\n\n    return RowToggler;\n  }();\n\n  RowToggler.ɵfac = function RowToggler_Factory(t) {\n    return new (t || RowToggler)(i0.ɵɵdirectiveInject(Table));\n  };\n\n  RowToggler.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: RowToggler,\n    selectors: [[\"\", \"pRowToggler\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostBindings: function RowToggler_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function RowToggler_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n    },\n    inputs: {\n      data: [\"pRowToggler\", \"data\"],\n      pRowTogglerDisabled: \"pRowTogglerDisabled\"\n    }\n  });\n  return RowToggler;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ResizableColumn = /*#__PURE__*/(function () {\n  var ResizableColumn = /*#__PURE__*/function () {\n    function ResizableColumn(dt, el, zone) {\n      _classCallCheck(this, ResizableColumn);\n\n      this.dt = dt;\n      this.el = el;\n      this.zone = zone;\n    }\n\n    _createClass(ResizableColumn, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this21 = this;\n\n        if (this.isEnabled()) {\n          DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n          this.resizer = document.createElement('span');\n          this.resizer.className = 'p-column-resizer';\n          this.el.nativeElement.appendChild(this.resizer);\n          this.zone.runOutsideAngular(function () {\n            _this21.resizerMouseDownListener = _this21.onMouseDown.bind(_this21);\n\n            _this21.resizer.addEventListener('mousedown', _this21.resizerMouseDownListener);\n          });\n        }\n      }\n    }, {\n      key: \"bindDocumentEvents\",\n      value: function bindDocumentEvents() {\n        var _this22 = this;\n\n        this.zone.runOutsideAngular(function () {\n          _this22.documentMouseMoveListener = _this22.onDocumentMouseMove.bind(_this22);\n          document.addEventListener('mousemove', _this22.documentMouseMoveListener);\n          _this22.documentMouseUpListener = _this22.onDocumentMouseUp.bind(_this22);\n          document.addEventListener('mouseup', _this22.documentMouseUpListener);\n        });\n      }\n    }, {\n      key: \"unbindDocumentEvents\",\n      value: function unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n          document.removeEventListener('mousemove', this.documentMouseMoveListener);\n          this.documentMouseMoveListener = null;\n        }\n\n        if (this.documentMouseUpListener) {\n          document.removeEventListener('mouseup', this.documentMouseUpListener);\n          this.documentMouseUpListener = null;\n        }\n      }\n    }, {\n      key: \"onMouseDown\",\n      value: function onMouseDown(event) {\n        if (event.which === 1) {\n          this.dt.onColumnResizeBegin(event);\n          this.bindDocumentEvents();\n        }\n      }\n    }, {\n      key: \"onDocumentMouseMove\",\n      value: function onDocumentMouseMove(event) {\n        this.dt.onColumnResize(event);\n      }\n    }, {\n      key: \"onDocumentMouseUp\",\n      value: function onDocumentMouseUp(event) {\n        this.dt.onColumnResizeEnd();\n        this.unbindDocumentEvents();\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pResizableColumnDisabled !== true;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n          this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n        }\n\n        this.unbindDocumentEvents();\n      }\n    }]);\n\n    return ResizableColumn;\n  }();\n\n  ResizableColumn.ɵfac = function ResizableColumn_Factory(t) {\n    return new (t || ResizableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  ResizableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ResizableColumn,\n    selectors: [[\"\", \"pResizableColumn\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      pResizableColumnDisabled: \"pResizableColumnDisabled\"\n    }\n  });\n  return ResizableColumn;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ReorderableColumn = /*#__PURE__*/(function () {\n  var ReorderableColumn = /*#__PURE__*/function () {\n    function ReorderableColumn(dt, el, zone) {\n      _classCallCheck(this, ReorderableColumn);\n\n      this.dt = dt;\n      this.el = el;\n      this.zone = zone;\n    }\n\n    _createClass(ReorderableColumn, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        if (this.isEnabled()) {\n          this.bindEvents();\n        }\n      }\n    }, {\n      key: \"bindEvents\",\n      value: function bindEvents() {\n        var _this23 = this;\n\n        this.zone.runOutsideAngular(function () {\n          _this23.mouseDownListener = _this23.onMouseDown.bind(_this23);\n\n          _this23.el.nativeElement.addEventListener('mousedown', _this23.mouseDownListener);\n\n          _this23.dragStartListener = _this23.onDragStart.bind(_this23);\n\n          _this23.el.nativeElement.addEventListener('dragstart', _this23.dragStartListener);\n\n          _this23.dragOverListener = _this23.onDragEnter.bind(_this23);\n\n          _this23.el.nativeElement.addEventListener('dragover', _this23.dragOverListener);\n\n          _this23.dragEnterListener = _this23.onDragEnter.bind(_this23);\n\n          _this23.el.nativeElement.addEventListener('dragenter', _this23.dragEnterListener);\n\n          _this23.dragLeaveListener = _this23.onDragLeave.bind(_this23);\n\n          _this23.el.nativeElement.addEventListener('dragleave', _this23.dragLeaveListener);\n        });\n      }\n    }, {\n      key: \"unbindEvents\",\n      value: function unbindEvents() {\n        if (this.mouseDownListener) {\n          document.removeEventListener('mousedown', this.mouseDownListener);\n          this.mouseDownListener = null;\n        }\n\n        if (this.dragOverListener) {\n          document.removeEventListener('dragover', this.dragOverListener);\n          this.dragOverListener = null;\n        }\n\n        if (this.dragEnterListener) {\n          document.removeEventListener('dragenter', this.dragEnterListener);\n          this.dragEnterListener = null;\n        }\n\n        if (this.dragEnterListener) {\n          document.removeEventListener('dragenter', this.dragEnterListener);\n          this.dragEnterListener = null;\n        }\n\n        if (this.dragLeaveListener) {\n          document.removeEventListener('dragleave', this.dragLeaveListener);\n          this.dragLeaveListener = null;\n        }\n      }\n    }, {\n      key: \"onMouseDown\",\n      value: function onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;\n      }\n    }, {\n      key: \"onDragStart\",\n      value: function onDragStart(event) {\n        this.dt.onColumnDragStart(event, this.el.nativeElement);\n      }\n    }, {\n      key: \"onDragOver\",\n      value: function onDragOver(event) {\n        event.preventDefault();\n      }\n    }, {\n      key: \"onDragEnter\",\n      value: function onDragEnter(event) {\n        this.dt.onColumnDragEnter(event, this.el.nativeElement);\n      }\n    }, {\n      key: \"onDragLeave\",\n      value: function onDragLeave(event) {\n        this.dt.onColumnDragLeave(event);\n      }\n    }, {\n      key: \"onDrop\",\n      value: function onDrop(event) {\n        if (this.isEnabled()) {\n          this.dt.onColumnDrop(event, this.el.nativeElement);\n        }\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pReorderableColumnDisabled !== true;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.unbindEvents();\n      }\n    }]);\n\n    return ReorderableColumn;\n  }();\n\n  ReorderableColumn.ɵfac = function ReorderableColumn_Factory(t) {\n    return new (t || ReorderableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  ReorderableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ReorderableColumn,\n    selectors: [[\"\", \"pReorderableColumn\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostBindings: function ReorderableColumn_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"drop\", function ReorderableColumn_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        });\n      }\n    },\n    inputs: {\n      pReorderableColumnDisabled: \"pReorderableColumnDisabled\"\n    }\n  });\n  return ReorderableColumn;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar EditableColumn = /*#__PURE__*/(function () {\n  var EditableColumn = /*#__PURE__*/function () {\n    function EditableColumn(dt, el, zone) {\n      _classCallCheck(this, EditableColumn);\n\n      this.dt = dt;\n      this.el = el;\n      this.zone = zone;\n    }\n\n    _createClass(EditableColumn, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        if (this.isEnabled()) {\n          DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n        }\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (this.isEnabled()) {\n          this.dt.selfClick = true;\n\n          if (this.dt.editingCell) {\n            if (this.dt.editingCell !== this.el.nativeElement) {\n              if (!this.dt.isEditingCellValid()) {\n                return;\n              }\n\n              this.closeEditingCell(true, event);\n              this.openCell();\n            }\n          } else {\n            this.openCell();\n          }\n        }\n      }\n    }, {\n      key: \"openCell\",\n      value: function openCell() {\n        var _this24 = this;\n\n        this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n        DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n        this.dt.onEditInit.emit({\n          field: this.field,\n          data: this.data,\n          index: this.rowIndex\n        });\n        this.zone.runOutsideAngular(function () {\n          setTimeout(function () {\n            var focusCellSelector = _this24.pFocusCellSelector || 'input, textarea, select';\n            var focusableElement = DomHandler.findSingle(_this24.el.nativeElement, focusCellSelector);\n\n            if (focusableElement) {\n              focusableElement.focus();\n            }\n          }, 50);\n        });\n\n        this.overlayEventListener = function (e) {\n          if (_this24.el && _this24.el.nativeElement.contains(e.target)) {\n            _this24.dt.selfClick = true;\n          }\n        };\n\n        this.dt.overlaySubscription = this.dt.overlayService.clickObservable.subscribe(this.overlayEventListener);\n      }\n    }, {\n      key: \"closeEditingCell\",\n      value: function closeEditingCell(completed, event) {\n        if (completed) this.dt.onEditComplete.emit({\n          field: this.dt.editingCellField,\n          data: this.dt.editingCellData,\n          originalEvent: event,\n          index: this.dt.editingCellRowIndex\n        });else this.dt.onEditCancel.emit({\n          field: this.dt.editingCellField,\n          data: this.dt.editingCellData,\n          originalEvent: event,\n          index: this.dt.editingCellRowIndex\n        });\n        DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n        this.dt.editingCell = null;\n        this.dt.editingCellData = null;\n        this.dt.editingCellField = null;\n        this.dt.unbindDocumentEditListener();\n\n        if (this.dt.overlaySubscription) {\n          this.dt.overlaySubscription.unsubscribe();\n        }\n      }\n    }, {\n      key: \"onEnterKeyDown\",\n      value: function onEnterKeyDown(event) {\n        if (this.isEnabled()) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          event.preventDefault();\n        }\n      }\n    }, {\n      key: \"onEscapeKeyDown\",\n      value: function onEscapeKeyDown(event) {\n        if (this.isEnabled()) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(false, event);\n          }\n\n          event.preventDefault();\n        }\n      }\n    }, {\n      key: \"onShiftKeyDown\",\n      value: function onShiftKeyDown(event) {\n        if (this.isEnabled()) {\n          if (event.shiftKey) this.moveToPreviousCell(event);else {\n            this.moveToNextCell(event);\n          }\n        }\n      }\n    }, {\n      key: \"onArrowDown\",\n      value: function onArrowDown(event) {\n        if (this.isEnabled()) {\n          var currentCell = this.findCell(event.target);\n\n          if (currentCell) {\n            var cellIndex = DomHandler.index(currentCell);\n            var targetCell = this.findNextEditableColumnByIndex(currentCell, cellIndex);\n\n            if (targetCell) {\n              if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(true, event);\n              }\n\n              DomHandler.invokeElementMethod(event.target, 'blur');\n              DomHandler.invokeElementMethod(targetCell, 'click');\n            }\n\n            event.preventDefault();\n          }\n        }\n      }\n    }, {\n      key: \"onArrowUp\",\n      value: function onArrowUp(event) {\n        if (this.isEnabled()) {\n          var currentCell = this.findCell(event.target);\n\n          if (currentCell) {\n            var cellIndex = DomHandler.index(currentCell);\n            var targetCell = this.findPrevEditableColumnByIndex(currentCell, cellIndex);\n\n            if (targetCell) {\n              if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(true, event);\n              }\n\n              DomHandler.invokeElementMethod(event.target, 'blur');\n              DomHandler.invokeElementMethod(targetCell, 'click');\n            }\n\n            event.preventDefault();\n          }\n        }\n      }\n    }, {\n      key: \"onArrowLeft\",\n      value: function onArrowLeft(event) {\n        if (this.isEnabled()) {\n          this.moveToPreviousCell(event);\n        }\n      }\n    }, {\n      key: \"onArrowRight\",\n      value: function onArrowRight(event) {\n        if (this.isEnabled()) {\n          this.moveToNextCell(event);\n        }\n      }\n    }, {\n      key: \"findCell\",\n      value: function findCell(element) {\n        if (element) {\n          var cell = element;\n\n          while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n            cell = cell.parentElement;\n          }\n\n          return cell;\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"moveToPreviousCell\",\n      value: function moveToPreviousCell(event) {\n        var currentCell = this.findCell(event.target);\n\n        if (currentCell) {\n          var targetCell = this.findPreviousEditableColumn(currentCell);\n\n          if (targetCell) {\n            if (this.dt.isEditingCellValid()) {\n              this.closeEditingCell(true, event);\n            }\n\n            DomHandler.invokeElementMethod(event.target, 'blur');\n            DomHandler.invokeElementMethod(targetCell, 'click');\n            event.preventDefault();\n          }\n        }\n      }\n    }, {\n      key: \"moveToNextCell\",\n      value: function moveToNextCell(event) {\n        var currentCell = this.findCell(event.target);\n\n        if (currentCell) {\n          var targetCell = this.findNextEditableColumn(currentCell);\n\n          if (targetCell) {\n            if (this.dt.isEditingCellValid()) {\n              this.closeEditingCell(true, event);\n            }\n\n            DomHandler.invokeElementMethod(event.target, 'blur');\n            DomHandler.invokeElementMethod(targetCell, 'click');\n            event.preventDefault();\n          }\n        }\n      }\n    }, {\n      key: \"findPreviousEditableColumn\",\n      value: function findPreviousEditableColumn(cell) {\n        var prevCell = cell.previousElementSibling;\n\n        if (!prevCell) {\n          var previousRow = cell.parentElement.previousElementSibling;\n\n          if (previousRow) {\n            prevCell = previousRow.lastElementChild;\n          }\n        }\n\n        if (prevCell) {\n          if (DomHandler.hasClass(prevCell, 'p-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"findNextEditableColumn\",\n      value: function findNextEditableColumn(cell) {\n        var nextCell = cell.nextElementSibling;\n\n        if (!nextCell) {\n          var nextRow = cell.parentElement.nextElementSibling;\n\n          if (nextRow) {\n            nextCell = nextRow.firstElementChild;\n          }\n        }\n\n        if (nextCell) {\n          if (DomHandler.hasClass(nextCell, 'p-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"findNextEditableColumnByIndex\",\n      value: function findNextEditableColumnByIndex(cell, index) {\n        var nextRow = cell.parentElement.nextElementSibling;\n\n        if (nextRow) {\n          var nextCell = nextRow.children[index];\n\n          if (nextCell && DomHandler.hasClass(nextCell, 'p-editable-column')) {\n            return nextCell;\n          }\n\n          return null;\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"findPrevEditableColumnByIndex\",\n      value: function findPrevEditableColumnByIndex(cell, index) {\n        var prevRow = cell.parentElement.previousElementSibling;\n\n        if (prevRow) {\n          var prevCell = prevRow.children[index];\n\n          if (prevCell && DomHandler.hasClass(prevCell, 'p-editable-column')) {\n            return prevCell;\n          }\n\n          return null;\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pEditableColumnDisabled !== true;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.dt.overlaySubscription) {\n          this.dt.overlaySubscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return EditableColumn;\n  }();\n\n  EditableColumn.ɵfac = function EditableColumn_Factory(t) {\n    return new (t || EditableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  EditableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: EditableColumn,\n    selectors: [[\"\", \"pEditableColumn\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostBindings: function EditableColumn_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function EditableColumn_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown.enter\", function EditableColumn_keydown_enter_HostBindingHandler($event) {\n          return ctx.onEnterKeyDown($event);\n        })(\"keydown.escape\", function EditableColumn_keydown_escape_HostBindingHandler($event) {\n          return ctx.onEscapeKeyDown($event);\n        })(\"keydown.tab\", function EditableColumn_keydown_tab_HostBindingHandler($event) {\n          return ctx.onShiftKeyDown($event);\n        })(\"keydown.shift.tab\", function EditableColumn_keydown_shift_tab_HostBindingHandler($event) {\n          return ctx.onShiftKeyDown($event);\n        })(\"keydown.meta.tab\", function EditableColumn_keydown_meta_tab_HostBindingHandler($event) {\n          return ctx.onShiftKeyDown($event);\n        })(\"keydown.arrowdown\", function EditableColumn_keydown_arrowdown_HostBindingHandler($event) {\n          return ctx.onArrowDown($event);\n        })(\"keydown.arrowup\", function EditableColumn_keydown_arrowup_HostBindingHandler($event) {\n          return ctx.onArrowUp($event);\n        })(\"keydown.arrowleft\", function EditableColumn_keydown_arrowleft_HostBindingHandler($event) {\n          return ctx.onArrowLeft($event);\n        })(\"keydown.arrowright\", function EditableColumn_keydown_arrowright_HostBindingHandler($event) {\n          return ctx.onArrowRight($event);\n        });\n      }\n    },\n    inputs: {\n      data: [\"pEditableColumn\", \"data\"],\n      field: [\"pEditableColumnField\", \"field\"],\n      rowIndex: [\"pEditableColumnRowIndex\", \"rowIndex\"],\n      pEditableColumnDisabled: \"pEditableColumnDisabled\",\n      pFocusCellSelector: \"pFocusCellSelector\"\n    }\n  });\n  return EditableColumn;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar EditableRow = /*#__PURE__*/(function () {\n  var EditableRow = /*#__PURE__*/function () {\n    function EditableRow(el) {\n      _classCallCheck(this, EditableRow);\n\n      this.el = el;\n    }\n\n    _createClass(EditableRow, [{\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pEditableRowDisabled !== true;\n      }\n    }]);\n\n    return EditableRow;\n  }();\n\n  EditableRow.ɵfac = function EditableRow_Factory(t) {\n    return new (t || EditableRow)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  EditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: EditableRow,\n    selectors: [[\"\", \"pEditableRow\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      data: [\"pEditableRow\", \"data\"],\n      pEditableRowDisabled: \"pEditableRowDisabled\"\n    }\n  });\n  return EditableRow;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar InitEditableRow = /*#__PURE__*/(function () {\n  var InitEditableRow = /*#__PURE__*/function () {\n    function InitEditableRow(dt, editableRow) {\n      _classCallCheck(this, InitEditableRow);\n\n      this.dt = dt;\n      this.editableRow = editableRow;\n    }\n\n    _createClass(InitEditableRow, [{\n      key: \"onClick\",\n      value: function onClick(event) {\n        this.dt.initRowEdit(this.editableRow.data);\n        event.preventDefault();\n      }\n    }]);\n\n    return InitEditableRow;\n  }();\n\n  InitEditableRow.ɵfac = function InitEditableRow_Factory(t) {\n    return new (t || InitEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n  };\n\n  InitEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: InitEditableRow,\n    selectors: [[\"\", \"pInitEditableRow\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostBindings: function InitEditableRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function InitEditableRow_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n    }\n  });\n  return InitEditableRow;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar SaveEditableRow = /*#__PURE__*/(function () {\n  var SaveEditableRow = /*#__PURE__*/function () {\n    function SaveEditableRow(dt, editableRow) {\n      _classCallCheck(this, SaveEditableRow);\n\n      this.dt = dt;\n      this.editableRow = editableRow;\n    }\n\n    _createClass(SaveEditableRow, [{\n      key: \"onClick\",\n      value: function onClick(event) {\n        this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n        event.preventDefault();\n      }\n    }]);\n\n    return SaveEditableRow;\n  }();\n\n  SaveEditableRow.ɵfac = function SaveEditableRow_Factory(t) {\n    return new (t || SaveEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n  };\n\n  SaveEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: SaveEditableRow,\n    selectors: [[\"\", \"pSaveEditableRow\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostBindings: function SaveEditableRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function SaveEditableRow_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n    }\n  });\n  return SaveEditableRow;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar CancelEditableRow = /*#__PURE__*/(function () {\n  var CancelEditableRow = /*#__PURE__*/function () {\n    function CancelEditableRow(dt, editableRow) {\n      _classCallCheck(this, CancelEditableRow);\n\n      this.dt = dt;\n      this.editableRow = editableRow;\n    }\n\n    _createClass(CancelEditableRow, [{\n      key: \"onClick\",\n      value: function onClick(event) {\n        this.dt.cancelRowEdit(this.editableRow.data);\n        event.preventDefault();\n      }\n    }]);\n\n    return CancelEditableRow;\n  }();\n\n  CancelEditableRow.ɵfac = function CancelEditableRow_Factory(t) {\n    return new (t || CancelEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n  };\n\n  CancelEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CancelEditableRow,\n    selectors: [[\"\", \"pCancelEditableRow\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostBindings: function CancelEditableRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CancelEditableRow_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n    }\n  });\n  return CancelEditableRow;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar CellEditor = /*#__PURE__*/(function () {\n  var CellEditor = /*#__PURE__*/function () {\n    function CellEditor(dt, editableColumn, editableRow) {\n      _classCallCheck(this, CellEditor);\n\n      this.dt = dt;\n      this.editableColumn = editableColumn;\n      this.editableRow = editableRow;\n    }\n\n    _createClass(CellEditor, [{\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this25 = this;\n\n        this.templates.forEach(function (item) {\n          switch (item.getType()) {\n            case 'input':\n              _this25.inputTemplate = item.template;\n              break;\n\n            case 'output':\n              _this25.outputTemplate = item.template;\n              break;\n          }\n        });\n      }\n    }, {\n      key: \"editing\",\n      get: function get() {\n        return this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement || this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data);\n      }\n    }]);\n\n    return CellEditor;\n  }();\n\n  CellEditor.ɵfac = function CellEditor_Factory(t) {\n    return new (t || CellEditor)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableColumn, 8), i0.ɵɵdirectiveInject(EditableRow, 8));\n  };\n\n  CellEditor.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CellEditor,\n    selectors: [[\"p-cellEditor\"]],\n    contentQueries: function CellEditor_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n    template: function CellEditor_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CellEditor_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, CellEditor_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.editing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editing);\n      }\n    },\n    dependencies: [i4.NgIf, i4.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return CellEditor;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar TableRadioButton = /*#__PURE__*/(function () {\n  var TableRadioButton = /*#__PURE__*/function () {\n    function TableRadioButton(dt, tableService, cd) {\n      var _this26 = this;\n\n      _classCallCheck(this, TableRadioButton);\n\n      this.dt = dt;\n      this.tableService = tableService;\n      this.cd = cd;\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n        _this26.checked = _this26.dt.isSelected(_this26.value);\n\n        _this26.cd.markForCheck();\n      });\n    }\n\n    _createClass(TableRadioButton, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (!this.disabled) {\n          this.dt.toggleRowWithRadio({\n            originalEvent: event,\n            rowIndex: this.index\n          }, this.value);\n        }\n\n        DomHandler.clearSelection();\n      }\n    }, {\n      key: \"onFocus\",\n      value: function onFocus() {\n        this.focused = true;\n      }\n    }, {\n      key: \"onBlur\",\n      value: function onBlur() {\n        this.focused = false;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return TableRadioButton;\n  }();\n\n  TableRadioButton.ɵfac = function TableRadioButton_Factory(t) {\n    return new (t || TableRadioButton)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  TableRadioButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TableRadioButton,\n    selectors: [[\"p-tableRadioButton\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      disabled: \"disabled\",\n      value: \"value\",\n      index: \"index\",\n      inputId: \"inputId\",\n      name: \"name\",\n      ariaLabel: \"ariaLabel\"\n    },\n    decls: 7,\n    vars: 15,\n    consts: [[1, \"p-radiobutton\", \"p-component\", 3, \"ngClass\", \"click\"], [\"container\", \"\"], [1, \"p-hidden-accessible\"], [\"type\", \"radio\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"radio\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-radiobutton-icon\"]],\n    template: function TableRadioButton_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"click\", function TableRadioButton_Template_div_click_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"focus\", function TableRadioButton_Template_input_focus_3_listener() {\n          return ctx.onFocus();\n        })(\"blur\", function TableRadioButton_Template_input_blur_3_listener() {\n          return ctx.onBlur();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4, 5);\n        i0.ɵɵelement(6, \"div\", 6);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c17, ctx.focused, ctx.disabled));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(11, _c18, ctx.checked, ctx.focused, ctx.disabled));\n        i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      }\n    },\n    dependencies: [i4.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TableRadioButton;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar TableCheckbox = /*#__PURE__*/(function () {\n  var TableCheckbox = /*#__PURE__*/function () {\n    function TableCheckbox(dt, tableService, cd) {\n      var _this27 = this;\n\n      _classCallCheck(this, TableCheckbox);\n\n      this.dt = dt;\n      this.tableService = tableService;\n      this.cd = cd;\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n        _this27.checked = _this27.dt.isSelected(_this27.value);\n\n        _this27.cd.markForCheck();\n      });\n    }\n\n    _createClass(TableCheckbox, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (!this.disabled) {\n          this.dt.toggleRowWithCheckbox({\n            originalEvent: event,\n            rowIndex: this.index\n          }, this.value);\n        }\n\n        DomHandler.clearSelection();\n      }\n    }, {\n      key: \"onFocus\",\n      value: function onFocus() {\n        this.focused = true;\n      }\n    }, {\n      key: \"onBlur\",\n      value: function onBlur() {\n        this.focused = false;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return TableCheckbox;\n  }();\n\n  TableCheckbox.ɵfac = function TableCheckbox_Factory(t) {\n    return new (t || TableCheckbox)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  TableCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TableCheckbox,\n    selectors: [[\"p-tableCheckbox\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      disabled: \"disabled\",\n      value: \"value\",\n      index: \"index\",\n      inputId: \"inputId\",\n      name: \"name\",\n      required: \"required\",\n      ariaLabel: \"ariaLabel\"\n    },\n    decls: 7,\n    vars: 19,\n    consts: [[1, \"p-checkbox\", \"p-component\", 3, \"ngClass\", \"click\"], [\"container\", \"\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n    template: function TableCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"click\", function TableCheckbox_Template_div_click_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"focus\", function TableCheckbox_Template_input_focus_3_listener() {\n          return ctx.onFocus();\n        })(\"blur\", function TableCheckbox_Template_input_blur_3_listener() {\n          return ctx.onBlur();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4, 5);\n        i0.ɵɵelement(6, \"span\", 6);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c19, ctx.focused, ctx.disabled));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"required\", ctx.required)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(13, _c20, ctx.checked, ctx.focused, ctx.disabled));\n        i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c21, ctx.checked));\n      }\n    },\n    dependencies: [i4.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TableCheckbox;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar TableHeaderCheckbox = /*#__PURE__*/(function () {\n  var TableHeaderCheckbox = /*#__PURE__*/function () {\n    function TableHeaderCheckbox(dt, tableService, cd) {\n      var _this28 = this;\n\n      _classCallCheck(this, TableHeaderCheckbox);\n\n      this.dt = dt;\n      this.tableService = tableService;\n      this.cd = cd;\n      this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(function () {\n        _this28.checked = _this28.updateCheckedState();\n      });\n      this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(function () {\n        _this28.checked = _this28.updateCheckedState();\n      });\n    }\n\n    _createClass(TableHeaderCheckbox, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.checked = this.updateCheckedState();\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (!this.disabled) {\n          if (this.dt.value && this.dt.value.length > 0) {\n            this.dt.toggleRowsWithCheckbox(event, !this.checked);\n          }\n        }\n\n        DomHandler.clearSelection();\n      }\n    }, {\n      key: \"onFocus\",\n      value: function onFocus() {\n        this.focused = true;\n      }\n    }, {\n      key: \"onBlur\",\n      value: function onBlur() {\n        this.focused = false;\n      }\n    }, {\n      key: \"isDisabled\",\n      value: function isDisabled() {\n        return this.disabled || !this.dt.value || !this.dt.value.length;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n          this.selectionChangeSubscription.unsubscribe();\n        }\n\n        if (this.valueChangeSubscription) {\n          this.valueChangeSubscription.unsubscribe();\n        }\n      }\n    }, {\n      key: \"updateCheckedState\",\n      value: function updateCheckedState() {\n        var _this29 = this;\n\n        this.cd.markForCheck();\n\n        if (this.dt._selectAll !== null) {\n          return this.dt._selectAll;\n        } else {\n          var data = this.dt.selectionPageOnly ? this.dt.dataToRender : this.dt.filteredValue || this.dt.value || [];\n          var val = this.dt.frozenValue ? [].concat(_toConsumableArray(this.dt.frozenValue), _toConsumableArray(data)) : data;\n          var selectableVal = this.dt.rowSelectable ? val.filter(function (data, index) {\n            return _this29.dt.rowSelectable({\n              data: data,\n              index: index\n            });\n          }) : val;\n          return selectableVal && this.dt.selection && selectableVal.every(function (v) {\n            return _this29.dt.selection.some(function (s) {\n              return _this29.dt.equals(v, s);\n            });\n          });\n        }\n      }\n    }]);\n\n    return TableHeaderCheckbox;\n  }();\n\n  TableHeaderCheckbox.ɵfac = function TableHeaderCheckbox_Factory(t) {\n    return new (t || TableHeaderCheckbox)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  TableHeaderCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TableHeaderCheckbox,\n    selectors: [[\"p-tableHeaderCheckbox\"]],\n    viewQuery: function TableHeaderCheckbox_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c22, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      disabled: \"disabled\",\n      inputId: \"inputId\",\n      name: \"name\",\n      ariaLabel: \"ariaLabel\"\n    },\n    decls: 8,\n    vars: 18,\n    consts: [[1, \"p-checkbox\", \"p-component\", 3, \"ngClass\", \"click\"], [\"container\", \"\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"cb\", \"\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n    template: function TableHeaderCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"click\", function TableHeaderCheckbox_Template_div_click_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3, 4);\n        i0.ɵɵlistener(\"focus\", function TableHeaderCheckbox_Template_input_focus_3_listener() {\n          return ctx.onFocus();\n        })(\"blur\", function TableHeaderCheckbox_Template_input_blur_3_listener() {\n          return ctx.onBlur();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 5, 6);\n        i0.ɵɵelement(7, \"span\", 7);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c19, ctx.focused, ctx.disabled));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.isDisabled());\n        i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(12, _c23, ctx.checked, ctx.focused, ctx.isDisabled()));\n        i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c21, ctx.checked));\n      }\n    },\n    dependencies: [i4.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TableHeaderCheckbox;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ReorderableRowHandle = /*#__PURE__*/(function () {\n  var ReorderableRowHandle = /*#__PURE__*/function () {\n    function ReorderableRowHandle(el) {\n      _classCallCheck(this, ReorderableRowHandle);\n\n      this.el = el;\n    }\n\n    _createClass(ReorderableRowHandle, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n      }\n    }]);\n\n    return ReorderableRowHandle;\n  }();\n\n  ReorderableRowHandle.ɵfac = function ReorderableRowHandle_Factory(t) {\n    return new (t || ReorderableRowHandle)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  ReorderableRowHandle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ReorderableRowHandle,\n    selectors: [[\"\", \"pReorderableRowHandle\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      index: [\"pReorderableRowHandle\", \"index\"]\n    }\n  });\n  return ReorderableRowHandle;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ReorderableRow = /*#__PURE__*/(function () {\n  var ReorderableRow = /*#__PURE__*/function () {\n    function ReorderableRow(dt, el, zone) {\n      _classCallCheck(this, ReorderableRow);\n\n      this.dt = dt;\n      this.el = el;\n      this.zone = zone;\n    }\n\n    _createClass(ReorderableRow, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        if (this.isEnabled()) {\n          this.el.nativeElement.droppable = true;\n          this.bindEvents();\n        }\n      }\n    }, {\n      key: \"bindEvents\",\n      value: function bindEvents() {\n        var _this30 = this;\n\n        this.zone.runOutsideAngular(function () {\n          _this30.mouseDownListener = _this30.onMouseDown.bind(_this30);\n\n          _this30.el.nativeElement.addEventListener('mousedown', _this30.mouseDownListener);\n\n          _this30.dragStartListener = _this30.onDragStart.bind(_this30);\n\n          _this30.el.nativeElement.addEventListener('dragstart', _this30.dragStartListener);\n\n          _this30.dragEndListener = _this30.onDragEnd.bind(_this30);\n\n          _this30.el.nativeElement.addEventListener('dragend', _this30.dragEndListener);\n\n          _this30.dragOverListener = _this30.onDragOver.bind(_this30);\n\n          _this30.el.nativeElement.addEventListener('dragover', _this30.dragOverListener);\n\n          _this30.dragLeaveListener = _this30.onDragLeave.bind(_this30);\n\n          _this30.el.nativeElement.addEventListener('dragleave', _this30.dragLeaveListener);\n        });\n      }\n    }, {\n      key: \"unbindEvents\",\n      value: function unbindEvents() {\n        if (this.mouseDownListener) {\n          document.removeEventListener('mousedown', this.mouseDownListener);\n          this.mouseDownListener = null;\n        }\n\n        if (this.dragStartListener) {\n          document.removeEventListener('dragstart', this.dragStartListener);\n          this.dragStartListener = null;\n        }\n\n        if (this.dragEndListener) {\n          document.removeEventListener('dragend', this.dragEndListener);\n          this.dragEndListener = null;\n        }\n\n        if (this.dragOverListener) {\n          document.removeEventListener('dragover', this.dragOverListener);\n          this.dragOverListener = null;\n        }\n\n        if (this.dragLeaveListener) {\n          document.removeEventListener('dragleave', this.dragLeaveListener);\n          this.dragLeaveListener = null;\n        }\n      }\n    }, {\n      key: \"onMouseDown\",\n      value: function onMouseDown(event) {\n        if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle')) this.el.nativeElement.draggable = true;else this.el.nativeElement.draggable = false;\n      }\n    }, {\n      key: \"onDragStart\",\n      value: function onDragStart(event) {\n        this.dt.onRowDragStart(event, this.index);\n      }\n    }, {\n      key: \"onDragEnd\",\n      value: function onDragEnd(event) {\n        this.dt.onRowDragEnd(event);\n        this.el.nativeElement.draggable = false;\n      }\n    }, {\n      key: \"onDragOver\",\n      value: function onDragOver(event) {\n        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n        event.preventDefault();\n      }\n    }, {\n      key: \"onDragLeave\",\n      value: function onDragLeave(event) {\n        this.dt.onRowDragLeave(event, this.el.nativeElement);\n      }\n    }, {\n      key: \"isEnabled\",\n      value: function isEnabled() {\n        return this.pReorderableRowDisabled !== true;\n      }\n    }, {\n      key: \"onDrop\",\n      value: function onDrop(event) {\n        if (this.isEnabled() && this.dt.rowDragging) {\n          this.dt.onRowDrop(event, this.el.nativeElement);\n        }\n\n        event.preventDefault();\n      }\n    }]);\n\n    return ReorderableRow;\n  }();\n\n  ReorderableRow.ɵfac = function ReorderableRow_Factory(t) {\n    return new (t || ReorderableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  ReorderableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ReorderableRow,\n    selectors: [[\"\", \"pReorderableRow\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostBindings: function ReorderableRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"drop\", function ReorderableRow_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        });\n      }\n    },\n    inputs: {\n      index: [\"pReorderableRow\", \"index\"],\n      pReorderableRowDisabled: \"pReorderableRowDisabled\"\n    }\n  });\n  return ReorderableRow;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ColumnFilterFormElement = /*#__PURE__*/(function () {\n  var ColumnFilterFormElement = /*#__PURE__*/function () {\n    function ColumnFilterFormElement(dt) {\n      _classCallCheck(this, ColumnFilterFormElement);\n\n      this.dt = dt;\n      this.useGrouping = true;\n    }\n\n    _createClass(ColumnFilterFormElement, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this31 = this;\n\n        this.filterCallback = function (value) {\n          _this31.filterConstraint.value = value;\n\n          _this31.dt._filter();\n        };\n      }\n    }, {\n      key: \"onModelChange\",\n      value: function onModelChange(value) {\n        this.filterConstraint.value = value;\n\n        if (this.type === 'boolean' || value === '') {\n          this.dt._filter();\n        }\n      }\n    }, {\n      key: \"onTextInputEnterKeyDown\",\n      value: function onTextInputEnterKeyDown(event) {\n        this.dt._filter();\n\n        event.preventDefault();\n      }\n    }, {\n      key: \"onNumericInputKeyDown\",\n      value: function onNumericInputKeyDown(event) {\n        if (event.key === 'Enter') {\n          this.dt._filter();\n\n          event.preventDefault();\n        }\n      }\n    }]);\n\n    return ColumnFilterFormElement;\n  }();\n\n  ColumnFilterFormElement.ɵfac = function ColumnFilterFormElement_Factory(t) {\n    return new (t || ColumnFilterFormElement)(i0.ɵɵdirectiveInject(Table));\n  };\n\n  ColumnFilterFormElement.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ColumnFilterFormElement,\n    selectors: [[\"p-columnFilterFormElement\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      field: \"field\",\n      type: \"type\",\n      filterConstraint: \"filterConstraint\",\n      filterTemplate: \"filterTemplate\",\n      placeholder: \"placeholder\",\n      minFractionDigits: \"minFractionDigits\",\n      maxFractionDigits: \"maxFractionDigits\",\n      prefix: \"prefix\",\n      suffix: \"suffix\",\n      locale: \"locale\",\n      localeMatcher: \"localeMatcher\",\n      currency: \"currency\",\n      currencyDisplay: \"currencyDisplay\",\n      useGrouping: \"useGrouping\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"builtInElement\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"placeholder\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngSwitchCase\"], [3, \"placeholder\", \"ngModel\", \"ngModelChange\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"placeholder\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"placeholder\", \"ngModel\", \"ngModelChange\"]],\n    template: function ColumnFilterFormElement_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ColumnFilterFormElement_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_Template, 5, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        var _r1 = i0.ɵɵreference(2);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.filterTemplate)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i5.InputNumber, i6.TriStateCheckbox, i7.Calendar, i4.NgIf, i4.NgTemplateOutlet, i4.NgSwitch, i4.NgSwitchCase, i8.InputText, i9.NgControlStatus, i9.NgModel],\n    encapsulation: 2\n  });\n  return ColumnFilterFormElement;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ColumnFilter = /*#__PURE__*/(function () {\n  var ColumnFilter = /*#__PURE__*/function () {\n    function ColumnFilter(el, dt, renderer, config, overlayService) {\n      _classCallCheck(this, ColumnFilter);\n\n      this.el = el;\n      this.dt = dt;\n      this.renderer = renderer;\n      this.config = config;\n      this.overlayService = overlayService;\n      this.type = 'text';\n      this.display = 'row';\n      this.showMenu = true;\n      this.operator = FilterOperator.AND;\n      this.showOperator = true;\n      this.showClearButton = true;\n      this.showApplyButton = true;\n      this.showMatchModes = true;\n      this.showAddButton = true;\n      this.hideOnClear = false;\n      this.maxConstraints = 2;\n      this.useGrouping = true;\n    }\n\n    _createClass(ColumnFilter, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this32 = this;\n\n        if (!this.dt.filters[this.field]) {\n          this.initFieldFilterConstraint();\n        }\n\n        this.translationSubscription = this.config.translationObserver.subscribe(function () {\n          _this32.generateMatchModeOptions();\n\n          _this32.generateOperatorOptions();\n        });\n        this.resetSubscription = this.dt.tableService.resetSource$.subscribe(function () {\n          _this32.clearFilter();\n        });\n        this.generateMatchModeOptions();\n        this.generateOperatorOptions();\n      }\n    }, {\n      key: \"generateMatchModeOptions\",\n      value: function generateMatchModeOptions() {\n        var _this33 = this;\n\n        var _a;\n\n        this.matchModes = this.matchModeOptions || ((_a = this.config.filterMatchModeOptions[this.type]) === null || _a === void 0 ? void 0 : _a.map(function (key) {\n          return {\n            label: _this33.config.getTranslation(key),\n            value: key\n          };\n        }));\n      }\n    }, {\n      key: \"generateOperatorOptions\",\n      value: function generateOperatorOptions() {\n        this.operatorOptions = [{\n          label: this.config.getTranslation(TranslationKeys.MATCH_ALL),\n          value: FilterOperator.AND\n        }, {\n          label: this.config.getTranslation(TranslationKeys.MATCH_ANY),\n          value: FilterOperator.OR\n        }];\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this34 = this;\n\n        this.templates.forEach(function (item) {\n          switch (item.getType()) {\n            case 'header':\n              _this34.headerTemplate = item.template;\n              break;\n\n            case 'filter':\n              _this34.filterTemplate = item.template;\n              break;\n\n            case 'footer':\n              _this34.footerTemplate = item.template;\n              break;\n\n            default:\n              _this34.filterTemplate = item.template;\n              break;\n          }\n        });\n      }\n    }, {\n      key: \"initFieldFilterConstraint\",\n      value: function initFieldFilterConstraint() {\n        var defaultMatchMode = this.getDefaultMatchMode();\n        this.dt.filters[this.field] = this.display == 'row' ? {\n          value: null,\n          matchMode: defaultMatchMode\n        } : [{\n          value: null,\n          matchMode: defaultMatchMode,\n          operator: this.operator\n        }];\n      }\n    }, {\n      key: \"onMenuMatchModeChange\",\n      value: function onMenuMatchModeChange(value, filterMeta) {\n        filterMeta.matchMode = value;\n\n        if (!this.showApplyButton) {\n          this.dt._filter();\n        }\n      }\n    }, {\n      key: \"onRowMatchModeChange\",\n      value: function onRowMatchModeChange(matchMode) {\n        this.dt.filters[this.field].matchMode = matchMode;\n\n        this.dt._filter();\n\n        this.hide();\n      }\n    }, {\n      key: \"onRowMatchModeKeyDown\",\n      value: function onRowMatchModeKeyDown(event) {\n        var item = event.target;\n\n        switch (event.key) {\n          case 'ArrowDown':\n            var nextItem = this.findNextItem(item);\n\n            if (nextItem) {\n              item.removeAttribute('tabindex');\n              nextItem.tabIndex = '0';\n              nextItem.focus();\n            }\n\n            event.preventDefault();\n            break;\n\n          case 'ArrowUp':\n            var prevItem = this.findPrevItem(item);\n\n            if (prevItem) {\n              item.removeAttribute('tabindex');\n              prevItem.tabIndex = '0';\n              prevItem.focus();\n            }\n\n            event.preventDefault();\n            break;\n        }\n      }\n    }, {\n      key: \"onRowClearItemClick\",\n      value: function onRowClearItemClick() {\n        this.clearFilter();\n        this.hide();\n      }\n    }, {\n      key: \"isRowMatchModeSelected\",\n      value: function isRowMatchModeSelected(matchMode) {\n        return this.dt.filters[this.field].matchMode === matchMode;\n      }\n    }, {\n      key: \"addConstraint\",\n      value: function addConstraint() {\n        this.dt.filters[this.field].push({\n          value: null,\n          matchMode: this.getDefaultMatchMode(),\n          operator: this.getDefaultOperator()\n        });\n\n        this.dt._filter();\n      }\n    }, {\n      key: \"removeConstraint\",\n      value: function removeConstraint(filterMeta) {\n        this.dt.filters[this.field] = this.dt.filters[this.field].filter(function (meta) {\n          return meta !== filterMeta;\n        });\n\n        this.dt._filter();\n      }\n    }, {\n      key: \"onOperatorChange\",\n      value: function onOperatorChange(value) {\n        var _this35 = this;\n\n        this.dt.filters[this.field].forEach(function (filterMeta) {\n          filterMeta.operator = value;\n          _this35.operator = value;\n        });\n\n        if (!this.showApplyButton) {\n          this.dt._filter();\n        }\n      }\n    }, {\n      key: \"toggleMenu\",\n      value: function toggleMenu() {\n        this.overlayVisible = !this.overlayVisible;\n      }\n    }, {\n      key: \"onToggleButtonKeyDown\",\n      value: function onToggleButtonKeyDown(event) {\n        switch (event.key) {\n          case 'Escape':\n          case 'Tab':\n            this.overlayVisible = false;\n            break;\n\n          case 'ArrowDown':\n            if (this.overlayVisible) {\n              var focusable = DomHandler.getFocusableElements(this.overlay);\n\n              if (focusable) {\n                focusable[0].focus();\n              }\n\n              event.preventDefault();\n            } else if (event.altKey) {\n              this.overlayVisible = true;\n              event.preventDefault();\n            }\n\n            break;\n        }\n      }\n    }, {\n      key: \"onEscape\",\n      value: function onEscape() {\n        this.overlayVisible = false;\n        this.icon.nativeElement.focus();\n      }\n    }, {\n      key: \"findNextItem\",\n      value: function findNextItem(item) {\n        var nextItem = item.nextElementSibling;\n        if (nextItem) return DomHandler.hasClass(nextItem, 'p-column-filter-separator') ? this.findNextItem(nextItem) : nextItem;else return item.parentElement.firstElementChild;\n      }\n    }, {\n      key: \"findPrevItem\",\n      value: function findPrevItem(item) {\n        var prevItem = item.previousElementSibling;\n        if (prevItem) return DomHandler.hasClass(prevItem, 'p-column-filter-separator') ? this.findPrevItem(prevItem) : prevItem;else return item.parentElement.lastElementChild;\n      }\n    }, {\n      key: \"onContentClick\",\n      value: function onContentClick() {\n        this.selfClick = true;\n      }\n    }, {\n      key: \"onOverlayAnimationStart\",\n      value: function onOverlayAnimationStart(event) {\n        var _this36 = this;\n\n        switch (event.toState) {\n          case 'visible':\n            this.overlay = event.element;\n            document.body.appendChild(this.overlay);\n            ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n            DomHandler.absolutePosition(this.overlay, this.icon.nativeElement);\n            this.bindDocumentClickListener();\n            this.bindDocumentResizeListener();\n            this.bindScrollListener();\n\n            this.overlayEventListener = function (e) {\n              if (_this36.overlay && _this36.overlay.contains(e.target)) {\n                _this36.selfClick = true;\n              }\n            };\n\n            this.overlaySubscription = this.overlayService.clickObservable.subscribe(this.overlayEventListener);\n            break;\n\n          case 'void':\n            this.onOverlayHide();\n\n            if (this.overlaySubscription) {\n              this.overlaySubscription.unsubscribe();\n            }\n\n            break;\n        }\n      }\n    }, {\n      key: \"onOverlayAnimationEnd\",\n      value: function onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n          case 'void':\n            ZIndexUtils.clear(event.element);\n            break;\n        }\n      }\n    }, {\n      key: \"getDefaultMatchMode\",\n      value: function getDefaultMatchMode() {\n        if (this.matchMode) {\n          return this.matchMode;\n        } else {\n          if (this.type === 'text') return FilterMatchMode.STARTS_WITH;else if (this.type === 'numeric') return FilterMatchMode.EQUALS;else if (this.type === 'date') return FilterMatchMode.DATE_IS;else return FilterMatchMode.CONTAINS;\n        }\n      }\n    }, {\n      key: \"getDefaultOperator\",\n      value: function getDefaultOperator() {\n        return this.dt.filters ? this.dt.filters[this.field][0].operator : this.operator;\n      }\n    }, {\n      key: \"hasRowFilter\",\n      value: function hasRowFilter() {\n        return this.dt.filters[this.field] && !this.dt.isFilterBlank(this.dt.filters[this.field].value);\n      }\n    }, {\n      key: \"fieldConstraints\",\n      get: function get() {\n        return this.dt.filters ? this.dt.filters[this.field] : null;\n      }\n    }, {\n      key: \"showRemoveIcon\",\n      get: function get() {\n        return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n      }\n    }, {\n      key: \"showMenuButton\",\n      get: function get() {\n        return this.showMenu && (this.display === 'row' ? this.type !== 'boolean' : true);\n      }\n    }, {\n      key: \"isShowOperator\",\n      get: function get() {\n        return this.showOperator && this.type !== 'boolean';\n      }\n    }, {\n      key: \"isShowAddConstraint\",\n      get: function get() {\n        return this.showAddButton && this.type !== 'boolean' && this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints;\n      }\n    }, {\n      key: \"applyButtonLabel\",\n      get: function get() {\n        return this.config.getTranslation(TranslationKeys.APPLY);\n      }\n    }, {\n      key: \"clearButtonLabel\",\n      get: function get() {\n        return this.config.getTranslation(TranslationKeys.CLEAR);\n      }\n    }, {\n      key: \"addRuleButtonLabel\",\n      get: function get() {\n        return this.config.getTranslation(TranslationKeys.ADD_RULE);\n      }\n    }, {\n      key: \"removeRuleButtonLabel\",\n      get: function get() {\n        return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n      }\n    }, {\n      key: \"noFilterLabel\",\n      get: function get() {\n        return this.config.getTranslation(TranslationKeys.NO_FILTER);\n      }\n    }, {\n      key: \"hasFilter\",\n      value: function hasFilter() {\n        var fieldFilter = this.dt.filters[this.field];\n\n        if (fieldFilter) {\n          if (Array.isArray(fieldFilter)) return !this.dt.isFilterBlank(fieldFilter[0].value);else return !this.dt.isFilterBlank(fieldFilter.value);\n        }\n\n        return false;\n      }\n    }, {\n      key: \"isOutsideClicked\",\n      value: function isOutsideClicked(event) {\n        return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target) || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target) || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button') || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n      }\n    }, {\n      key: \"bindDocumentClickListener\",\n      value: function bindDocumentClickListener() {\n        var _this37 = this;\n\n        if (!this.documentClickListener) {\n          var documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n          this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', function (event) {\n            if (_this37.overlayVisible && !_this37.selfClick && _this37.isOutsideClicked(event)) {\n              _this37.hide();\n            }\n\n            _this37.selfClick = false;\n          });\n        }\n      }\n    }, {\n      key: \"unbindDocumentClickListener\",\n      value: function unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n          this.documentClickListener();\n          this.documentClickListener = null;\n          this.selfClick = false;\n        }\n      }\n    }, {\n      key: \"bindDocumentResizeListener\",\n      value: function bindDocumentResizeListener() {\n        var _this38 = this;\n\n        this.documentResizeListener = function () {\n          return _this38.hide();\n        };\n\n        window.addEventListener('resize', this.documentResizeListener);\n      }\n    }, {\n      key: \"unbindDocumentResizeListener\",\n      value: function unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n          window.removeEventListener('resize', this.documentResizeListener);\n          this.documentResizeListener = null;\n        }\n      }\n    }, {\n      key: \"bindScrollListener\",\n      value: function bindScrollListener() {\n        var _this39 = this;\n\n        if (!this.scrollHandler) {\n          this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, function () {\n            if (_this39.overlayVisible) {\n              _this39.hide();\n            }\n          });\n        }\n\n        this.scrollHandler.bindScrollListener();\n      }\n    }, {\n      key: \"unbindScrollListener\",\n      value: function unbindScrollListener() {\n        if (this.scrollHandler) {\n          this.scrollHandler.unbindScrollListener();\n        }\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        this.overlayVisible = false;\n      }\n    }, {\n      key: \"onOverlayHide\",\n      value: function onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n      }\n    }, {\n      key: \"clearFilter\",\n      value: function clearFilter() {\n        this.initFieldFilterConstraint();\n\n        this.dt._filter();\n\n        if (this.hideOnClear) this.hide();\n      }\n    }, {\n      key: \"applyFilter\",\n      value: function applyFilter() {\n        this.dt._filter();\n\n        this.hide();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.overlay) {\n          this.el.nativeElement.appendChild(this.overlay);\n          ZIndexUtils.clear(this.overlay);\n          this.onOverlayHide();\n        }\n\n        if (this.translationSubscription) {\n          this.translationSubscription.unsubscribe();\n        }\n\n        if (this.resetSubscription) {\n          this.resetSubscription.unsubscribe();\n        }\n\n        if (this.overlaySubscription) {\n          this.overlaySubscription.unsubscribe();\n        }\n      }\n    }]);\n\n    return ColumnFilter;\n  }();\n\n  ColumnFilter.ɵfac = function ColumnFilter_Factory(t) {\n    return new (t || ColumnFilter)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n  };\n\n  ColumnFilter.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ColumnFilter,\n    selectors: [[\"p-columnFilter\"]],\n    contentQueries: function ColumnFilter_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function ColumnFilter_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c25, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.icon = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      field: \"field\",\n      type: \"type\",\n      display: \"display\",\n      showMenu: \"showMenu\",\n      matchMode: \"matchMode\",\n      operator: \"operator\",\n      showOperator: \"showOperator\",\n      showClearButton: \"showClearButton\",\n      showApplyButton: \"showApplyButton\",\n      showMatchModes: \"showMatchModes\",\n      showAddButton: \"showAddButton\",\n      hideOnClear: \"hideOnClear\",\n      placeholder: \"placeholder\",\n      matchModeOptions: \"matchModeOptions\",\n      maxConstraints: \"maxConstraints\",\n      minFractionDigits: \"minFractionDigits\",\n      maxFractionDigits: \"maxFractionDigits\",\n      prefix: \"prefix\",\n      suffix: \"suffix\",\n      locale: \"locale\",\n      localeMatcher: \"localeMatcher\",\n      currency: \"currency\",\n      currencyDisplay: \"currencyDisplay\",\n      useGrouping: \"useGrouping\"\n    },\n    decls: 5,\n    vars: 8,\n    consts: [[1, \"p-column-filter\", 3, \"ngClass\"], [\"class\", \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-menu-button p-link\", \"aria-haspopup\", \"true\", 3, \"ngClass\", \"click\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-clear-button p-link\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"click\", \"keydown.escape\", 4, \"ngIf\"], [1, \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"aria-haspopup\", \"true\", 1, \"p-column-filter-menu-button\", \"p-link\", 3, \"ngClass\", \"click\", \"keydown\"], [\"icon\", \"\"], [1, \"pi\", \"pi-filter-icon\", \"pi-filter\"], [\"type\", \"button\", 1, \"p-column-filter-clear-button\", \"p-link\", 3, \"ngClass\", \"click\"], [1, \"pi\", \"pi-filter-slash\"], [3, \"ngClass\", \"click\", \"keydown.escape\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-column-filter-row-items\", 4, \"ngIf\", \"ngIfElse\"], [\"menu\", \"\"], [1, \"p-column-filter-row-items\"], [\"class\", \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-column-filter-separator\"], [1, \"p-column-filter-row-item\", 3, \"click\", \"keydown\", \"keydown.enter\"], [1, \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\"], [\"class\", \"p-column-filter-operator\", 4, \"ngIf\"], [1, \"p-column-filter-constraints\"], [\"class\", \"p-column-filter-constraint\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"p-column-filter-add-rule\", 4, \"ngIf\"], [1, \"p-column-filter-buttonbar\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-outlined p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [1, \"p-column-filter-operator\"], [\"styleClass\", \"p-column-filter-operator-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [1, \"p-column-filter-constraint\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"class\", \"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"pRipple\", \"\", 1, \"p-column-filter-remove-button\", \"p-button-text\", \"p-button-danger\", \"p-button-sm\", 3, \"label\", \"click\"], [1, \"p-column-filter-add-rule\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-plus\", \"pRipple\", \"\", 1, \"p-column-filter-add-button\", \"p-button-text\", \"p-button-sm\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-outlined\", \"p-button-sm\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-sm\", 3, \"label\", \"click\"]],\n    template: function ColumnFilter_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ColumnFilter_p_columnFilterFormElement_1_Template, 1, 14, \"p-columnFilterFormElement\", 1);\n        i0.ɵɵtemplate(2, ColumnFilter_button_2_Template, 3, 5, \"button\", 2);\n        i0.ɵɵtemplate(3, ColumnFilter_button_3_Template, 3, 3, \"button\", 3);\n        i0.ɵɵtemplate(4, ColumnFilter_div_4_Template, 6, 14, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c30, ctx.display === \"row\", ctx.display === \"menu\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.display === \"row\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMenuButton);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showClearButton && ctx.display === \"row\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMenu && ctx.overlayVisible);\n      }\n    },\n    dependencies: [ColumnFilterFormElement, i10.Dropdown, i4.NgClass, i4.NgIf, i4.NgTemplateOutlet, i4.NgForOf, i9.NgControlStatus, i9.NgModel, i11.ButtonDirective],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n        opacity: 0\n      }))])])]\n    }\n  });\n  return ColumnFilter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar TableModule = /*#__PURE__*/(function () {\n  var TableModule = /*#__PURE__*/_createClass(function TableModule() {\n    _classCallCheck(this, TableModule);\n  });\n\n  TableModule.ɵfac = function TableModule_Factory(t) {\n    return new (t || TableModule)();\n  };\n\n  TableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TableModule\n  });\n  TableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], SharedModule, ScrollingModule]\n  });\n  return TableModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CancelEditableRow, CellEditor, ColumnFilter, ColumnFilterFormElement, ContextMenuRow, EditableColumn, EditableRow, FrozenColumn, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowGroupHeader, RowToggler, SaveEditableRow, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService }; //# sourceMappingURL=primeng-table.mjs.map","map":null,"metadata":{},"sourceType":"module"}